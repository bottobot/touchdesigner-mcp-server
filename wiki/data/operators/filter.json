{
  "id": "filter",
  "name": "Filter",
  "displayName": "Filter",
  "category": "CHOP",
  "subcategory": "Filters",
  "version": "",
  "lastUpdated": "2025-08-08T00:37:43.729Z",
  "sourceFile": "C:\\Program Files\\Derivative\\TouchDesigner\\Samples\\Learn\\OfflineHelp\\https.docs.derivative.ca\\Filter_CHOP.htm",
  "url": "",
  "description": "The Filter CHOP smooths or sharpens the input channels. It filters by combining each sample and a range of its neighbor samples to set the new value of that sample. Each filter type uses its own weighting factors for the neighboring samples. The Filter Width determines the number of neighbors to use.",
  "summary": "The Filter CHOP smooths or sharpens the input channels. It filters by combining each sample and a range of its neighbor samples to set the new value of that sample. Each filter type uses its own weigh",
  "details": "",
  "usage": "",
  "tips": [],
  "warnings": [],
  "parameters": [
    {
      "id": null,
      "name": "Type",
      "label": "Type",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "From Derivative\n\t\t\n\t\t\n\t\t\n\t\t\n\t\tJump to navigation\n\t\tJump to search\n\t\t\nThe Filter  smooths or sharpens the input channels. It filters by combining each sample and a range of its neighbor samples to set the new value of that sample. Each filter type uses its own weighting factors for the neighboring samples. The  determines the number of neighbors to use.\t\t\nThe default Gaussian filter nicely smooths out data, typically with a Filter Width around .3 seconds. The Box Filter is interesting when your inputs are step changes to new values: the values linearly interpolate to the new value. \nIt is useful to follow the Filter  with a Trail CHOP and connect the filtered and pre-filtered signal to its inputs.\nIf you want to pass one or more channels in, each with multi-samples, and you want to filter each sample as if each sample was its own filter, turn on the  parameter. \nFor a similar, more-abrupt effect, see the Lag CHOP.\t\t\t\nThe Filter  can filter both motion and sound, but other CHOPs are more appropriate for filtering sound (see the Audio Filter CHOP, Band EQ CHOP, and Parametric EQ CHOP).\nfilterCHOP_Class\n\nContents\n \n \n \n \n \n \n \n \n\n\n\n\nThe one Euro Filter is especially useful when a person is in an interaction loop with TouchDeigner and wants quick response: It responds quickly to large changes in value, and it smooths out jitters in the input:\n\nCutoff Frequency: Decrease it if slow speed jitter is a problem.\nSlope Cutoff Frequency: Avoids high derivative bursts caused by jitter. (The research paper implementation fixes this value to 1Hz but defaults to )\nSpeed Coefficient: Increase if high speed lag is a problem.The 1 € filter (\"one Euro filter\") is a simple algorithm to filter noisy signals for high precision and responsiveness. It uses a first order low-pass filter with an adaptive cutoff frequency: at low speeds, a low cutoff stabilizes the signal by reducing jitter, but as speed increases, the cutoff is increased to reduce lag. The algorithm is easy to implement, uses very few resources, and with two easily understood parameters, it is easy to tune. In a comparison with other filters, the 1 € filter has less lag using a reference amount of jitter reduction. (researchgate.net) \nHere is a procedure to tune the One Euro filter:\nFirst Speed Coefficient is set to 0 and Cutoff Frequency to a reasonable middle-ground value such as 1 Hz. Then the body part is held steady or moved at a very low speed while Slope Cutoff Frequency is adjusted to remove jitter and preserve an acceptable lag during these slow movements (decreasing Slope Cutoff Frequency reduces jitter but increases lag, Slope Cutoff Frequency must be > 0). Next, the body part is moved quickly in different directions while Speed Coefficient is increased with a focus on minimizing lag. First find the right order of magnitude to tune Speed Coefficient, which depends on the kind of data you manipulate and their units: do not hesitate to start with values like 0.001 or 0.0001. You can first multiply and divide Speed Coefficient by factor 10 until you notice an effect on latency when moving quickly. Note that parameters Speed Coefficient and Speed Coefficient have clear conceptual relationships: if high speed lag is a problem, increase Speed Coefficient. If slow speed jitter is a problem, decrease Slope Cutoff Frequency.\nreference: Casiez, G., Roussel, N. and Vogel, D. (2012). 1€ : A Simple Speed-based Low-pass Filter for Noisy Input in Interactive Systems\n\n\n  type -  - There are seven types of filters:\n\n gauss - This filter has a Gaussian (normal or \"bell\" curve) shape that smooths the channel. It acts as a low pass filter. The wider the filter, the lower the cutoff frequency, resulting in smoother data. halfgauss - This produces a lag on the channel. If the input channels represent values over time, this filter is seen as only using samples back in time from the current sample. For time-data, this is more realistic as you can't look ahead in time. (Maybe some day.) It has a half-bell shape. box - This filter is box-shaped, meaning that each neighbor sample it uses has the same weighting factor. It can produce unwanted steps in the output channel because the effect of the samples at the extremes of the filter don't fade out as the window slides over the samples. It low-pass filters data, similar to the Gaussian filter.NOTE: When using Gaussian or Box filtering, the channel is delayed by half the filter size (i.e. a Filter Size of 30 samples will delay the output by 15 samples). To eliminate this delay, use either a Left Half Gaussian or a Left Half Box filter. Applying a Sharpen or Edge Detect filter always delays the output by half the filter size. Applying a Despike filter will delay the output by the full filter size. halfbox - This filter produces a lag on the data, uses only samples back in time, and otherwise acts like a box filter. edge - This filter detects \"edges\", sharp changes in the input channels. It acts as a high pass filter. As the filter width is increased, more low frequencies are added. sharpen - This filter sharpens all high frequencies. It is the sum of the edge detect result and the original data. despike - This filter removes \"spikes\" (samples more than `Spike Tolerance' above or below the expected sample value). The filter width allows you to eliminate spikes that are several samples long. Wide filters will remove wide spikes (spikes of several samples) and small filters will only remove narrow spikes (one or two samples in length). ramp - This filter attempts to output an increasing ramp that increases at the 'Ramp Rate' parameter rate. The input channel to the Filter  should be increasing at this rate, with possibly some errors/noise in it. The Ramp Preserve will ignore the input channel unless the difference between the input value and the current ramp value is larger than 'Ramp Tolerance' parameter. When the difference becomes greater than the tolerance, the ramp will reset to start at the current input value. oneeuro - This filter is good for filtering noisy signals while maintaining high precision and resposiveness.\n\n  effect - The extent to which the filter affects the channel (0 - not at all, 1 - maximum effect).\n\n\n\t\t\n  width - The amount of surrounding samples used in the calculation of the current sample. It is expressed in the Units.\n\n\n\t\t\n  widthunit - Choose between using Samples, Frames, or Seconds as the units for this parameter.\n\n\n\t\t\n  spike - For the De-spike filter type, this is the amount that a sample can differ from its neighbours without being considered a spike.\n\n\n\t\t\n  ramptolerance - When using a Ramp Preserve filter, if the input value deviates from the current output ramp value by this much, then the ramp will reset to the new input value. Otherwise the Ramp Preserve will continue climbing at the specified 'Ramp Rate'.\n\n\n\t\t\n  ramprate - When using a Ramp Preserve filter, this is the rate that the 's output channel will increase. Only if the input channel value deviates from the desired output value by 'Ramp Tolerance' amount will the  instead output the input channel value.\n\n\n\t\t\n  passes - The number of times the filter is applied to the channel.\n\n\n\t\t\n  filterpersample - Applies the filter to each sample of the channel instead of across the whole channel. Useful for working with multi-sample channels.\n\n\n\t\t\n  cutoff - Decrease it if slow speed jitter is a problem.\n\n\n\t\n  speedcoeff - Increase if high speed lag is a problem.\n\n\n\t\n  slopecutoff - Avoids high derivative bursts caused by jitter.\n\n\n\t\n  reset - When On resets (bypasses) the filter effect.\n\n\n\t\n  resetpulse - Instantly resets the filter effect.\n\n\n\n\n\n  timeslice - Turning this on forces the channels to be \"Time Sliced\".  A  is the time between the last cook frame and the current cook frame.\n\n\n\n  scope - To determine which channels get affected, some CHOPs use a  string on the Common page. See Pattern Matching.\n\n\n\n  srselect -  - Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \"Linear\" if the Interpolate Options are not available.\n\n first - Use rate of first input to resample others. max - Resample to the highest sample rate. min - Resample to the lowest sample rate. err - Doesn't accept conflicting sample rates.\n\n  exportmethod -  - This will determine how to connect the  channel to the parameter. Refer to the Export article for more information.\n\n datindex - Uses the docked  table and references the channel via the index of the channel in the . datname - Uses the docked  table and references the channel via the name of the channel in the . autoname - The channel is the full destination of where to export to, such has geo1/transform1:tx.\n\n  autoexportroot - This path points to the root node where all of the paths that exporting by Channel Name is : are relative to.\n\n\n\n  exporttable - The  used to hold the export information when using the  Table  Methods (See above).\n\n\n\n\n\n -\n -\n\nExtra Information for the Filter  can be accessed via an Info CHOP.\n\n\n\n - Start of the  interval in samples. - Number of samples in the . - The samplerate of the channels in frames per second. - Number of channels in the . - 1 if  is  enabled, 0 otherwise. - A count of how often the export connections have been updated.\n - Number of times the operator has cooked since the process started. - Duration of the last cook in milliseconds. - Frame number when this operator was last cooked relative to the component timeline. - Frame number when this operator was last cooked relative to the absolute time. - Time in milliseconds at which the operator started cooking in the frame it was cooked. - Time in milliseconds at which the operator finished cooking in the frame it was cooked. - 1 if operator was cooked this frame. - Number of warnings in this operator if any. - Number of errors in this operator if any.\nTouchDesigner Build: Latest\\nwikieditor2022.241402021.100002018.28070before 2018.28070\nCHOPs\n• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • \n\nAn Operator Family which operate on Channels (a sequence of numbers (Samples)) which are used for animation, audio, mathematics, simulation, logic, UI construction, and data streamed from/to devices and protocols.\n\n\n\nA powerful feature of CHOPs that filter over time, like the Lag CHOP and Filter CHOP where each sample acts as its own filter.\n\n\n\nOperators that need 1 or more inputs are called Filters in TouchDesigner, like a Math CHOP. See Generator.\n\n\n\nTo \"pulse\" a parameter is to send it a signal from (1) an exported CHOP channel or (2) a python command or (3) a mouse click that causes a new action to occur immediately. A pulse via python is via the .pulse() function on a pulse-type parameter, such as Reset parameter in a Speed CHOP. A pulse from a CHOP is typically a 0 to 1 to 0 signal in an exported channel.\n\n\n\nA Time Slice is the time from the last cook frame to the current cook frame. In CHOPs it is the set of short channels that contain the CHOP channels' samples between the last and the current cook frame.\n\n\n\nA parameter in most CHOPs that restricts which channels of that CHOP will be affected. Normally all channels of a CHOP are affected by the operator. TOPs have Channel Mask, a similar feature.\n\n\n\nsamples-per-second of a CHOP. Each CHOP in your network has a sample rate. In contrast, the overall timeline has a Frame Rate, which is the number of frames to cook and display per second, generally your monitor display frequency, default 60.\n\n\n\nExporting is the connection of CHOP channels to parameters of operators. The output of each exporting CHOP is one or more channels, active only while the CHOP Viewer is on. The current value of a channel can be exported to a parameter of any operator, overriding that parameter's value. See Parameter.\n\n\n\nAn Operator Family that manipulates text strings: multi-line text or tables. Multi-line text is often a python Script or GLSL Shader, but can be any multi-line text. Tables are rows and columns of cells, each containing a text string.\n\n\n\nThe location of an operator within the TouchDesigner environment, for example, /geo1/circle1, a node called circle1 in a component called geo1. The path / is called Root. This path is displayed at the top of every Pane, showing which Component's network you are currently in. To refer instead to a filesystem folder, directory, disk file or http: address, see Folder.\n\n\n\nEvery operator in TouchDesigner has a set of control Parameters that can be integer or floating point numbers, menus, binary toggles, text strings or operator paths, which determine the output of the operator.\n\n\n\nTouchDesigner is a hierarchy of components. \"root\" is the top-most network in the hierarchy. The Network Path or Path for root is simply /. A typical path is /project1/moviein1.\n\n\n\n\n\n\n\n\nRetrieved from \"https://docs.derivative.ca/index.php?title=Filter_CHOP&oldid=28712\"\n\t\tCategory: CHOPs",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.723Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Type",
      "label": "Type",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "From Derivative\n\t\t\n\t\t\n\t\t\n\t\t\n\t\tJump to navigation\n\t\tJump to search\n\t\t\nThe Filter  smooths or sharpens the input channels. It filters by combining each sample and a range of its neighbor samples to set the new value of that sample. Each filter type uses its own weighting factors for the neighboring samples. The  determines the number of neighbors to use.\t\t\nThe default Gaussian filter nicely smooths out data, typically with a Filter Width around .3 seconds. The Box Filter is interesting when your inputs are step changes to new values: the values linearly interpolate to the new value. \nIt is useful to follow the Filter  with a Trail CHOP and connect the filtered and pre-filtered signal to its inputs.\nIf you want to pass one or more channels in, each with multi-samples, and you want to filter each sample as if each sample was its own filter, turn on the  parameter. \nFor a similar, more-abrupt effect, see the Lag CHOP.\t\t\t\nThe Filter  can filter both motion and sound, but other CHOPs are more appropriate for filtering sound (see the Audio Filter CHOP, Band EQ CHOP, and Parametric EQ CHOP).\nfilterCHOP_Class\n\nContents\n \n \n \n \n \n \n \n \n\n\n\n\nThe one Euro Filter is especially useful when a person is in an interaction loop with TouchDeigner and wants quick response: It responds quickly to large changes in value, and it smooths out jitters in the input:\n\nCutoff Frequency: Decrease it if slow speed jitter is a problem.\nSlope Cutoff Frequency: Avoids high derivative bursts caused by jitter. (The research paper implementation fixes this value to 1Hz but defaults to )\nSpeed Coefficient: Increase if high speed lag is a problem.The 1 € filter (\"one Euro filter\") is a simple algorithm to filter noisy signals for high precision and responsiveness. It uses a first order low-pass filter with an adaptive cutoff frequency: at low speeds, a low cutoff stabilizes the signal by reducing jitter, but as speed increases, the cutoff is increased to reduce lag. The algorithm is easy to implement, uses very few resources, and with two easily understood parameters, it is easy to tune. In a comparison with other filters, the 1 € filter has less lag using a reference amount of jitter reduction. (researchgate.net) \nHere is a procedure to tune the One Euro filter:\nFirst Speed Coefficient is set to 0 and Cutoff Frequency to a reasonable middle-ground value such as 1 Hz. Then the body part is held steady or moved at a very low speed while Slope Cutoff Frequency is adjusted to remove jitter and preserve an acceptable lag during these slow movements (decreasing Slope Cutoff Frequency reduces jitter but increases lag, Slope Cutoff Frequency must be > 0). Next, the body part is moved quickly in different directions while Speed Coefficient is increased with a focus on minimizing lag. First find the right order of magnitude to tune Speed Coefficient, which depends on the kind of data you manipulate and their units: do not hesitate to start with values like 0.001 or 0.0001. You can first multiply and divide Speed Coefficient by factor 10 until you notice an effect on latency when moving quickly. Note that parameters Speed Coefficient and Speed Coefficient have clear conceptual relationships: if high speed lag is a problem, increase Speed Coefficient. If slow speed jitter is a problem, decrease Slope Cutoff Frequency.\nreference: Casiez, G., Roussel, N. and Vogel, D. (2012). 1€ : A Simple Speed-based Low-pass Filter for Noisy Input in Interactive Systems\n\n\n  type -  - There are seven types of filters:\n\n gauss - This filter has a Gaussian (normal or \"bell\" curve) shape that smooths the channel. It acts as a low pass filter. The wider the filter, the lower the cutoff frequency, resulting in smoother data. halfgauss - This produces a lag on the channel. If the input channels represent values over time, this filter is seen as only using samples back in time from the current sample. For time-data, this is more realistic as you can't look ahead in time. (Maybe some day.) It has a half-bell shape. box - This filter is box-shaped, meaning that each neighbor sample it uses has the same weighting factor. It can produce unwanted steps in the output channel because the effect of the samples at the extremes of the filter don't fade out as the window slides over the samples. It low-pass filters data, similar to the Gaussian filter.NOTE: When using Gaussian or Box filtering, the channel is delayed by half the filter size (i.e. a Filter Size of 30 samples will delay the output by 15 samples). To eliminate this delay, use either a Left Half Gaussian or a Left Half Box filter. Applying a Sharpen or Edge Detect filter always delays the output by half the filter size. Applying a Despike filter will delay the output by the full filter size. halfbox - This filter produces a lag on the data, uses only samples back in time, and otherwise acts like a box filter. edge - This filter detects \"edges\", sharp changes in the input channels. It acts as a high pass filter. As the filter width is increased, more low frequencies are added. sharpen - This filter sharpens all high frequencies. It is the sum of the edge detect result and the original data. despike - This filter removes \"spikes\" (samples more than `Spike Tolerance' above or below the expected sample value). The filter width allows you to eliminate spikes that are several samples long. Wide filters will remove wide spikes (spikes of several samples) and small filters will only remove narrow spikes (one or two samples in length). ramp - This filter attempts to output an increasing ramp that increases at the 'Ramp Rate' parameter rate. The input channel to the Filter  should be increasing at this rate, with possibly some errors/noise in it. The Ramp Preserve will ignore the input channel unless the difference between the input value and the current ramp value is larger than 'Ramp Tolerance' parameter. When the difference becomes greater than the tolerance, the ramp will reset to start at the current input value. oneeuro - This filter is good for filtering noisy signals while maintaining high precision and resposiveness.\n\n  effect - The extent to which the filter affects the channel (0 - not at all, 1 - maximum effect).\n\n\n\t\t\n  width - The amount of surrounding samples used in the calculation of the current sample. It is expressed in the Units.\n\n\n\t\t\n  widthunit - Choose between using Samples, Frames, or Seconds as the units for this parameter.\n\n\n\t\t\n  spike - For the De-spike filter type, this is the amount that a sample can differ from its neighbours without being considered a spike.\n\n\n\t\t\n  ramptolerance - When using a Ramp Preserve filter, if the input value deviates from the current output ramp value by this much, then the ramp will reset to the new input value. Otherwise the Ramp Preserve will continue climbing at the specified 'Ramp Rate'.\n\n\n\t\t\n  ramprate - When using a Ramp Preserve filter, this is the rate that the 's output channel will increase. Only if the input channel value deviates from the desired output value by 'Ramp Tolerance' amount will the  instead output the input channel value.\n\n\n\t\t\n  passes - The number of times the filter is applied to the channel.\n\n\n\t\t\n  filterpersample - Applies the filter to each sample of the channel instead of across the whole channel. Useful for working with multi-sample channels.\n\n\n\t\t\n  cutoff - Decrease it if slow speed jitter is a problem.\n\n\n\t\n  speedcoeff - Increase if high speed lag is a problem.\n\n\n\t\n  slopecutoff - Avoids high derivative bursts caused by jitter.\n\n\n\t\n  reset - When On resets (bypasses) the filter effect.\n\n\n\t\n  resetpulse - Instantly resets the filter effect.\n\n\n\n\n\n  timeslice - Turning this on forces the channels to be \"Time Sliced\".  A  is the time between the last cook frame and the current cook frame.\n\n\n\n  scope - To determine which channels get affected, some CHOPs use a  string on the Common page. See Pattern Matching.\n\n\n\n  srselect -  - Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \"Linear\" if the Interpolate Options are not available.\n\n first - Use rate of first input to resample others. max - Resample to the highest sample rate. min - Resample to the lowest sample rate. err - Doesn't accept conflicting sample rates.\n\n  exportmethod -  - This will determine how to connect the  channel to the parameter. Refer to the Export article for more information.\n\n datindex - Uses the docked  table and references the channel via the index of the channel in the . datname - Uses the docked  table and references the channel via the name of the channel in the . autoname - The channel is the full destination of where to export to, such has geo1/transform1:tx.\n\n  autoexportroot - This path points to the root node where all of the paths that exporting by Channel Name is : are relative to.\n\n\n\n  exporttable - The  used to hold the export information when using the  Table  Methods (See above).\n\n\n\n\n\n -\n -\n\nExtra Information for the Filter  can be accessed via an Info CHOP.\n\n\n\n - Start of the  interval in samples. - Number of samples in the . - The samplerate of the channels in frames per second. - Number of channels in the . - 1 if  is  enabled, 0 otherwise. - A count of how often the export connections have been updated.\n - Number of times the operator has cooked since the process started. - Duration of the last cook in milliseconds. - Frame number when this operator was last cooked relative to the component timeline. - Frame number when this operator was last cooked relative to the absolute time. - Time in milliseconds at which the operator started cooking in the frame it was cooked. - Time in milliseconds at which the operator finished cooking in the frame it was cooked. - 1 if operator was cooked this frame. - Number of warnings in this operator if any. - Number of errors in this operator if any.\nTouchDesigner Build: Latest\\nwikieditor2022.241402021.100002018.28070before 2018.28070\nCHOPs\n• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • \n\nAn Operator Family which operate on Channels (a sequence of numbers (Samples)) which are used for animation, audio, mathematics, simulation, logic, UI construction, and data streamed from/to devices and protocols.\n\n\n\nA powerful feature of CHOPs that filter over time, like the Lag CHOP and Filter CHOP where each sample acts as its own filter.\n\n\n\nOperators that need 1 or more inputs are called Filters in TouchDesigner, like a Math CHOP. See Generator.\n\n\n\nTo \"pulse\" a parameter is to send it a signal from (1) an exported CHOP channel or (2) a python command or (3) a mouse click that causes a new action to occur immediately. A pulse via python is via the .pulse() function on a pulse-type parameter, such as Reset parameter in a Speed CHOP. A pulse from a CHOP is typically a 0 to 1 to 0 signal in an exported channel.\n\n\n\nA Time Slice is the time from the last cook frame to the current cook frame. In CHOPs it is the set of short channels that contain the CHOP channels' samples between the last and the current cook frame.\n\n\n\nA parameter in most CHOPs that restricts which channels of that CHOP will be affected. Normally all channels of a CHOP are affected by the operator. TOPs have Channel Mask, a similar feature.\n\n\n\nsamples-per-second of a CHOP. Each CHOP in your network has a sample rate. In contrast, the overall timeline has a Frame Rate, which is the number of frames to cook and display per second, generally your monitor display frequency, default 60.\n\n\n\nExporting is the connection of CHOP channels to parameters of operators. The output of each exporting CHOP is one or more channels, active only while the CHOP Viewer is on. The current value of a channel can be exported to a parameter of any operator, overriding that parameter's value. See Parameter.\n\n\n\nAn Operator Family that manipulates text strings: multi-line text or tables. Multi-line text is often a python Script or GLSL Shader, but can be any multi-line text. Tables are rows and columns of cells, each containing a text string.\n\n\n\nThe location of an operator within the TouchDesigner environment, for example, /geo1/circle1, a node called circle1 in a component called geo1. The path / is called Root. This path is displayed at the top of every Pane, showing which Component's network you are currently in. To refer instead to a filesystem folder, directory, disk file or http: address, see Folder.\n\n\n\nEvery operator in TouchDesigner has a set of control Parameters that can be integer or floating point numbers, menus, binary toggles, text strings or operator paths, which determine the output of the operator.\n\n\n\nTouchDesigner is a hierarchy of components. \"root\" is the top-most network in the hierarchy. The Network Path or Path for root is simply /. A typical path is /project1/moviein1.\n\n\n\n\n\n\n\n\nRetrieved from \"https://docs.derivative.ca/index.php?title=Filter_CHOP&oldid=28712\"\n\t\tCategory: CHOPs",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.725Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Type",
      "label": "Type",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "The Filter  smooths or sharpens the input channels. It filters by combining each sample and a range of its neighbor samples to set the new value of that sample. Each filter type uses its own weighting factors for the neighboring samples. The  determines the number of neighbors to use.\t\t\nThe default Gaussian filter nicely smooths out data, typically with a Filter Width around .3 seconds. The Box Filter is interesting when your inputs are step changes to new values: the values linearly interpolate to the new value. \nIt is useful to follow the Filter  with a Trail CHOP and connect the filtered and pre-filtered signal to its inputs.\nIf you want to pass one or more channels in, each with multi-samples, and you want to filter each sample as if each sample was its own filter, turn on the  parameter. \nFor a similar, more-abrupt effect, see the Lag CHOP.\t\t\t\nThe Filter  can filter both motion and sound, but other CHOPs are more appropriate for filtering sound (see the Audio Filter CHOP, Band EQ CHOP, and Parametric EQ CHOP).\nfilterCHOP_Class\n\nContents\n \n \n \n \n \n \n \n \n\n\n\n\nThe one Euro Filter is especially useful when a person is in an interaction loop with TouchDeigner and wants quick response: It responds quickly to large changes in value, and it smooths out jitters in the input:\n\nCutoff Frequency: Decrease it if slow speed jitter is a problem.\nSlope Cutoff Frequency: Avoids high derivative bursts caused by jitter. (The research paper implementation fixes this value to 1Hz but defaults to )\nSpeed Coefficient: Increase if high speed lag is a problem.The 1 € filter (\"one Euro filter\") is a simple algorithm to filter noisy signals for high precision and responsiveness. It uses a first order low-pass filter with an adaptive cutoff frequency: at low speeds, a low cutoff stabilizes the signal by reducing jitter, but as speed increases, the cutoff is increased to reduce lag. The algorithm is easy to implement, uses very few resources, and with two easily understood parameters, it is easy to tune. In a comparison with other filters, the 1 € filter has less lag using a reference amount of jitter reduction. (researchgate.net) \nHere is a procedure to tune the One Euro filter:\nFirst Speed Coefficient is set to 0 and Cutoff Frequency to a reasonable middle-ground value such as 1 Hz. Then the body part is held steady or moved at a very low speed while Slope Cutoff Frequency is adjusted to remove jitter and preserve an acceptable lag during these slow movements (decreasing Slope Cutoff Frequency reduces jitter but increases lag, Slope Cutoff Frequency must be > 0). Next, the body part is moved quickly in different directions while Speed Coefficient is increased with a focus on minimizing lag. First find the right order of magnitude to tune Speed Coefficient, which depends on the kind of data you manipulate and their units: do not hesitate to start with values like 0.001 or 0.0001. You can first multiply and divide Speed Coefficient by factor 10 until you notice an effect on latency when moving quickly. Note that parameters Speed Coefficient and Speed Coefficient have clear conceptual relationships: if high speed lag is a problem, increase Speed Coefficient. If slow speed jitter is a problem, decrease Slope Cutoff Frequency.\nreference: Casiez, G., Roussel, N. and Vogel, D. (2012). 1€ : A Simple Speed-based Low-pass Filter for Noisy Input in Interactive Systems\n\n\n  type -  - There are seven types of filters:\n\n gauss - This filter has a Gaussian (normal or \"bell\" curve) shape that smooths the channel. It acts as a low pass filter. The wider the filter, the lower the cutoff frequency, resulting in smoother data. halfgauss - This produces a lag on the channel. If the input channels represent values over time, this filter is seen as only using samples back in time from the current sample. For time-data, this is more realistic as you can't look ahead in time. (Maybe some day.) It has a half-bell shape. box - This filter is box-shaped, meaning that each neighbor sample it uses has the same weighting factor. It can produce unwanted steps in the output channel because the effect of the samples at the extremes of the filter don't fade out as the window slides over the samples. It low-pass filters data, similar to the Gaussian filter.NOTE: When using Gaussian or Box filtering, the channel is delayed by half the filter size (i.e. a Filter Size of 30 samples will delay the output by 15 samples). To eliminate this delay, use either a Left Half Gaussian or a Left Half Box filter. Applying a Sharpen or Edge Detect filter always delays the output by half the filter size. Applying a Despike filter will delay the output by the full filter size. halfbox - This filter produces a lag on the data, uses only samples back in time, and otherwise acts like a box filter. edge - This filter detects \"edges\", sharp changes in the input channels. It acts as a high pass filter. As the filter width is increased, more low frequencies are added. sharpen - This filter sharpens all high frequencies. It is the sum of the edge detect result and the original data. despike - This filter removes \"spikes\" (samples more than `Spike Tolerance' above or below the expected sample value). The filter width allows you to eliminate spikes that are several samples long. Wide filters will remove wide spikes (spikes of several samples) and small filters will only remove narrow spikes (one or two samples in length). ramp - This filter attempts to output an increasing ramp that increases at the 'Ramp Rate' parameter rate. The input channel to the Filter  should be increasing at this rate, with possibly some errors/noise in it. The Ramp Preserve will ignore the input channel unless the difference between the input value and the current ramp value is larger than 'Ramp Tolerance' parameter. When the difference becomes greater than the tolerance, the ramp will reset to start at the current input value. oneeuro - This filter is good for filtering noisy signals while maintaining high precision and resposiveness.\n\n  effect - The extent to which the filter affects the channel (0 - not at all, 1 - maximum effect).\n\n\n\t\t\n  width - The amount of surrounding samples used in the calculation of the current sample. It is expressed in the Units.\n\n\n\t\t\n  widthunit - Choose between using Samples, Frames, or Seconds as the units for this parameter.\n\n\n\t\t\n  spike - For the De-spike filter type, this is the amount that a sample can differ from its neighbours without being considered a spike.\n\n\n\t\t\n  ramptolerance - When using a Ramp Preserve filter, if the input value deviates from the current output ramp value by this much, then the ramp will reset to the new input value. Otherwise the Ramp Preserve will continue climbing at the specified 'Ramp Rate'.\n\n\n\t\t\n  ramprate - When using a Ramp Preserve filter, this is the rate that the 's output channel will increase. Only if the input channel value deviates from the desired output value by 'Ramp Tolerance' amount will the  instead output the input channel value.\n\n\n\t\t\n  passes - The number of times the filter is applied to the channel.\n\n\n\t\t\n  filterpersample - Applies the filter to each sample of the channel instead of across the whole channel. Useful for working with multi-sample channels.\n\n\n\t\t\n  cutoff - Decrease it if slow speed jitter is a problem.\n\n\n\t\n  speedcoeff - Increase if high speed lag is a problem.\n\n\n\t\n  slopecutoff - Avoids high derivative bursts caused by jitter.\n\n\n\t\n  reset - When On resets (bypasses) the filter effect.\n\n\n\t\n  resetpulse - Instantly resets the filter effect.\n\n\n\n\n\n  timeslice - Turning this on forces the channels to be \"Time Sliced\".  A  is the time between the last cook frame and the current cook frame.\n\n\n\n  scope - To determine which channels get affected, some CHOPs use a  string on the Common page. See Pattern Matching.\n\n\n\n  srselect -  - Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \"Linear\" if the Interpolate Options are not available.\n\n first - Use rate of first input to resample others. max - Resample to the highest sample rate. min - Resample to the lowest sample rate. err - Doesn't accept conflicting sample rates.\n\n  exportmethod -  - This will determine how to connect the  channel to the parameter. Refer to the Export article for more information.\n\n datindex - Uses the docked  table and references the channel via the index of the channel in the . datname - Uses the docked  table and references the channel via the name of the channel in the . autoname - The channel is the full destination of where to export to, such has geo1/transform1:tx.\n\n  autoexportroot - This path points to the root node where all of the paths that exporting by Channel Name is : are relative to.\n\n\n\n  exporttable - The  used to hold the export information when using the  Table  Methods (See above).\n\n\n\n\n\n -\n -\n\nExtra Information for the Filter  can be accessed via an Info CHOP.\n\n\n\n - Start of the  interval in samples. - Number of samples in the . - The samplerate of the channels in frames per second. - Number of channels in the . - 1 if  is  enabled, 0 otherwise. - A count of how often the export connections have been updated.\n - Number of times the operator has cooked since the process started. - Duration of the last cook in milliseconds. - Frame number when this operator was last cooked relative to the component timeline. - Frame number when this operator was last cooked relative to the absolute time. - Time in milliseconds at which the operator started cooking in the frame it was cooked. - Time in milliseconds at which the operator finished cooking in the frame it was cooked. - 1 if operator was cooked this frame. - Number of warnings in this operator if any. - Number of errors in this operator if any.\nTouchDesigner Build: Latest\\nwikieditor2022.241402021.100002018.28070before 2018.28070\nCHOPs\n• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • \n\nAn Operator Family which operate on Channels (a sequence of numbers (Samples)) which are used for animation, audio, mathematics, simulation, logic, UI construction, and data streamed from/to devices and protocols.\n\n\n\nA powerful feature of CHOPs that filter over time, like the Lag CHOP and Filter CHOP where each sample acts as its own filter.\n\n\n\nOperators that need 1 or more inputs are called Filters in TouchDesigner, like a Math CHOP. See Generator.\n\n\n\nTo \"pulse\" a parameter is to send it a signal from (1) an exported CHOP channel or (2) a python command or (3) a mouse click that causes a new action to occur immediately. A pulse via python is via the .pulse() function on a pulse-type parameter, such as Reset parameter in a Speed CHOP. A pulse from a CHOP is typically a 0 to 1 to 0 signal in an exported channel.\n\n\n\nA Time Slice is the time from the last cook frame to the current cook frame. In CHOPs it is the set of short channels that contain the CHOP channels' samples between the last and the current cook frame.\n\n\n\nA parameter in most CHOPs that restricts which channels of that CHOP will be affected. Normally all channels of a CHOP are affected by the operator. TOPs have Channel Mask, a similar feature.\n\n\n\nsamples-per-second of a CHOP. Each CHOP in your network has a sample rate. In contrast, the overall timeline has a Frame Rate, which is the number of frames to cook and display per second, generally your monitor display frequency, default 60.\n\n\n\nExporting is the connection of CHOP channels to parameters of operators. The output of each exporting CHOP is one or more channels, active only while the CHOP Viewer is on. The current value of a channel can be exported to a parameter of any operator, overriding that parameter's value. See Parameter.\n\n\n\nAn Operator Family that manipulates text strings: multi-line text or tables. Multi-line text is often a python Script or GLSL Shader, but can be any multi-line text. Tables are rows and columns of cells, each containing a text string.\n\n\n\nThe location of an operator within the TouchDesigner environment, for example, /geo1/circle1, a node called circle1 in a component called geo1. The path / is called Root. This path is displayed at the top of every Pane, showing which Component's network you are currently in. To refer instead to a filesystem folder, directory, disk file or http: address, see Folder.\n\n\n\nEvery operator in TouchDesigner has a set of control Parameters that can be integer or floating point numbers, menus, binary toggles, text strings or operator paths, which determine the output of the operator.\n\n\n\nTouchDesigner is a hierarchy of components. \"root\" is the top-most network in the hierarchy. The Network Path or Path for root is simply /. A typical path is /project1/moviein1.\n\n\n\n\n\n\n\n\nRetrieved from \"https://docs.derivative.ca/index.php?title=Filter_CHOP&oldid=28712\"",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.727Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Type",
      "label": "Type",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "type -  - There are seven types of filters:\n\n gauss - This filter has a Gaussian (normal or \"bell\" curve) shape that smooths the channel. It acts as a low pass filter. The wider the filter, the lower the cutoff frequency, resulting in smoother data. halfgauss - This produces a lag on the channel. If the input channels represent values over time, this filter is seen as only using samples back in time from the current sample. For time-data, this is more realistic as you can't look ahead in time. (Maybe some day.) It has a half-bell shape. box - This filter is box-shaped, meaning that each neighbor sample it uses has the same weighting factor. It can produce unwanted steps in the output channel because the effect of the samples at the extremes of the filter don't fade out as the window slides over the samples. It low-pass filters data, similar to the Gaussian filter.NOTE: When using Gaussian or Box filtering, the channel is delayed by half the filter size (i.e. a Filter Size of 30 samples will delay the output by 15 samples). To eliminate this delay, use either a Left Half Gaussian or a Left Half Box filter. Applying a Sharpen or Edge Detect filter always delays the output by half the filter size. Applying a Despike filter will delay the output by the full filter size. halfbox - This filter produces a lag on the data, uses only samples back in time, and otherwise acts like a box filter. edge - This filter detects \"edges\", sharp changes in the input channels. It acts as a high pass filter. As the filter width is increased, more low frequencies are added. sharpen - This filter sharpens all high frequencies. It is the sum of the edge detect result and the original data. despike - This filter removes \"spikes\" (samples more than `Spike Tolerance' above or below the expected sample value). The filter width allows you to eliminate spikes that are several samples long. Wide filters will remove wide spikes (spikes of several samples) and small filters will only remove narrow spikes (one or two samples in length). ramp - This filter attempts to output an increasing ramp that increases at the 'Ramp Rate' parameter rate. The input channel to the Filter  should be increasing at this rate, with possibly some errors/noise in it. The Ramp Preserve will ignore the input channel unless the difference between the input value and the current ramp value is larger than 'Ramp Tolerance' parameter. When the difference becomes greater than the tolerance, the ramp will reset to start at the current input value. oneeuro - This filter is good for filtering noisy signals while maintaining high precision and resposiveness.",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.727Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Gaussian",
      "label": "Gaussian",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "gauss - This filter has a Gaussian (normal or \"bell\" curve) shape that smooths the channel. It acts as a low pass filter. The wider the filter, the lower the cutoff frequency, resulting in smoother data. halfgauss - This produces a lag on the channel. If the input channels represent values over time, this filter is seen as only using samples back in time from the current sample. For time-data, this is more realistic as you can't look ahead in time. (Maybe some day.) It has a half-bell shape. box - This filter is box-shaped, meaning that each neighbor sample it uses has the same weighting factor. It can produce unwanted steps in the output channel because the effect of the samples at the extremes of the filter don't fade out as the window slides over the samples. It low-pass filters data, similar to the Gaussian filter.NOTE: When using Gaussian or Box filtering, the channel is delayed by half the filter size (i.e. a Filter Size of 30 samples will delay the output by 15 samples). To eliminate this delay, use either a Left Half Gaussian or a Left Half Box filter. Applying a Sharpen or Edge Detect filter always delays the output by half the filter size. Applying a Despike filter will delay the output by the full filter size. halfbox - This filter produces a lag on the data, uses only samples back in time, and otherwise acts like a box filter. edge - This filter detects \"edges\", sharp changes in the input channels. It acts as a high pass filter. As the filter width is increased, more low frequencies are added. sharpen - This filter sharpens all high frequencies. It is the sum of the edge detect result and the original data. despike - This filter removes \"spikes\" (samples more than `Spike Tolerance' above or below the expected sample value). The filter width allows you to eliminate spikes that are several samples long. Wide filters will remove wide spikes (spikes of several samples) and small filters will only remove narrow spikes (one or two samples in length). ramp - This filter attempts to output an increasing ramp that increases at the 'Ramp Rate' parameter rate. The input channel to the Filter  should be increasing at this rate, with possibly some errors/noise in it. The Ramp Preserve will ignore the input channel unless the difference between the input value and the current ramp value is larger than 'Ramp Tolerance' parameter. When the difference becomes greater than the tolerance, the ramp will reset to start at the current input value. oneeuro - This filter is good for filtering noisy signals while maintaining high precision and resposiveness.",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.727Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Effect",
      "label": "Effect",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "effect - The extent to which the filter affects the channel (0 - not at all, 1 - maximum effect).",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.727Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Filter Width",
      "label": "Filter Width",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "width - The amount of surrounding samples used in the calculation of the current sample. It is expressed in the Units.",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.728Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Filter Width Unit",
      "label": "Filter Width Unit",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "widthunit - Choose between using Samples, Frames, or Seconds as the units for this parameter.",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.728Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Spike Tolerance",
      "label": "Spike Tolerance",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "spike - For the De-spike filter type, this is the amount that a sample can differ from its neighbours without being considered a spike.",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.728Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Ramp Tolerance",
      "label": "Ramp Tolerance",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "ramptolerance - When using a Ramp Preserve filter, if the input value deviates from the current output ramp value by this much, then the ramp will reset to the new input value. Otherwise the Ramp Preserve will continue climbing at the specified 'Ramp Rate'.",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.728Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Ramp Rate",
      "label": "Ramp Rate",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "ramprate - When using a Ramp Preserve filter, this is the rate that the 's output channel will increase. Only if the input channel value deviates from the desired output value by 'Ramp Tolerance' amount will the  instead output the input channel value.",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.728Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Number of Passes",
      "label": "Number of Passes",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "passes - The number of times the filter is applied to the channel.",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.728Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Filter per Sample",
      "label": "Filter per Sample",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "filterpersample - Applies the filter to each sample of the channel instead of across the whole channel. Useful for working with multi-sample channels.",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.728Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Cutoff Frequency (Hz)",
      "label": "Cutoff Frequency (Hz)",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "cutoff - Decrease it if slow speed jitter is a problem.",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.728Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Speed Coefficient",
      "label": "Speed Coefficient",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "speedcoeff - Increase if high speed lag is a problem.",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.728Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Slope Cutoff Frequency (Hz)",
      "label": "Slope Cutoff Frequency (Hz)",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "slopecutoff - Avoids high derivative bursts caused by jitter.",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.728Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Reset",
      "label": "Reset",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "reset - When On resets (bypasses) the filter effect.",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.728Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Reset Pulse",
      "label": "Reset Pulse",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "resetpulse - Instantly resets the filter effect.",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.728Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Time Slice",
      "label": "Time Slice",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "timeslice - Turning this on forces the channels to be \"Time Sliced\".  A  is the time between the last cook frame and the current cook frame.",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.728Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Scope",
      "label": "Scope",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "scope - To determine which channels get affected, some CHOPs use a  string on the Common page. See Pattern Matching.",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.728Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Sample Rate Match",
      "label": "Sample Rate Match",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "srselect -  - Handle cases where multiple input CHOPs' sample rates are different. When Resampling occurs, the curves are interpolated according to the Interpolation Method Option, or \"Linear\" if the Interpolate Options are not available.\n\n first - Use rate of first input to resample others. max - Resample to the highest sample rate. min - Resample to the lowest sample rate. err - Doesn't accept conflicting sample rates.",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.728Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Resample At First Input's Rate",
      "label": "Resample At First Input's Rate",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "first - Use rate of first input to resample others. max - Resample to the highest sample rate. min - Resample to the lowest sample rate. err - Doesn't accept conflicting sample rates.",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.728Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Export Method",
      "label": "Export Method",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "exportmethod -  - This will determine how to connect the  channel to the parameter. Refer to the Export article for more information.\n\n datindex - Uses the docked  table and references the channel via the index of the channel in the . datname - Uses the docked  table and references the channel via the name of the channel in the . autoname - The channel is the full destination of where to export to, such has geo1/transform1:tx.",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.728Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "DAT Table by Index",
      "label": "DAT Table by Index",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "datindex - Uses the docked  table and references the channel via the index of the channel in the . datname - Uses the docked  table and references the channel via the name of the channel in the . autoname - The channel is the full destination of where to export to, such has geo1/transform1:tx.",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.728Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Export Root",
      "label": "Export Root",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "autoexportroot - This path points to the root node where all of the paths that exporting by Channel Name is : are relative to.",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.728Z",
      "rawData": {},
      "sourceElement": null
    },
    {
      "id": null,
      "name": "Export Table",
      "label": "Export Table",
      "group": "General",
      "page": "",
      "type": "float",
      "dataType": "number",
      "style": "",
      "defaultValue": null,
      "minValue": null,
      "maxValue": null,
      "step": null,
      "menuItems": [],
      "menuLabels": [],
      "allowCustom": false,
      "maxLength": null,
      "pattern": null,
      "isArray": false,
      "arraySize": 1,
      "dimensions": 1,
      "description": "exporttable - The  used to hold the export information when using the  Table  Methods (See above).",
      "tooltip": "",
      "help": "",
      "units": "",
      "examples": [],
      "isReadOnly": false,
      "isAdvanced": false,
      "isHidden": false,
      "isAnimatable": true,
      "isExpression": false,
      "isPython": false,
      "dependsOn": [],
      "affects": [],
      "linkedTo": [],
      "expressionLanguage": "",
      "defaultExpression": "",
      "commonExpressions": [],
      "order": 0,
      "isVisible": true,
      "conditionalDisplay": null,
      "isValid": true,
      "validationErrors": [],
      "lastUpdated": "2025-08-08T00:37:43.729Z",
      "rawData": {},
      "sourceElement": null
    }
  ],
  "parameterGroups": {},
  "codeExamples": [],
  "pythonExamples": [],
  "expressions": [],
  "commonInputs": [],
  "commonOutputs": [],
  "relatedOperators": [],
  "workflowPatterns": [],
  "images": [],
  "videos": [],
  "assets": [],
  "keywords": [
    "filter",
    "chop",
    "smooths",
    "sharpens",
    "input",
    "channels.",
    "filters",
    "combining",
    "each",
    "sample"
  ],
  "tags": [
    "CHOP",
    "TouchDesigner",
    "Filter"
  ],
  "searchWeight": 1,
  "contentHash": "",
  "processingDate": "2025-08-08T00:37:43.729Z",
  "processingVersion": "1.0.0",
  "isValid": true,
  "validationErrors": []
}