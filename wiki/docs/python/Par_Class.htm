<!DOCTYPE html>
<html class="client-nojs" lang="en-CA" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Par Class - Derivative</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"c1e498b85c44396ecc6be788","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Par_Class","wgTitle":"Par Class","wgCurRevisionId":32015,"wgRevisionId":32015,"wgArticleId":968,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Python Reference"],"wgPageContentLanguage":"en-ca","wgPageContentModel":"wikitext","wgRelevantPageName":"Par_Class","wgRelevantArticleId":968,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":["sysop"],"wgRestrictionMove":["sysop"],"wgCargoDefaultQueryLimit":100,
"wgCargoMapClusteringMinimum":80,"wgCargoMonthNames":["January","February","March","April","May","June","July","August","September","October","November","December"],"wgCargoMonthNamesShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgCargoWeekDays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"wgCargoWeekDaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"wgPageFormsTargetName":null,"wgPageFormsAutocompleteValues":[],"wgPageFormsAutocompleteOnAllChars":false,"wgPageFormsFieldProperties":[],"wgPageFormsCargoFields":[],"wgPageFormsDependentFields":[],"wgPageFormsCalendarValues":[],"wgPageFormsCalendarParams":[],"wgPageFormsCalendarHTML":null,"wgPageFormsGridValues":[],"wgPageFormsGridParams":[],"wgPageFormsContLangYes":null,"wgPageFormsContLangNo":null,"wgPageFormsContLangMonths":[],"wgPageFormsHeightForMinimizingInstances":800,"wgPageFormsShowOnSelect":[],"wgPageFormsScriptPath":"/extensions/PageForms","edgValues":[],
"wgPageFormsEDSettings":null,"wgAmericanDates":false,"wgVector2022PreviewPages":[]};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","ext.Lingo.styles":"ready","skins.vector.styles.legacy":"ready"};RLPAGEMODULES=["ext.UiTag","ext.Lingo","site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="/load.php?lang=en-ca&amp;modules=ext.Lingo.styles%7Cext.pygments%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="/load.php?lang=en-ca&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="/load.php?lang=en-ca&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.0"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="twitter:card" content="summary_large_image"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="/favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="/opensearch_desc.php" title="Derivative (en-ca)"/>
<link rel="EditURI" type="application/rsd+xml" href="https://docs.derivative.ca/api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="Derivative Atom feed" href="/index.php?title=Special:RecentChanges&amp;feed=atom"/>
<!-- Begin Extension:CSS --><link rel="stylesheet" href="/index.php?title=Python.css&amp;action=raw&amp;ctype=text/css&amp;css-extension=1"/><!-- End Extension:CSS -->

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-3123499-6"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-3123499-6');
</script>
<meta property="og:title" content="Par Class"/>
<meta property="og:site_name" content="Derivative"/>
<meta property="og:url" content="https://docs.derivative.ca/Par_Class"/>
<meta property="og:image" content="https://docs.derivative.ca/resources/assets/logo.png"/>
<meta property="article:modified_time" content="2024-09-04T12:44:06Z"/>
<meta property="article:published_time" content="2024-09-04T12:44:06Z"/>
<script type="application/ld+json">{"@context":"http:\/\/schema.org","@type":"Article","name":"Par Class - Derivative","headline":"Par Class - Derivative","mainEntityOfPage":"<span class=\"mw-page-title-main\">Par Class<\/span>","identifier":"https:\/\/docs.derivative.ca\/Par_Class","url":"https:\/\/docs.derivative.ca\/Par_Class","dateModified":"2024-09-04T12:44:06Z","datePublished":"2024-09-04T12:44:06Z","image":{"@type":"ImageObject","url":"https:\/\/docs.derivative.ca\/resources\/assets\/logo.png"},"author":{"@type":"Organization","name":"Derivative","url":"https:\/\/docs.derivative.ca","logo":{"@type":"ImageObject","url":"https:\/\/docs.derivative.ca\/resources\/assets\/logo.png","caption":"Derivative"}},"publisher":{"@type":"Organization","name":"Derivative","url":"https:\/\/docs.derivative.ca","logo":{"@type":"ImageObject","url":"https:\/\/docs.derivative.ca\/resources\/assets\/logo.png","caption":"Derivative"}},"potentialAction":{"@type":"SearchAction","target":"https:\/\/docs.derivative.ca\/index.php?title=Special:Search&search={search_term}","query-input":"required name=search_term"}}</script>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Par_Class rootpage-Par_Class skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">Par Class</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From Derivative</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en-CA" dir="ltr"><div class="mw-parser-output"><div class="mw-parser-output"><p>The Par class describes an instance of a single <a href="/Parameter" title="Parameter">Parameter</a>. See also <a href="/Custom_Parameters" title="Custom Parameters">Custom Parameters</a>.
</p><p><br></p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none"><div class="toctitle" lang="en-CA" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul><li class="toclevel-1"><a href="#Members"><span class="tocnumber">1</span> <span class="toctext">Members</span></a>
<ul><li class="toclevel-2"><a href="#Type_Members"><span class="tocnumber">1.1</span> <span class="toctext">Type Members</span></a></li>
<li class="toclevel-2"><a href="#Menu_Parameters"><span class="tocnumber">1.2</span> <span class="toctext">Menu Parameters</span></a></li>
</ul></li>
<li class="toclevel-1"><a href="#Methods"><span class="tocnumber">2</span> <span class="toctext">Methods</span></a>
<ul><li class="toclevel-2"><a href="#Casting_to_a_Value"><span class="tocnumber">2.1</span> <span class="toctext">Casting to a Value</span></a></li>
</ul></li>
</ul></div>

<h2><span class="mw-headline" id="Members">Members</span></h2>
<div id="val" style="display:inline;"></div><p><code class="python">val</code> → <code class="return">Any</code> : 
</p><blockquote><p>Get or set the <b>constant mode value</b> of the parameter only. <b>Important:</b> To get the parameter's current working value, regardless of the <a href="/Parameter_Mode" title="Parameter Mode">Parameter Mode</a> (constant, expression, export or bound), always use the <code class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><span class="nb">eval</span><span class="p">()</span></code> method described <a href="/Par_Class#Methods" title="Par Class">below</a>.
</p><div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">op</span><span class="p">(</span><span class="s1">'geo1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span><span class="o">.</span><span class="n">val</span>   <span class="c1"># the constant value </span>
<span class="n">op</span><span class="p">(</span><span class="s1">'geo1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span><span class="o">.</span><span class="n">eval</span><span class="p">()</span>   <span class="c1"># the evaluated parameter</span>
<span class="n">op</span><span class="p">(</span><span class="s1">'geo1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span><span class="o">.</span><span class="n">val</span> <span class="o">=</span> <span class="mi">5</span>
<span class="n">op</span><span class="p">(</span><span class="s1">'geo1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span> <span class="o">=</span> <span class="mi">5</span>  <span class="c1"># equivalent to above, more concise form</span>
<span class="n">op</span><span class="p">(</span><span class="s1">'parexec1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">op</span> <span class="o">=</span> <span class="p">[</span><span class="n">parent</span><span class="p">(),</span> <span class="n">parent</span><span class="p">(</span><span class="mi">2</span><span class="p">)]</span> <span class="c1"># you can assign a list of ops to a parameter that allows multiple operators</span>
</pre></div>
<p>When setting this member, the parameter will also be placed in constant mode.  See mode member below.
</p><p>
To set a menu value by its index, use the <code>menuIndex</code> member as described below.</p></blockquote>
<div id="expr" style="display:inline;"></div><p><code class="python">expr</code> → <code class="return">str</code> : 
</p><blockquote><p>Get or set the non-evaluated expression only. To get the parameter's current value, regardless of the <a href="/Parameter_Mode" title="Parameter Mode">Parameter Mode</a> (constant, expression, export or bound), use the <code class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><span class="nb">eval</span><span class="p">()</span></code> method described below.
</p><div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">op</span><span class="p">(</span><span class="s1">'geo1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span><span class="o">.</span><span class="n">expr</span> <span class="o">=</span> <span class="s1">'<span class="mw-lingo-term" data-lingo-term-id="75014a31ff201f57ad440d617b059d87">absTime</span>.frame'</span>  <span class="c1">#set to match current frame</span>
</pre></div>
<p>When setting this member, the parameter will also be placed in expression mode. See mode member below.
</p>
<p><b>NOTE:</b> For convenience, the expression is placed in double-quotes so you can safely put in expressions containing single quotes. 'a' and "a" have the same effect of enclosing strings in python.</p></blockquote>
<div id="enableExpr" style="display:inline;"></div><p><code class="python">enableExpr</code> → <code class="return">str</code> : 
</p><blockquote><p>Get or set an expression that controls the enable state for this parameter.
</p><div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">p</span><span class="o">.</span><span class="n">enableExpr</span> <span class="o">=</span> <span class="s2">"me.par.X.menuIndex == 5"</span>
<span class="c1"># Note the outside quotes, as this is an expression, not an object.</span>
</pre></div></blockquote>
<div id="exportOP" style="display:inline;"></div><p><code class="python">exportOP</code> → <code class="return"><span class="mw-lingo-term" data-lingo-term-id="7457cdd15d09bfc6c4dbb5d2b6f87390">OP</span></code> <b>(Read Only)</b>: 
</p><blockquote><p>The <a href="/OP_Class" title="OP Class">operator</a> exporting to this parameter.</p></blockquote>
<div id="exportSource" style="display:inline;"></div><p><code class="python">exportSource</code> → <code class="return"><span class="mw-lingo-term" data-lingo-term-id="781dc97dc62331eec3ea9ec4373a3ca8">Channel</span></code> <b>(Read Only)</b>: 
</p><blockquote><p>The object exporting to this parameter. Examples: <a href="/Cell_Class" title="Cell Class">Cell</a>, <a href="/Channel_Class" title="Channel Class">Channel</a> or None.</p></blockquote>
<div id="bindExpr" style="display:inline;"></div><p><code class="python">bindExpr</code> → <code class="return">str</code> : 
</p><blockquote><p>Get or set an expression that returns a bindable object. This can be used to bind this parameter's constant value to the referenced object's value.
</p><div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">p</span><span class="o">.</span><span class="n">bindExpr</span> <span class="o">=</span> <span class="s2">"op('geo1').par.tx"</span>
</pre></div><p>  
Note the outside quotes, as bindExpr is an expression, not an object.</p></blockquote>
<div id="bindMaster" style="display:inline;"></div><p><code class="python">bindMaster</code> → <code class="return"><span class="mw-lingo-term" data-lingo-term-id="7457cdd15d09bfc6c4dbb5d2b6f87390">OP</span></code> <b>(Read Only)</b>: 
</p><blockquote><p>The object to which this parameter is bound to, possibly None.</p></blockquote>
<div id="bindReferences" style="display:inline;"></div><p><code class="python">bindReferences</code> → <code class="return">list</code> <b>(Read Only)</b>: 
</p><blockquote><p>The (possibly empty) list of objects which bind to this parameter.</p></blockquote>
<div id="bindRange" style="display:inline;"></div><p><code class="python">bindRange</code> → <code class="return">bool</code> : 
</p><blockquote><p>Get or set parameter's range binding state. If True, min, max, clampMin, clampMax, normMin, normMax, normVal values will be based on master bind parameter. Can only be set on Custom Parameters.</p></blockquote>
<div id="hidden" style="display:inline;"></div><p><code class="python">hidden</code> → <code class="return">bool</code> <b>(Read Only)</b>: 
</p><blockquote><p>Get the parameter's hidden status. When True the parameter is considered obsolete or irrelevant and should not be modified. They are not shown in the dialog but only maintained for backward compatibility.</p></blockquote>
<div id="index" style="display:inline;"></div><p><code class="python">index</code> → <code class="return">int</code> <b>(Read Only)</b>: 
</p><blockquote><p>A unique identifier for the parameter.  May change in the case of custom parameters.</p></blockquote>
<div id="vecIndex" style="display:inline;"></div><p><code class="python">vecIndex</code> → <code class="return">int</code> <b>(Read Only)</b>: 
</p><blockquote><p>The parameter's vector index. For example, <code class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><span class="n">op</span><span class="p">(</span><span class="s1">'geo1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tz</span></code> would have a value of 2.</p></blockquote>
<div id="name" style="display:inline;"></div><p><code class="python">name</code> → <code class="return">str</code> : 
</p><blockquote><p>Get or set the parameter's unique name.
</p><div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">op</span><span class="p">(</span><span class="s1">'myOperator'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">Custompar</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s1">'Translate'</span>
</pre></div><p>
Can only be set on <a href="/Custom_Parameters" title="Custom Parameters">Custom Parameters</a>.</p></blockquote>
<div id="label" style="display:inline;"></div><p><code class="python">label</code> → <code class="return">str</code> : 
</p><blockquote><p>Get or set the parameter's label.
</p><div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">op</span><span class="p">(</span><span class="s1">'myOperator'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">Custompar</span><span class="o">.</span><span class="n">label</span> <span class="o">=</span> <span class="s1">'Translate'</span>
</pre></div><p>
Can only be set on <a href="/Custom_Parameters" title="Custom Parameters">Custom Parameters</a>.</p></blockquote>
<div id="subLabel" style="display:inline;"></div><p><code class="python">subLabel</code> → <code class="return">str</code> <b>(Read Only)</b>: 
</p><blockquote><p>Returns the name of the sub-label.</p></blockquote>
<div id="startSection" style="display:inline;"></div><p><code class="python">startSection</code> → <code class="return">bool</code> : 
</p><blockquote><p>Get or set the parameter's separator status. When <code>True</code> a visible separator is drawn between this parameter and the ones preceding it. Can only be set on <a href="/Custom_Parameters" title="Custom Parameters">Custom Parameters</a>.</p></blockquote>
<div id="readOnly" style="display:inline;"></div><p><code class="python">readOnly</code> → <code class="return">bool</code> : 
</p><blockquote><p>Get or set the parameter's read only status. When <code>True</code> the parameter cannot be modified through the UI, only scripting.</p></blockquote>
<div id="help" style="display:inline;"></div><p><code class="python">help</code> → <code class="return">str</code> <b>(Read Only)</b>: 
</p><blockquote><p>Get or set a custom parameter's help text. To see any parameter's help, rollover the parameter while holding the Alt key. For built-in parameters this can be used to get the parameter's help text.</p></blockquote>
<p><i></i>
</p><p><i></i>
</p>
<div id="parGroup" style="display:inline;"></div><p><code class="python">parGroup</code> → <code class="return"><span class="mw-lingo-term" data-lingo-term-id="90055a7b1446848a11d5c2dbeadcd9d8">ParGroup</span></code> <b>(Read Only)</b>: 
</p><blockquote><p>The <a href="/ParGroup" title="ParGroup">ParGroup</a> of parameters this parameter belongs to. A <span class="mw-lingo-term" data-lingo-term-id="90055a7b1446848a11d5c2dbeadcd9d8">ParGroup</span> is a set of parameters sharing one line on a parameter dialog with a common label, example: Translate (x, y, z)..</p></blockquote>
<div id="min" style="display:inline;"></div><p><code class="python">min</code> → <code class="return">int</code> : 
</p><blockquote><p>Get or set the parameter's numerical minimum value. The parameter's value will be clamped at that minimum if clampMin = True. Can only be set on <a href="/Custom_Parameters" title="Custom Parameters">Custom Parameters</a>.</p></blockquote>
<div id="max" style="display:inline;"></div><p><code class="python">max</code> → <code class="return">int</code> : 
</p><blockquote><p>Get or set the parameter's numerical maximum value. The parameter's value will be clamped at that maximum if clampMax = True. Can only be set on <a href="/Custom_Parameters" title="Custom Parameters">Custom Parameters</a>.</p></blockquote>
<div id="clampMin" style="display:inline;"></div><p><code class="python">clampMin</code> → <code class="return">bool</code> : 
</p><blockquote><p>Get or set the parameter's numerical clamping behavior. If set to clampMin = True, the parameter will clamp on the lower end at the value specified in min Can only be set on <a href="/Custom_Parameters" title="Custom Parameters">Custom Parameters</a>.</p></blockquote>
<div id="clampMax" style="display:inline;"></div><p><code class="python">clampMax</code> → <code class="return">bool</code> : 
</p><blockquote><p>Get or set the parameter's numerical clamping behavior. If set to clampMax = True, the parameter will clamp on the upper end at the value specified in max Can only be set on <a href="/Custom_Parameters" title="Custom Parameters">Custom Parameters</a>.</p></blockquote>
<div id="default" style="display:inline;"></div><p><code class="python">default</code> → <code class="return">Any</code> : 
</p><blockquote><p>Get or set the parameter's default value. Can only be set on <a href="/Custom_Parameters" title="Custom Parameters">Custom Parameters</a>.</p></blockquote>
<div id="defaultBindExpr" style="display:inline;"></div><p><code class="python">defaultBindExpr</code> → <code class="return">str</code> : 
</p><blockquote><p>Get or set the parameter's default bind expression. Can only be set on Custom Parameters.
</p><div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">op</span><span class="p">(</span><span class="s1">'base1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">Size</span><span class="o">.</span><span class="n">defaultBindExpr</span> <span class="o">=</span> <span class="s1">'me.par.tx'</span>
</pre></div></blockquote>
<div id="defaultExpr" style="display:inline;"></div><p><code class="python">defaultExpr</code> → <code class="return">str</code> : 
</p><blockquote><p>Get or set the parameter's default expression. Can only be set on <a href="/Custom_Parameters" title="Custom Parameters">Custom Parameters</a>.
</p><div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="c1"># value defaults to this expression.</span>
<span class="n">op</span><span class="p">(</span><span class="s1">'base1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">Size</span><span class="o">.</span><span class="n">defaultExpr</span> <span class="o">=</span> <span class="s1">'me.time.frame'</span>
</pre></div></blockquote>
<div id="defaultMode" style="display:inline;"></div><p><code class="python">defaultMode</code> → <code class="return">ParMode</code> : 
</p><blockquote><p>Get or set the parameter's default evaluation mode.
</p><div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">op</span><span class="p">(</span><span class="s1">'geo1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span><span class="o">.</span><span class="n">defaultMode</span> <span class="o">=</span> <span class="n">ParMode</span><span class="o">.</span><span class="n">EXPRESSION</span>
</pre></div>
<p>The mode is one of: ParMode.CONSTANT, ParMode.EXPRESSION, or ParMode.EXPORT, or ParMode.BIND.
</p><p>
See <a href="/Parameter_Dialog#Working_with_Parameter_Modes" title="Parameter Dialog">Parameter_Dialog#Working_with_Parameter_Modes</a> for more information.</p></blockquote>
<div id="normMin" style="display:inline;"></div><p><code class="python">normMin</code> → <code class="return">int</code> : 
</p><blockquote><p>Get or set the parameter's minimum slider value if the parameter is a numerical slider. Can only be set on <a href="/Custom_Parameters" title="Custom Parameters">Custom Parameters</a>.</p></blockquote>
<div id="normMax" style="display:inline;"></div><p><code class="python">normMax</code> → <code class="return">int</code> : 
</p><blockquote><p>Get or set the parameter's maximum slider value if the parameter is a numerical slider. Can only be set on <a href="/Custom_Parameters" title="Custom Parameters">Custom Parameters</a>.</p></blockquote>
<div id="normVal" style="display:inline;"></div><p><code class="python">normVal</code> → <code class="return">float</code> : 
</p><blockquote><p>Get or set the parameter's value as a normalized slider position. Can only be set on <a href="/Custom_Parameters" title="Custom Parameters">Custom Parameters</a>.</p></blockquote>
<div id="enable" style="display:inline;"></div><p><code class="python">enable</code> → <code class="return">bool</code> : 
</p><blockquote><p>Get or set the parameter's enable state. Can only be set on <a href="/Custom_Parameters" title="Custom Parameters">Custom Parameters</a>.</p></blockquote>
<div id="order" style="display:inline;"></div><p><code class="python">order</code> → <code class="return">float</code> : 
</p><blockquote><p>Get or set the parameter's position on the parameter page.  Can only be set on <a href="/Custom_Parameters" title="Custom Parameters">Custom Parameters</a>.</p></blockquote>
<div id="page" style="display:inline;"></div><p><code class="python">page</code> → <code class="return">td.Page</code> : 
</p><blockquote><p>Get or set the parameter page the custom parameter is part of. Can only be set on <a href="/Custom_Parameters" title="Custom Parameters">Custom Parameters</a>.</p></blockquote>
<div id="password" style="display:inline;"></div><p><code class="python">password</code> → <code class="return">bool</code> : 
</p><blockquote><p>Get or set the parameter's password mode. When True all text is rendered as asterisks. Can only be set on Custom string, int or float parameters. <a href="/Custom_Parameters" title="Custom Parameters">Custom Parameters</a>.</p></blockquote>
<div id="mode" style="display:inline;"></div><p><code class="python">mode</code> → <code class="return">ParMode</code> : 
</p><blockquote><p>Get or set the parameter's evaluation mode.
</p><div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">op</span><span class="p">(</span><span class="s1">'geo1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span><span class="o">.</span><span class="n">mode</span> <span class="o">=</span> <span class="n">ParMode</span><span class="o">.</span><span class="n">EXPRESSION</span>
</pre></div>
<p>The mode is one of:  <code>ParMode.CONSTANT</code>, <code>ParMode.EXPRESSION</code>, or <code>ParMode.EXPORT</code>, or <code>ParMode.BIND</code>.
</p><p>
See <a href="/Parameter_Dialog#Working_with_Parameter_Modes" title="Parameter Dialog">Parameter_Dialog#Working_with_Parameter_Modes</a> for more information.</p></blockquote>
<div id="prevMode" style="display:inline;"></div><p><code class="python">prevMode</code> → <code class="return">ParMode</code> <b>(Read Only)</b>: 
</p><blockquote><p>The parameter's previous evaluation mode.</p></blockquote>
<div id="menuNames" style="display:inline;"></div><p><code class="python">menuNames</code> → <code class="return">list</code> : 
</p><blockquote><p>Get or set a list of all possible menu choice names. In the case of non menu parameters, None is returned. Can only be set on <a href="/Custom_Parameters" title="Custom Parameters">Custom Parameters</a>.</p></blockquote>
<div id="menuLabels" style="display:inline;"></div><p><code class="python">menuLabels</code> → <code class="return">list</code> : 
</p><blockquote><p>Get or set a list of all possible menu choice labels. In the case of non menu parameters, None is returned. Can only be set on <a href="/Custom_Parameters" title="Custom Parameters">Custom Parameters</a>.</p></blockquote>
<div id="menuIndex" style="display:inline;"></div><p><code class="python">menuIndex</code> → <code class="return">int</code> : 
</p><blockquote><p>Get or set a menu constant value by its index.</p></blockquote>
<div id="menuSource" style="display:inline;"></div><p><code class="python">menuSource</code> → <code class="return">str</code> : 
</p><blockquote><p>Get or set an expression that returns an object with .menuItems .menuNames members.  This can be used to create a custom menu whose entries dynamically follow that of another menu for example. Simple menu sources include another parameter with a menu c, an object created by <a href="/Tdu_Module" title="Tdu Module">tdu.TableMenu</a>, or an object created by <a href="/TDFunctions" title="TDFunctions">TDFunctions.parMenu</a>.
</p><div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">p</span><span class="o">.</span><span class="n">menuSource</span> <span class="o">=</span> <span class="s2">"op('audiodevin1').par.device"</span>
</pre></div><p>
Note the outside quotes, as menuSource is an expression, not an object.</p></blockquote>
<div id="valid" style="display:inline;"></div><p><code class="python">valid</code> → <code class="return">bool</code> <b>(Read Only)</b>: 
</p><blockquote><p>True if the referenced parameter currently exists, False if it has been deleted.</p></blockquote>
<div id="sequence" style="display:inline;"></div><p><code class="python">sequence</code> → <code class="return">Sequence | None</code> <b>(Read Only)</b>: 
</p><blockquote><p>The <a href="/Sequence_Class" title="Sequence Class">Sequence</a> this parameter belongs to. None if not in a sequence.</p></blockquote>
<div id="sequenceBlock" style="display:inline;"></div><p><code class="python">sequenceBlock</code> → <code class="return">SequenceBlock | None</code> <b>(Read Only)</b>: 
</p><blockquote><p>The <a href="/SequenceBlock_Class" title="SequenceBlock Class">SequenceBlock</a> this parameter belongs to. None if not in a sequence.</p></blockquote>
<div id="owner" style="display:inline;"></div><p><code class="python">owner</code> → <code class="return"><span class="mw-lingo-term" data-lingo-term-id="7457cdd15d09bfc6c4dbb5d2b6f87390">OP</span></code> <b>(Read Only)</b>: 
</p><blockquote><p>The <a href="/OP_Class" title="OP Class">OP</a> to which this object belongs.</p></blockquote>
<div id="styleCloneImmune" style="display:inline;"></div><p><code class="python">styleCloneImmune</code> → <code class="return">bool</code> : 
</p><blockquote><p>Get or set the parameter's style clone immunity. When <code>False</code>, the parameter definition is matched to any matching master parameter its operator is cloned to. When <code>True</code>, it is left unchanged.</p></blockquote>
<div id="lastScriptChange" style="display:inline;"></div><p><code class="python">lastScriptChange</code> → <code class="return">tuple</code> <b>(Read Only)</b>: 
</p><blockquote><p>Return information about when this parameter was last modified by a script. Cleared when the parameter is updated via the UI.
</p><div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">python</span> <span class="o">&gt;&gt;&gt;</span> <span class="n">op</span><span class="p">(</span><span class="s1">'/level1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">invert</span><span class="o">.</span><span class="n">lastScriptChange</span>
<span class="n">SetInfo</span><span class="p">(</span><span class="n">dat</span><span class="o">=</span><span class="nb">type</span><span class="p">:</span><span class="n">textDAT</span> <span class="n">path</span><span class="p">:</span><span class="o">/</span><span class="n">text1</span><span class="p">,</span> <span class="n">function</span><span class="o">=</span><span class="s1">'&lt;module&gt;'</span><span class="p">,</span> <span class="n">line</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">frame</span><span class="o">=</span><span class="mi">300061</span><span class="p">,</span> <span class="n">timeStamp</span><span class="o">=</span><span class="mi">1613150878</span><span class="p">)</span>
</pre></div></blockquote>
<h3><span class="mw-headline" id="Type_Members">Type Members</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/index.php?title=Template:SubSection&amp;action=edit&amp;section=T-1" title="Edit section: Type Members">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div id="isDefault" style="display:inline;"></div><p><code class="python">isDefault</code> → <code class="return">bool</code> <b>(Read Only)</b>: 
</p><blockquote><p>True when the parameter value, expression and mode are in their default settings.</p></blockquote>
<div id="isCustom" style="display:inline;"></div><p><code class="python">isCustom</code> → <code class="return">bool</code> <b>(Read Only)</b>: 
</p><blockquote><p>True for <a href="/Custom_Parameters" title="Custom Parameters">Custom Parameters</a>.</p></blockquote>
<div id="isPulse" style="display:inline;"></div><p><code class="python">isPulse</code> → <code class="return">bool</code> <b>(Read Only)</b>: 
</p><blockquote><p>True for pulse parameters.</p></blockquote>
<div id="isMomentary" style="display:inline;"></div><p><code class="python">isMomentary</code> → <code class="return">bool</code> <b>(Read Only)</b>: 
</p><blockquote><p>True for momentary parameters.</p></blockquote>
<div id="isMenu" style="display:inline;"></div><p><code class="python">isMenu</code> → <code class="return">bool</code> <b>(Read Only)</b>: 
</p><blockquote><p>True for menu parameters.</p></blockquote>
<div id="isNumber" style="display:inline;"></div><p><code class="python">isNumber</code> → <code class="return">bool</code> <b>(Read Only)</b>: 
</p><blockquote><p>True for numeric parameters.</p></blockquote>
<div id="isFloat" style="display:inline;"></div><p><code class="python">isFloat</code> → <code class="return">bool</code> <b>(Read Only)</b>: 
</p><blockquote><p>True for floating point numeric parameters.</p></blockquote>
<div id="isInt" style="display:inline;"></div><p><code class="python">isInt</code> → <code class="return">bool</code> <b>(Read Only)</b>: 
</p><blockquote><p>True for integer numeric parameters.</p></blockquote>
<div id="isOP" style="display:inline;"></div><p><code class="python">isOP</code> → <code class="return">bool</code> <b>(Read Only)</b>: 
</p><blockquote><p>True for OP parameters.</p></blockquote>
<div id="isPython" style="display:inline;"></div><p><code class="python">isPython</code> → <code class="return">bool</code> <b>(Read Only)</b>: 
</p><blockquote><p>True for python parameters.</p></blockquote>
<div id="isSequence" style="display:inline;"></div><p><code class="python">isSequence</code> → <code class="return">bool</code> <b>(Read Only)</b>: 
</p><blockquote><p>True for sequence header parameters.</p></blockquote>
<div id="isString" style="display:inline;"></div><p><code class="python">isString</code> → <code class="return">bool</code> <b>(Read Only)</b>: 
</p><blockquote><p>True for string parameters.</p></blockquote>
<div id="isToggle" style="display:inline;"></div><p><code class="python">isToggle</code> → <code class="return">bool</code> <b>(Read Only)</b>: 
</p><blockquote><p>True for toggle parameters.</p></blockquote>
<div id="style" style="display:inline;"></div><p><code class="python">style</code> → <code class="return">str</code> <b>(Read Only)</b>: 
</p><blockquote><p>Describes the behavior and contents of the custom parameter. Example <code>'Float'</code>, <code>'Int'</code>, <code>'<span class="mw-lingo-term" data-lingo-term-id="ec8374db32bacb4cd9760199ec42819e">Pulse</span>'</code>, <code>'XYZ'</code>, etc.</p></blockquote>
<div id="collapser" style="display:inline;"></div><p><code class="python">collapser</code> → <code class="return">bool</code> <b>(Read Only)</b>: 
</p><blockquote><p>Returns True if the parameter is a parent of collapsable parameters (ie. a collapser).</p></blockquote>
<div id="collapsable" style="display:inline;"></div><p><code class="python">collapsable</code> → <code class="return">bool</code> <b>(Read Only)</b>: 
</p><blockquote><p>Returns True if the parameter is collapsable.</p></blockquote>
<h3><span class="mw-headline" id="Menu_Parameters">Menu Parameters</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/index.php?title=Template:SubSection&amp;action=edit&amp;section=T-1" title="Edit section: Menu Parameters">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Menu parameters can be get or set by specifying either the string value of the menu, or its numeric index. For example, the following are equivalent:
</p>
<div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">op</span><span class="p">(</span><span class="s1">'geo1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">xord</span> <span class="o">=</span> <span class="s1">'trs'</span>
<span class="n">op</span><span class="p">(</span><span class="s1">'geo1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">xord</span> <span class="o">=</span> <span class="mi">5</span>
</pre></div>
<p>Alternatively, the menu can be accessed more directly:
</p>
<div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">n</span> <span class="o">=</span> <span class="n">op</span><span class="p">(</span><span class="s1">'geo1'</span><span class="p">)</span>
<span class="n">n</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">xord</span><span class="o">.</span><span class="n">menuIndex</span> <span class="o">=</span> <span class="mi">5</span>  <span class="c1">#trs</span>
<span class="n">a</span> <span class="o">=</span> <span class="n">n</span><span class="o">.</span><span class="n">menuNames</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>  <span class="c1">#returns 'srt'</span>
<span class="n">b</span> <span class="o">=</span> <span class="n">n</span><span class="o">.</span><span class="n">menuLabels</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="c1">#returns 'Scale Rotate Translate'</span>
</pre></div>
<h2><span class="mw-headline" id="Methods">Methods</span></h2>
<div id="copy" style="display:inline;"></div><p><code class="python">copy(Par)</code>→ <code class="return">None</code>:
</p><blockquote><p>Copy the specified <a class="mw-selflink selflink">parameter</a>.
</p><ul><li>Par - The parameter to copy.</li></ul><div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">op</span><span class="p">(</span><span class="s1">'geo1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span><span class="o">.</span><span class="n">copy</span><span class="p">(</span> <span class="n">op</span><span class="p">(</span><span class="s1">'geo2'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span> <span class="p">)</span>
</pre></div></blockquote>
<div id="eval" style="display:inline;"></div><p><code class="python">eval()</code>→ <code class="return">Any</code>:
</p><blockquote><p>Evaluate a parameter. This value may be derived by the parameter's constant value, expression, export, or bind, dependent on its mode.
</p><div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="n">op</span><span class="p">(</span><span class="s1">'geo1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span><span class="o">.</span><span class="n">eval</span><span class="p">()</span>
</pre></div><p>
Calling <code>eval</code> on an OP parameter that can hold multiple OPs will return a single OP if there is only 1 result, a list of OPs if there are more than 1, and None if there are no results.</p></blockquote>
<div id="evalNorm" style="display:inline;"></div><p><code class="python">evalNorm()</code>→ <code class="return">float</code>:
</p><blockquote><p>Similar to eval() but the returns the normalized slider value.</p></blockquote>
<div id="evalExpression" style="display:inline;"></div><p><code class="python">evalExpression()</code>→ <code class="return">Any</code>:
</p><blockquote><p>Evaluate the expression portion of a parameter, if it contains one. This will ignore any exports, etc.
</p><div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="n">op</span><span class="p">(</span><span class="s1">'geo1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span><span class="o">.</span><span class="n">evalExpression</span><span class="p">()</span>
</pre></div>
<p><b>Note</b>: the results of evalExpression is always the expression's Python return value, which can be slightly different than <code>Par.eval()</code>. For example, in parameters that hold an operator, <code>.eval()</code> will always return an operator if it exists, even if the expression actually returns a string path. The evalExpression function would return the string path.
</p><p>
To evaluate an arbitrary expression string, that is not inside a parameter, see <a href="/OP_Class" title="OP Class">OP</a>.evalExpression.</p></blockquote>
<div id="evalExport" style="display:inline;"></div><p><code class="python">evalExport()</code>→ <code class="return">Any</code>:
</p><blockquote><p>Evaluate the export portion of a parameter, if it contains one. This will ignore any expressions, etc.
</p><div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="n">op</span><span class="p">(</span><span class="s1">'geo1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span><span class="o">.</span><span class="n">evalExport</span><span class="p">()</span>
</pre></div></blockquote>
<div id="evalOPs" style="display:inline;"></div><p><code class="python">evalOPs()</code>→ <code class="return">List[<span class="mw-lingo-term" data-lingo-term-id="7457cdd15d09bfc6c4dbb5d2b6f87390">OP</span>]</code>:
</p><blockquote><p>Evaluate the parameter as series of operators. This is useful for a custom  parameter that specifies a list of operator paths for example.
</p><div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="n">op</span><span class="p">(</span><span class="s1">'base1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">Paths</span><span class="o">.</span><span class="n">evalOPs</span><span class="p">()</span>
</pre></div></blockquote>
<div id="evalFile" style="display:inline;"></div><p><code class="python">evalFile()</code>→ <code class="return">tdu.FileInfo</code>:
</p><blockquote><p>Evaluate the parameter as a file path. This returns a <a href="/Tdu_Module" title="Tdu Module">FileInfo</a> object with the full path. 
</p><div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="n">op</span><span class="p">(</span><span class="s1">'moviefilein1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">file</span><span class="o">.</span><span class="n">evalFile</span><span class="p">()</span>
<span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">ext</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">baseName</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">exists</span><span class="p">)</span>
</pre></div></blockquote>
<div id="pulse" style="display:inline;"></div><p><code class="python">pulse(value=1, frames=0, seconds=0)</code>→ <code class="return">None</code>:
</p><blockquote><p>Pulsing sets a parameter to the specific value, cooks the operator, then restores the parameter to its previous value.
</p><p>For pulse type parameters no value or time is specified or used.
</p>
<ul><li>value - (Optional) The value to pulse this parameter with, default is 1.</li>
<li>frames - (Optional) Number of frames before restoring the parameter to its original value.</li>
<li>seconds - (Optional) Number of seconds before restoring the parameter to its original value.</li></ul><div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">op</span><span class="p">(</span><span class="s1">'moviein1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">reload</span><span class="o">.</span><span class="n">pulse</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="c1">#set the reload toggle, then cook</span>
<span class="n">op</span><span class="p">(</span><span class="s1">'glsl1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">loadvariablenames</span><span class="o">.</span><span class="n">pulse</span><span class="p">()</span> <span class="c1">#activate the pulse parameter</span>
<span class="n">op</span><span class="p">(</span><span class="s1">'geo1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">ty</span><span class="o">.</span><span class="n">pulse</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">frames</span><span class="o">=</span><span class="mi">120</span><span class="p">)</span> <span class="c1">#pulse geometry ty for 120 frames</span>
<span class="n">op</span><span class="p">(</span><span class="s1">'text1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">text</span><span class="o">.</span><span class="n">pulse</span><span class="p">(</span><span class="s1">'GO!'</span><span class="p">,</span> <span class="n">seconds</span><span class="o">=</span><span class="mi">3</span><span class="p">)</span> <span class="c1">#pulse text <span class="mw-lingo-term" data-lingo-term-id="6705777b712ee811e76fb07162081d63">TOP</span> string field, for 3 seconds</span>
<span class="n">op</span><span class="p">(</span><span class="s1">'noise'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">type</span><span class="o">.</span><span class="n">pulse</span><span class="p">(</span><span class="s1">'random'</span><span class="p">,</span> <span class="n">seconds</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span> <span class="c1">#pulse noise meny type for half a second</span>
</pre></div></blockquote>
<div id="destroy" style="display:inline;"></div><p><code class="python">destroy()</code>→ <code class="return">None</code>:
</p><blockquote><p>Destroy the parameter referenced by this Par. An exception will be raised if the parameter has already been destroyed. Only custom and sequential parameters can be destroyed.  Destroying a sequential parameter will destroy its entire block. Note: When any parameter is destroyed, any existing parameter objects will be invalid and should be re-fetched.</p></blockquote>
<div id="reset" style="display:inline;"></div><p><code class="python">reset()</code>→ <code class="return">bool</code>:
</p><blockquote><p>Resets the parameter to its default state.
</p><p>Returns true if anything was changed.
</p>
<div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">op</span><span class="p">(</span><span class="s1">'geo1'</span><span class="p">)</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span><span class="o">.</span><span class="n">reset</span><span class="p">()</span>
</pre></div></blockquote>
<div id="isPar" style="display:inline;"></div><p><code class="python">isPar(par : Par)</code>→ <code class="return">bool</code>:
</p><blockquote><p>True if the provided Par is the same parameter on the same operator. Because <code>op('container1').par.x == op('container2').par.x</code> compares values and <code>op('container1').par.x is op('container1').par.x</code> is always False (because of TouchDesigner internals), you must use <code>isPar</code> to compare parameter objects.
</p><ul><li>par - The parameter to compare identity with.</li></ul></blockquote>
<h3><span class="mw-headline" id="Casting_to_a_Value">Casting to a Value</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/index.php?title=Template:SubSection&amp;action=edit&amp;section=T-1" title="Edit section: Casting to a Value">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>The Par Class implements all necessary methods to be treated as a number or string, which in this case gets or sets its value. Therefore, an explicit call to <code class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><span class="nb">eval</span><span class="p">()</span></code> or <code class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><span class="nb">set</span><span class="p">()</span></code> is unnecessary when used in a parameter, or in a numeric expression.
</p><p>For example, the following are equivalent in a parameter:
</p>
<ul><li><code class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><span class="p">(</span><span class="nb">float</span><span class="p">)</span><span class="n">me</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span></code></li>
<li><code class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><span class="n">me</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span><span class="o">.</span><span class="n">eval</span><span class="p">()</span></code></li>
<li><code class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><span class="n">me</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span></code></li></ul><p>The following are also equivalent:
</p>
<ul><li><code class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><span class="n">me</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span><span class="o">.</span><span class="n">eval</span><span class="p">()</span> <span class="o">+</span> <span class="mi">1</span></code></li>
<li><code class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><span class="n">me</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span> <span class="o">+</span> <span class="mi">1</span></code></li></ul><p>As are the following:
</p>
<ul><li><code class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><span class="n">me</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span><span class="o">.</span><span class="n">val</span> <span class="o">=</span> <span class="mi">3</span></code></li>
<li><code class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><span class="n">me</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span> <span class="o">=</span> <span class="mi">3</span></code></li></ul><p><b>Note: </b>However, you can't use functions belonging to the cast object type without evaluating the parameter:
</p>
<ul><li><code class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><span class="n">me</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span><span class="o">.</span><span class="n">hex</span><span class="p">()</span> <span class="c1"># doesn't work</span></code></li>
<li><code class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><span class="n">me</span><span class="o">.</span><span class="n">par</span><span class="o">.</span><span class="n">tx</span><span class="o">.</span><span class="n">eval</span><span class="p">()</span><span class="o">.</span><span class="n">hex</span><span class="p">()</span> <span class="c1"># works!</span></code></li></ul><p>TouchDesigner Build: <select onchange="location=this.value;"><option value="https://docs.derivative.ca/Par_Class">Latest</option>\n<option value="https://docs.derivative.ca/Par_Class?oldid=30096">wikieditor</option><option value="https://docs.derivative.ca/Par_Class?oldid=30596">wikieditor</option><option value="https://docs.derivative.ca/Par_Class?oldid=30601">wikieditor</option><option value="https://docs.derivative.ca/Par_Class?oldid=30618">wikieditor</option><option value="https://docs.derivative.ca/Par_Class?oldid=30623">wikieditor</option><option value="https://docs.derivative.ca/Par_Class?oldid=31211">wikieditor</option><option value="https://docs.derivative.ca/Par_Class?oldid=31441">wikieditor</option><option value="https://docs.derivative.ca/Par_Class?oldid=31442">wikieditor</option><option value="https://docs.derivative.ca/Par_Class?oldid=31443">wikieditor</option><option value="https://docs.derivative.ca/Par_Class?oldid=31445">wikieditor</option><option value="https://docs.derivative.ca/Par_Class?oldid=31446">wikieditor</option><option value="https://docs.derivative.ca/Par_Class?oldid=31570">wikieditor</option><option value="https://docs.derivative.ca/Par_Class?oldid=31575">wikieditor</option><option value="https://docs.derivative.ca/Par_Class?oldid=31618">wikieditor</option><option value="https://docs.derivative.ca/Par_Class?oldid=31619">wikieditor</option><option value="https://docs.derivative.ca/Par_Class?oldid=32015">wikieditor</option><option value="https://docs.derivative.ca/Par_Class?oldid=26062">mw-rollback</option><option value="https://docs.derivative.ca/Par_Class?oldid=30351">2023.11280</option><option value="https://docs.derivative.ca/Par_Class?oldid=28331">2022.24140</option><option value="https://docs.derivative.ca/Par_Class?oldid=25976">2021.10000</option><option value="https://docs.derivative.ca/Par_Class?oldid=21097">2020.20000</option><option value="https://docs.derivative.ca/Par_Class?oldid=16490">2018.28070</option><option value="https://docs.derivative.ca/Par_Class?oldid=15016">before 2018.28070</option></select></p></div><div class="mw-lingo-tooltip" id="75014a31ff201f57ad440d617b059d87"><div class="mw-lingo-definition navigation-not-searchable"><div class="mw-lingo-definition-text">
<p>Absolute Time starts counting from 0 when the TouchDesigner process starts, and is always increasing. It will pause if the Power 0/1 button at the top of the UI is Off.
</p>
</div></div>
</div><div class="mw-lingo-tooltip" id="7457cdd15d09bfc6c4dbb5d2b6f87390"><div class="mw-lingo-definition navigation-not-searchable"><div class="mw-lingo-definition-text">
<p>Any of the procedural data operators. OPs do all the work in TouchDesigner. They "cook" and output data to other OPs, which ultimately result in new images, data and audio being generated. See <a href="/Node" title="Node">Node</a>.
</p>
</div></div>
</div><div class="mw-lingo-tooltip" id="781dc97dc62331eec3ea9ec4373a3ca8"><div class="mw-lingo-definition navigation-not-searchable"><div class="mw-lingo-definition-text">
<p>A <a href="/CHOP" title="CHOP">CHOP</a> outputs one or more channels, where a channel is simply a sequence of numbers (<a href="/Sample" title="Sample">Samples</a>), representing motion, audio, etc. Channels are passed between CHOPs in TouchDesigner networks. Channels can be <a href="/Export" title="Export">Exported</a> to <a href="/Parameter" title="Parameter">Parameters</a>.
</p>
</div></div>
</div><div class="mw-lingo-tooltip" id="90055a7b1446848a11d5c2dbeadcd9d8"><div class="mw-lingo-definition navigation-not-searchable"><div class="mw-lingo-definition-text">
<p>A ParGroup is a group of related parameters that you can set and get as a whole instead of its individual parameters, like ParGroup <code>t</code> is <code>tx ty tz</code>.
</p>
</div></div>
</div><div class="mw-lingo-tooltip" id="ec8374db32bacb4cd9760199ec42819e"><div class="mw-lingo-definition navigation-not-searchable"><div class="mw-lingo-definition-text">
<p>To "pulse" a parameter is to send it a signal from (1) an <a href="/Export" title="Export">exported</a> CHOP channel or (2) a python command or (3) a mouse click that causes a new action to occur immediately. A pulse via python is via the <code>.pulse()</code> function on a pulse-type parameter, such as Reset parameter in a <a href="/Speed_CHOP" title="Speed CHOP">Speed CHOP</a>. A pulse from a CHOP is typically a 0 to 1 to 0 signal in an exported channel.
</p>
</div></div>
</div><div class="mw-lingo-tooltip" id="6705777b712ee811e76fb07162081d63"><div class="mw-lingo-definition navigation-not-searchable"><div class="mw-lingo-definition-text">
<p>An <a href="/Operator_Family" title="Operator Family">Operator Family</a> that creates, composites and modifies images, and reads/writes images and movies to/from files and the network. TOPs run on the graphics card's GPU.
</p>
</div></div>
</div>
<!-- 
NewPP limit report
Cached time: 20250701125652
Cache expiry: 60
Reduced expiry: true
Complications: [show‐toc]
CPU time usage: 0.124 seconds
Real time usage: 0.163 seconds
Preprocessor visited node count: 2312/1000000
Post‐expand include size: 76350/2097152 bytes
Template argument size: 38968/2097152 bytes
Highest expansion depth: 8/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 21898/5000000 bytes
Lua time usage: 0.030/5 seconds
Lua virtual size: 8736768/104857600 bytes
Lua estimated memory usage: 0 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%   92.236      1 -total
 81.97%   75.604      1 Template:ClassMemberSection
 58.88%   54.310      3 Template:SubSection
 21.29%   19.635     64 Template:ClassMember
 12.95%   11.945      1 Template:ClassMethodSection
  5.38%    4.966     11 Template:ClassMethod
  2.36%    2.174      1 Template:TDClassSummary
  2.33%    2.147      1 Template:History
-->

<!-- Saved in parser cache with key wiki:pcache:idhash:968-0!canonical and timestamp 20250701125652 and revision id 32015.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://docs.derivative.ca/index.php?title=Par_Class&amp;oldid=32015">https://docs.derivative.ca/index.php?title=Par_Class&amp;oldid=32015</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="/Category:Python_Reference" title="Category:Python Reference">Python Reference</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="/index.php?title=Special:UserLogin&amp;returnto=Par+Class" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="/Par_Class" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="new mw-list-item"><a href="/index.php?title=Talk:Par_Class&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t"><span>Discussion</span></a></li><li id="ca-Experimental" class="mw-list-item"><a href="/Experimental:Par_Class"><span>Experimental</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Canadian English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="/Par_Class"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="/index.php?title=Par_Class&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search Derivative" aria-label="Search Derivative" autocapitalize="sentences" title="Search Derivative [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="/Main_Page"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-TouchDesigner" class="vector-menu mw-portlet mw-portlet-TouchDesigner vector-menu-portal portal" aria-labelledby="p-TouchDesigner-label" role="navigation"  >
	<h3
		id="p-TouchDesigner-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">TouchDesigner</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-Main-Page" class="mw-list-item"><a href="/Main_Page"><span>Main Page</span></a></li><li id="n-Categories" class="mw-list-item"><a href="/Special:Categories"><span>Categories</span></a></li><li id="n-Learn-TouchDesigner" class="mw-list-item"><a href="/Learn_TouchDesigner"><span>Learn TouchDesigner</span></a></li><li id="n-Tutorials" class="mw-list-item"><a href="/Tutorials"><span>Tutorials</span></a></li><li id="n-Interoperability" class="mw-list-item"><a href="/Interoperability"><span>Interoperability</span></a></li><li id="n-Glossary" class="mw-list-item"><a href="/TouchDesigner_Glossary"><span>Glossary</span></a></li><li id="n-Operators" class="mw-list-item"><a href="/Operator"><span>Operators</span></a></li><li id="n-Python" class="mw-list-item"><a href="/Python"><span>Python</span></a></li><li id="n-Python-Class-Reference" class="mw-list-item"><a href="/TouchDesigner_Python_Classes"><span>Python Class Reference</span></a></li><li id="n-Palette" class="mw-list-item"><a href="/Category:Palette"><span>Palette</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="/Frequently_Asked_Questions"><span>FAQ</span></a></li><li id="n-Recent-Doc-Edits" class="mw-list-item"><a href="/Special:RecentChanges"><span>Recent Doc Edits</span></a></li><li id="n-Release-Notes" class="mw-list-item"><a href="/Release_Notes"><span>Release Notes</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-Downloads" class="vector-menu mw-portlet mw-portlet-Downloads vector-menu-portal portal" aria-labelledby="p-Downloads-label" role="navigation"  >
	<h3
		id="p-Downloads-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Downloads</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-TouchDesigner" class="mw-list-item"><a href="https://www.derivative.ca/download" rel="nofollow"><span>TouchDesigner</span></a></li><li id="n-Shared-Examples" class="mw-list-item"><a href="http://www.derivative.ca/Forum/viewforum.php?f=22" rel="nofollow"><span>Shared Examples</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="/Special:WhatLinksHere/Par_Class" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="/Special:RecentChangesLinked/Par_Class" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="/index.php?title=Par_Class&amp;oldid=32015" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="/index.php?title=Par_Class&amp;action=info" title="More information about this page"><span>Page information</span></a></li><li id="t-cargopagevalueslink" class="mw-list-item"><a href="/index.php?title=Par_Class&amp;action=pagevalues" rel="cargo-pagevalues"><span>Page values</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 4 September 2024, at 07:44.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="/Derivative:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="/Derivative:About">About Derivative</a></li>
	<li id="footer-places-disclaimer"><a href="/Derivative:General_disclaimer">Disclaimers</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="/resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="/resources/assets/poweredby_mediawiki_132x47.png 1.5x, /resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.124","walltime":"0.163","ppvisitednodes":{"value":2312,"limit":1000000},"postexpandincludesize":{"value":76350,"limit":2097152},"templateargumentsize":{"value":38968,"limit":2097152},"expansiondepth":{"value":8,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":21898,"limit":5000000},"timingprofile":["100.00%   92.236      1 -total"," 81.97%   75.604      1 Template:ClassMemberSection"," 58.88%   54.310      3 Template:SubSection"," 21.29%   19.635     64 Template:ClassMember"," 12.95%   11.945      1 Template:ClassMethodSection","  5.38%    4.966     11 Template:ClassMethod","  2.36%    2.174      1 Template:TDClassSummary","  2.33%    2.147      1 Template:History"]},"scribunto":{"limitreport-timeusage":{"value":"0.030","limit":"5"},"limitreport-virtmemusage":{"value":8736768,"limit":104857600},"limitreport-estmemusage":0},"cachereport":{"timestamp":"20250701125652","ttl":60,"transientcontent":true}}});mw.config.set({"wgBackendResponseTime":348});});</script>
</body>
<!-- Cached 20250701125652 -->
</html>