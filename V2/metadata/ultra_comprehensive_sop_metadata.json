{
  "category": "SOP",
  "operatorCount": 116,
  "totalParameters": 1426,
  "lastUpdated": "2025-08-01T23:56:18.565Z",
  "operators": [
    {
      "name": "Add",
      "fullName": "Add SOP",
      "category": "SOP",
      "description": "The Add SOP can both create new Points and Polygons on its own, or it can be used to add Points and Polygons to an existing input.\n\nIf an input is specified, this SOP adds points and polygons to it as specified below. If no input is specified, then it generates the points and polygons below as a new entity. It can read points and vertices from DATs. See also DAT to SOP.\n\naddSOP_Class\n\nUsed in conjunction with a point expression, the Add SOP can be useful for extracting a specific point from another SOP. For example, to extract the X, Y and Z value of the fifth point, from a Grid SOP in geo1:\n\nPoints added in this way are appended to the end of the point list if a Source is specified. Middle-mouse click on the SOP node to find out how many points there are. For example, if you have added two points and there are 347 points (from 0 to 346), you have added the last two point numbers: 345 and 346.\n\nExtra Information for the Add SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditorwikieditor2022.241402021.100002020.200002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "pointdat",
          "label": "Pointdat",
          "description": "Pointdat parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Points Page"
        },
        {
          "name": "namedattribs",
          "label": "Namedattribs",
          "description": "Namedattribs parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Points Page"
        },
        {
          "name": "keep",
          "label": "Keep",
          "description": "Keep parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Points Page"
        },
        {
          "name": "addpts",
          "label": "Addpts",
          "description": "Addpts parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Points Page"
        },
        {
          "name": "point",
          "label": "Point",
          "description": "Point parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Points Page"
            },
            {
              "label": "By Pattern",
              "value": "pattern",
              "description": "Specify the points to use to create polygons using the parameters Polygon Table or Polygon 0 below."
            },
            {
              "label": "All Points",
              "value": "all",
              "description": "Adds all points just as if you added them manually in the Points page."
            },
            {
              "label": "Skip Every Nth Point",
              "value": "skip",
              "description": "Adds points, buts skips every Nth one."
            }
          ],
          "section": "Points Page"
        },
        {
          "name": "method",
          "label": "Method",
          "description": "Method parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polygons Page"
        },
        {
          "name": "group",
          "label": "Group",
          "description": "Create as many polygons as determined by the group field and by the grouping / skipping rules.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "By Group",
              "value": "group",
              "description": "Create as many polygons as determined by the group field and by the grouping / skipping rules."
            },
            {
              "label": "Each Group Separately",
              "value": "sep",
              "description": "Creates separate polygons for each group specified in the Group parameter. For example, if you have a Group SOP creating a group called group1 and using the Create Boundary Groups option, you can connect this to an Add SOP and enter group1__* in the Group parameter. If Each Group Separately is chosen, polygons will be created for each boundary on the surface."
            }
          ],
          "section": "Polygons Page"
        },
        {
          "name": "add",
          "label": "Add",
          "description": "Add parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "All Points",
              "value": "all",
              "description": "Adds all points just as if you added them manually in the Points page."
            },
            {
              "label": "Skip Every Nth Point",
              "value": "skip",
              "description": "Adds points, buts skips every Nth one."
            },
            {
              "label": "Each Group Separately",
              "value": "sep",
              "description": "Creates separate polygons for each group specified in the Group parameter. For example, if you have a Group SOP creating a group called group1 and using the Create Boundary Groups option, you can connect this to an Add SOP and enter group1__* in the Group parameter. If Each Group Separately is chosen, polygons will be created for each boundary on the surface."
            }
          ],
          "section": "Polygons Page"
        },
        {
          "name": "inc",
          "label": "Inc",
          "description": "Inc parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polygons Page"
        },
        {
          "name": "closedall",
          "label": "Closedall",
          "description": "Closedall parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polygons Page"
        },
        {
          "name": "polydat",
          "label": "Polydat",
          "description": "Polydat parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polygons Page"
        },
        {
          "name": "poly",
          "label": "Poly",
          "description": "Poly parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "By Group",
              "value": "group",
              "description": "Create as many polygons as determined by the group field and by the grouping / skipping rules."
            },
            {
              "label": "By Pattern",
              "value": "pattern",
              "description": "Specify the points to use to create polygons using the parameters Polygon Table or Polygon 0 below."
            },
            {
              "label": "Each Group Separately",
              "value": "sep",
              "description": "Creates separate polygons for each group specified in the Group parameter. For example, if you have a Group SOP creating a group called group1 and using the Create Boundary Groups option, you can connect this to an Add SOP and enter group1__* in the Group parameter. If Each Group Separately is chosen, polygons will be created for each boundary on the surface."
            }
          ],
          "section": "Polygons Page"
        },
        {
          "name": "remove",
          "label": "Remove",
          "description": "Remove parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Post Page"
        },
        {
          "name": "normals",
          "label": "Normals",
          "description": "Normals parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Post Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "NOTE: Turn off Compute Normals on the Polygon parameter page when supplying N(0) N(1) N(2) in the Points Table DAT.",
        "Tip: The Each Group Separately option is useful when pasting surfaces. Boundary groups can be created for the boundaries of two adjacent surfaces, and then the PolyLoft SOP (using the Points option) can be used to stitch these surfaces together."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "Named Attributes",
          "language": "python"
        },
        {
          "code": "P(0) P(1) P(2) P(3)",
          "language": "python"
        },
        {
          "code": "N(0) N(1) N(2)",
          "language": "python"
        },
        {
          "code": "Cd(0) Cd(1) Cd(2) Cd(3)",
          "language": "python"
        },
        {
          "code": "uv(0) uv(1) uv(2)",
          "language": "python"
        },
        {
          "code": "Compute Normals",
          "language": "python"
        },
        {
          "code": "N(0) N(1) N(2)",
          "language": "python"
        },
        {
          "code": "namedattribs",
          "language": "python"
        },
        {
          "code": "0.2    0.42    1.3",
          "language": "python"
        },
        {
          "code": "0.2    op('xform1').par.tx    1.36",
          "language": "python"
        },
        {
          "code": "# read the sixth point (first point is 0) from the SOP, grid1\nop('grid1').points[5].x    op('grid1').points[5].y    op('grid1').points[5].z",
          "language": "python"
        },
        {
          "code": "point0weight",
          "language": "python"
        },
        {
          "code": "Create Boundary Groups",
          "language": "python"
        },
        {
          "code": "Each Group Separately",
          "language": "python"
        },
        {
          "code": "poly0pattern",
          "language": "python"
        },
        {
          "code": "1 3-15 16 8",
          "language": "python"
        },
        {
          "code": "1-234 820-410 235-409",
          "language": "python"
        },
        {
          "code": "poly0closed",
          "language": "python"
        },
        {
          "code": "op('geo1/grid1').points[5].x\nop('geo1/grid1').points[5].y\nop('geo1/grid1').points[5].z",
          "language": "python"
        },
        {
          "code": "/geo1/circle1",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Add_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:15.925Z",
      "parameterCount": 14
    },
    {
      "name": "Alembic",
      "fullName": "Alembic SOP",
      "category": "SOP",
      "description": "The Alembic SOP loads and plays back Alembic file geometry sequences.\n\nThe supported Alembic primitives are polymesh, curves, and points for geometry. As well, Alembic transformations are supported.\n\nFor Alembic files that contain animation, use the Time parameter and pay attention to the Unit menu to control it in frames, seconds, or whatever you like.\n\nAn Alembic archive may contain one or more object paths for one or multiple geometries. It is possible to view these objects all at once or select them separately using the 'Object Path' parameter menu.\n\nEach object in an Alembic file schema may possess standard or custom attributes. The standard attributes are normal (N), velocity (V), and texture coordinates (UV). \nMultiple custom attributes may live in an Alembic schema with more flexible names and types. The custom attribute types can be any of the following:\n\nThe conversion between the Alembic geometries scopes to the TouchDesigner attributes types are shown in the table below:\n\nThe Alembic SOP lets you load geometry to either the CPU or the GPU.\nWhile using the GPU is much faster, it has some limitations:\n\nalembicSOP_Class\n\nExtra Information for the Alembic SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "file",
          "label": "File",
          "description": "File parameter",
          "type": "File",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "objectpath",
          "label": "Objectpath",
          "description": "Objectpath parameter",
          "type": "File",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "time",
          "label": "Time",
          "description": "Time parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "timeunit",
          "label": "Timeunit",
          "description": "Timeunit parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "xform",
          "label": "Xform",
          "description": "Xform parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "interp",
          "label": "Interp",
          "description": "Interp parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Smooth Interpolation",
              "value": "interpT",
              "description": "Smooth interpolation between each two samples is calculated."
            }
          ],
          "section": "Page"
        },
        {
          "name": "straightgpu",
          "label": "Straightgpu",
          "description": "Straightgpu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "compnml",
          "label": "Compnml",
          "description": "Compnml parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "loadfile",
          "label": "Loadfile",
          "description": "Loadfile parameter",
          "type": "File",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "straightgpu",
          "language": "python"
        },
        {
          "code": "/geo1/circle1",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "The Alembic SOP lets you load geometry to either the CPU or the GPU.\nWhile using the GPU is much faster, it has some limitations:",
        "In GPU direct mode you can not connect additional SOPs downstream.",
        "In GPU direct mode, when there are multiple objects with different sets of attributes, a default value is used for the missing attributes of each objects. For example, if one geometry has normal data and another one doesn’t, the x, y, and z elements of normal vector for the geometry with the missing normal attribute will be set to 0, 0, 1 respectively.",
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "Image positioning and scaling",
        "Rotation and skew operations",
        "Coordinate space conversions",
        "Animation and motion graphics"
      ],
      "url": "https://docs.derivative.ca/Alembic_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:15.956Z",
      "parameterCount": 9
    },
    {
      "name": "Align",
      "fullName": "Align SOP",
      "category": "SOP",
      "description": "The Align SOP aligns a group of primitives to each other or to an auxiliary input, by translating or rotating each primitive along any pivot point.\n\nLeft and Right Primitives - The notions of \"left\" and \"right\" which follow depend on context. If an auxiliary input is used, it is always the right primitive and the primary input geometry are all left primitives. If only one input is used, then for each pair being aligned, there is a left and a right primitive. This means that relative to neighbouring primitives, one primitive can be both left and right.\n\nalignSOP_Class\n\nExtra Information for the Align SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "align",
          "label": "Align",
          "description": "Align parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "inc",
          "label": "Inc",
          "description": "Inc parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "bias",
          "label": "Bias",
          "description": "Bias parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Align Page"
        },
        {
          "name": "leftuv",
          "label": "Leftuv",
          "description": "Leftuv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Align Page"
        },
        {
          "name": "rightuv",
          "label": "Rightuv",
          "description": "Rightuv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Align Page"
        },
        {
          "name": "rightuvend",
          "label": "Rightuvend",
          "description": "Rightuvend parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Align Page"
        },
        {
          "name": "individual",
          "label": "Individual",
          "description": "Individual parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Align Page"
        },
        {
          "name": "dotrans",
          "label": "Dotrans",
          "description": "Dotrans parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Align Page"
        },
        {
          "name": "dorotate",
          "label": "Dorotate",
          "description": "Dorotate parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Align Page"
        },
        {
          "name": "xord",
          "label": "Xord",
          "description": "Xord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "rord",
          "label": "Rord",
          "description": "Rord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            }
          ],
          "section": "Transform Page"
        },
        {
          "name": "r",
          "label": "R",
          "description": "R parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            }
          ],
          "section": "Transform Page"
        },
        {
          "name": "s",
          "label": "S",
          "description": "S parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            }
          ],
          "section": "Transform Page"
        },
        {
          "name": "p",
          "label": "P",
          "description": "P parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            }
          ],
          "section": "Transform Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "Right UV End",
          "language": "python"
        },
        {
          "code": "rightuvend1",
          "language": "python"
        },
        {
          "code": "rightuvend2",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Align_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:15.935Z",
      "parameterCount": 16
    },
    {
      "name": "Arm",
      "fullName": "Arm SOP",
      "category": "SOP",
      "description": "The Arm SOP creates all the necessary geometry for an arm, and provides a smooth, untwisted skin that connects the arm to the body. It is controlled through inverse kinematics linked to a handprint.\n\narmSOP_Class\n\nWhen the arm is positioned to reach the end affector (hand print), the shoulder, elbow and wrist joints may produce unnatural looking bends. The transform fields allow manual adjustment of each controlling circle of each joint to fix this.\n\nEach joint circle (e.g. Shoulder 1) is given three transform fields (two translates and one scale). These values are scaled by the amount of bend applied to the particular joint. In other words, when the arm is fully extended, the transforms have no effect. When the arm joint angles are at 90, they have maximum effect. Thus, set the joints to 90 before adjusting these values.\n\nExtra Information for the Arm SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "capttype",
          "label": "Capttype",
          "description": "Capttype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Arm Page"
        },
        {
          "name": "axis",
          "label": "Axis",
          "description": "Axis parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Arm Page"
        },
        {
          "name": "bonerad",
          "label": "Bonerad",
          "description": "Bonerad parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Arm Page"
        },
        {
          "name": "rotatehand",
          "label": "Rotatehand",
          "description": "Rotatehand parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Arm Page"
        },
        {
          "name": "autoelbow",
          "label": "Autoelbow",
          "description": "Autoelbow parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Arm Page"
        },
        {
          "name": "elbowtwist",
          "label": "Elbowtwist",
          "description": "Elbowtwist parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Arm Page"
        },
        {
          "name": "flipelbow",
          "label": "Flipelbow",
          "description": "Flipelbow parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Arm Page"
        },
        {
          "name": "clavlength",
          "label": "Clavlength",
          "description": "Clavlength parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Lengths Page"
        },
        {
          "name": "humlength",
          "label": "Humlength",
          "description": "Humlength parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Lengths Page"
        },
        {
          "name": "ulnalength",
          "label": "Ulnalength",
          "description": "Ulnalength parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Lengths Page"
        },
        {
          "name": "handlength",
          "label": "Handlength",
          "description": "Handlength parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Lengths Page"
        },
        {
          "name": "shoulder",
          "label": "Shoulder",
          "description": "Shoulder parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "X",
              "value": "shoulder1tx",
              "description": "The X position of the first shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder1ty",
              "description": "The Z position of the first shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder1tz",
              "description": "The overall scale of the first shoulder circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "shoulder2tx",
              "description": "The X position of the second shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder2ty",
              "description": "The Z position of the second shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder2tz",
              "description": "The overall scale of the second shoulder circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "shoulder3tx",
              "description": "The X position of the third shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder3ty",
              "description": "The Z position of the third shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder3tz",
              "description": "The overall scale of the third shoulder circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "shoulder4tx",
              "description": "The X position of the fourth shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder4ty",
              "description": "The Z position of the fourth shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder4tz",
              "description": "The overall scale of the fourth shoulder circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "shoulder5tx",
              "description": "The X position of the fifth shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder5ty",
              "description": "The Z position of the fifth shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder5tz",
              "description": "The overall scale of the fifth shoulder circle. (Note: the parameter is labelled Z)."
            }
          ],
          "section": "Lengths Page"
        },
        {
          "name": "elbow",
          "label": "Elbow",
          "description": "Elbow parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "X",
              "value": "elbow1tx",
              "description": "The X position of the first elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow1ty",
              "description": "The Z position of the first elbow circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "elbow1tz",
              "description": "The overall scale of the first elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "elbow2tx",
              "description": "The X position of the second elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow2ty",
              "description": "The Z position of the second elbow circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "elbow2tz",
              "description": "The overall scale of the second elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "elbow3tx",
              "description": "The X position of the third elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow3ty",
              "description": "The Z position of the third elbow circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "elbow3tz",
              "description": "The overall scale of the third elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "elbow4tx",
              "description": "The X position of the fourth elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow4ty",
              "description": "The overall scale of the fourth elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "elbow4tz",
              "description": "The overall scale of the fourth elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "elbow5tx",
              "description": "The X position of the fifth elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow5ty",
              "description": "The overall scale of the fifth elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "elbow5tz",
              "description": "The overall scale of the fifth elbow circle. (Note: the parameter is labelled Z)."
            }
          ],
          "section": "Lengths Page"
        },
        {
          "name": "wrist",
          "label": "Wrist",
          "description": "Wrist parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "X",
              "value": "wrist1tx",
              "description": "The X position of the first wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist1ty",
              "description": "The overall scale of the first wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist1tz",
              "description": "The overall scale of the first wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "wrist2tx",
              "description": "The X position of the second wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist2ty",
              "description": "The overall scale of the second wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist2tz",
              "description": "The overall scale of the second wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "wrist3tx",
              "description": "The X position of the third wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist3ty",
              "description": "The overall scale of the third wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist3tz",
              "description": "The overall scale of the third wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "wrist4tx",
              "description": "The X position of the fourth wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist4ty",
              "description": "The overall scale of the fourth wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist4tz",
              "description": "The overall scale of the fourth wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "wrist5tx",
              "description": "The X position of the fifth wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist5ty",
              "description": "The overall scale of the fifth wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist5tz",
              "description": "The overall scale of the fifth wrist circle. (Note: the parameter is labelled Z)."
            }
          ],
          "section": "Lengths Page"
        },
        {
          "name": "shoulder1t",
          "label": "Shoulder1t",
          "description": "Shoulder1t parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "X",
              "value": "shoulder1tx",
              "description": "The X position of the first shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder1ty",
              "description": "The Z position of the first shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder1tz",
              "description": "The overall scale of the first shoulder circle. (Note: the parameter is labelled Z)."
            }
          ],
          "section": "Transforms Page"
        },
        {
          "name": "shoulder2t",
          "label": "Shoulder2t",
          "description": "Shoulder2t parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "X",
              "value": "shoulder2tx",
              "description": "The X position of the second shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder2ty",
              "description": "The Z position of the second shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder2tz",
              "description": "The overall scale of the second shoulder circle. (Note: the parameter is labelled Z)."
            }
          ],
          "section": "Transforms Page"
        },
        {
          "name": "shoulder3t",
          "label": "Shoulder3t",
          "description": "Shoulder3t parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "X",
              "value": "shoulder3tx",
              "description": "The X position of the third shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder3ty",
              "description": "The Z position of the third shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder3tz",
              "description": "The overall scale of the third shoulder circle. (Note: the parameter is labelled Z)."
            }
          ],
          "section": "Transforms Page"
        },
        {
          "name": "shoulder4t",
          "label": "Shoulder4t",
          "description": "Shoulder4t parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "X",
              "value": "shoulder4tx",
              "description": "The X position of the fourth shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder4ty",
              "description": "The Z position of the fourth shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder4tz",
              "description": "The overall scale of the fourth shoulder circle. (Note: the parameter is labelled Z)."
            }
          ],
          "section": "Transforms Page"
        },
        {
          "name": "shoulder5t",
          "label": "Shoulder5t",
          "description": "Shoulder5t parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "X",
              "value": "shoulder5tx",
              "description": "The X position of the fifth shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder5ty",
              "description": "The Z position of the fifth shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder5tz",
              "description": "The overall scale of the fifth shoulder circle. (Note: the parameter is labelled Z)."
            }
          ],
          "section": "Transforms Page"
        },
        {
          "name": "elbow1t",
          "label": "Elbow1t",
          "description": "Elbow1t parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "X",
              "value": "elbow1tx",
              "description": "The X position of the first elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow1ty",
              "description": "The Z position of the first elbow circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "elbow1tz",
              "description": "The overall scale of the first elbow circle. (Note: the parameter is labelled Z)."
            }
          ],
          "section": "Transforms Page"
        },
        {
          "name": "elbow2t",
          "label": "Elbow2t",
          "description": "Elbow2t parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "X",
              "value": "elbow2tx",
              "description": "The X position of the second elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow2ty",
              "description": "The Z position of the second elbow circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "elbow2tz",
              "description": "The overall scale of the second elbow circle. (Note: the parameter is labelled Z)."
            }
          ],
          "section": "Transforms Page"
        },
        {
          "name": "elbow3t",
          "label": "Elbow3t",
          "description": "Elbow3t parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "X",
              "value": "elbow3tx",
              "description": "The X position of the third elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow3ty",
              "description": "The Z position of the third elbow circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "elbow3tz",
              "description": "The overall scale of the third elbow circle. (Note: the parameter is labelled Z)."
            }
          ],
          "section": "Transforms Page"
        },
        {
          "name": "elbow4t",
          "label": "Elbow4t",
          "description": "Elbow4t parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "X",
              "value": "elbow4tx",
              "description": "The X position of the fourth elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow4ty",
              "description": "The overall scale of the fourth elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "elbow4tz",
              "description": "The overall scale of the fourth elbow circle. (Note: the parameter is labelled Z)."
            }
          ],
          "section": "Transforms Page"
        },
        {
          "name": "elbow5t",
          "label": "Elbow5t",
          "description": "Elbow5t parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "X",
              "value": "elbow5tx",
              "description": "The X position of the fifth elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow5ty",
              "description": "The overall scale of the fifth elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "elbow5tz",
              "description": "The overall scale of the fifth elbow circle. (Note: the parameter is labelled Z)."
            }
          ],
          "section": "Transforms Page"
        },
        {
          "name": "wrist1t",
          "label": "Wrist1t",
          "description": "Wrist1t parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "X",
              "value": "wrist1tx",
              "description": "The X position of the first wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist1ty",
              "description": "The overall scale of the first wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist1tz",
              "description": "The overall scale of the first wrist circle. (Note: the parameter is labelled Z)."
            }
          ],
          "section": "Transforms Page"
        },
        {
          "name": "wrist2t",
          "label": "Wrist2t",
          "description": "Wrist2t parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "X",
              "value": "wrist2tx",
              "description": "The X position of the second wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist2ty",
              "description": "The overall scale of the second wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist2tz",
              "description": "The overall scale of the second wrist circle. (Note: the parameter is labelled Z)."
            }
          ],
          "section": "Transforms Page"
        },
        {
          "name": "wrist3t",
          "label": "Wrist3t",
          "description": "Wrist3t parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "X",
              "value": "wrist3tx",
              "description": "The X position of the third wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist3ty",
              "description": "The overall scale of the third wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist3tz",
              "description": "The overall scale of the third wrist circle. (Note: the parameter is labelled Z)."
            }
          ],
          "section": "Transforms Page"
        },
        {
          "name": "wrist4t",
          "label": "Wrist4t",
          "description": "Wrist4t parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "X",
              "value": "wrist4tx",
              "description": "The X position of the fourth wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist4ty",
              "description": "The overall scale of the fourth wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist4tz",
              "description": "The overall scale of the fourth wrist circle. (Note: the parameter is labelled Z)."
            }
          ],
          "section": "Transforms Page"
        },
        {
          "name": "wrist5t",
          "label": "Wrist5t",
          "description": "Wrist5t parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "X",
              "value": "wrist5tx",
              "description": "The X position of the fifth wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist5ty",
              "description": "The overall scale of the fifth wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist5tz",
              "description": "The overall scale of the fifth wrist circle. (Note: the parameter is labelled Z)."
            }
          ],
          "section": "Transforms Page"
        },
        {
          "name": "affector",
          "label": "Affector",
          "description": "Affector parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "X",
              "value": "tx",
              "description": "End Affector X Translate."
            },
            {
              "label": "Y",
              "value": "ty",
              "description": "End Affector Y Translate."
            },
            {
              "label": "Z",
              "value": "tz",
              "description": "End Affector Z Translate."
            },
            {
              "label": "X",
              "value": "rx",
              "description": "End Affector X Rotate."
            },
            {
              "label": "Y",
              "value": "ry",
              "description": "End Affector Y Rotate."
            },
            {
              "label": "Z",
              "value": "rz",
              "description": "End Affector Z Rotate."
            },
            {
              "label": "X",
              "value": "sx",
              "description": "End Affector X Scale."
            },
            {
              "label": "Y",
              "value": "sy",
              "description": "End Affector Y Scale."
            },
            {
              "label": "Z",
              "value": "sz",
              "description": "End Affector Z Scale."
            }
          ],
          "section": "End Affector Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Arm Page"
            },
            {
              "label": "X",
              "value": "shoulder1tx",
              "description": "The X position of the first shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder1ty",
              "description": "The Z position of the first shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder1tz",
              "description": "The overall scale of the first shoulder circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "shoulder2tx",
              "description": "The X position of the second shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder2ty",
              "description": "The Z position of the second shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder2tz",
              "description": "The overall scale of the second shoulder circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "shoulder3tx",
              "description": "The X position of the third shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder3ty",
              "description": "The Z position of the third shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder3tz",
              "description": "The overall scale of the third shoulder circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "shoulder4tx",
              "description": "The X position of the fourth shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder4ty",
              "description": "The Z position of the fourth shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder4tz",
              "description": "The overall scale of the fourth shoulder circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "shoulder5tx",
              "description": "The X position of the fifth shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder5ty",
              "description": "The Z position of the fifth shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder5tz",
              "description": "The overall scale of the fifth shoulder circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "elbow1tx",
              "description": "The X position of the first elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow1ty",
              "description": "The Z position of the first elbow circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "elbow1tz",
              "description": "The overall scale of the first elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "elbow2tx",
              "description": "The X position of the second elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow2ty",
              "description": "The Z position of the second elbow circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "elbow2tz",
              "description": "The overall scale of the second elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "elbow3tx",
              "description": "The X position of the third elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow3ty",
              "description": "The Z position of the third elbow circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "elbow3tz",
              "description": "The overall scale of the third elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "elbow4tx",
              "description": "The X position of the fourth elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow4ty",
              "description": "The overall scale of the fourth elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "elbow4tz",
              "description": "The overall scale of the fourth elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "elbow5tx",
              "description": "The X position of the fifth elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow5ty",
              "description": "The overall scale of the fifth elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "elbow5tz",
              "description": "The overall scale of the fifth elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "wrist1tx",
              "description": "The X position of the first wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist1ty",
              "description": "The overall scale of the first wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist1tz",
              "description": "The overall scale of the first wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "wrist2tx",
              "description": "The X position of the second wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist2ty",
              "description": "The overall scale of the second wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist2tz",
              "description": "The overall scale of the second wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "wrist3tx",
              "description": "The X position of the third wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist3ty",
              "description": "The overall scale of the third wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist3tz",
              "description": "The overall scale of the third wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "wrist4tx",
              "description": "The X position of the fourth wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist4ty",
              "description": "The overall scale of the fourth wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist4tz",
              "description": "The overall scale of the fourth wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "wrist5tx",
              "description": "The X position of the fifth wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist5ty",
              "description": "The overall scale of the fifth wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist5tz",
              "description": "The overall scale of the fifth wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "tx",
              "description": "End Affector X Translate."
            },
            {
              "label": "Y",
              "value": "ty",
              "description": "End Affector Y Translate."
            },
            {
              "label": "Z",
              "value": "tz",
              "description": "End Affector Z Translate."
            },
            {
              "label": "X",
              "value": "rx",
              "description": "End Affector X Rotate."
            },
            {
              "label": "Y",
              "value": "ry",
              "description": "End Affector Y Rotate."
            },
            {
              "label": "Z",
              "value": "rz",
              "description": "End Affector Z Rotate."
            },
            {
              "label": "X",
              "value": "sx",
              "description": "End Affector X Scale."
            },
            {
              "label": "Y",
              "value": "sy",
              "description": "End Affector Y Scale."
            },
            {
              "label": "Z",
              "value": "sz",
              "description": "End Affector Z Scale."
            }
          ],
          "section": "End Affector Page"
        },
        {
          "name": "r",
          "label": "R",
          "description": "R parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Arm Page"
            },
            {
              "label": "X",
              "value": "shoulder1tx",
              "description": "The X position of the first shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder1ty",
              "description": "The Z position of the first shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder1tz",
              "description": "The overall scale of the first shoulder circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "shoulder2tx",
              "description": "The X position of the second shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder2ty",
              "description": "The Z position of the second shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder2tz",
              "description": "The overall scale of the second shoulder circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "shoulder3tx",
              "description": "The X position of the third shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder3ty",
              "description": "The Z position of the third shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder3tz",
              "description": "The overall scale of the third shoulder circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "shoulder4tx",
              "description": "The X position of the fourth shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder4ty",
              "description": "The Z position of the fourth shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder4tz",
              "description": "The overall scale of the fourth shoulder circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "shoulder5tx",
              "description": "The X position of the fifth shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder5ty",
              "description": "The Z position of the fifth shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder5tz",
              "description": "The overall scale of the fifth shoulder circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "elbow1tx",
              "description": "The X position of the first elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow1ty",
              "description": "The Z position of the first elbow circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "elbow1tz",
              "description": "The overall scale of the first elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "elbow2tx",
              "description": "The X position of the second elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow2ty",
              "description": "The Z position of the second elbow circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "elbow2tz",
              "description": "The overall scale of the second elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "elbow3tx",
              "description": "The X position of the third elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow3ty",
              "description": "The Z position of the third elbow circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "elbow3tz",
              "description": "The overall scale of the third elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "elbow4tx",
              "description": "The X position of the fourth elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow4ty",
              "description": "The overall scale of the fourth elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "elbow4tz",
              "description": "The overall scale of the fourth elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "elbow5tx",
              "description": "The X position of the fifth elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow5ty",
              "description": "The overall scale of the fifth elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "elbow5tz",
              "description": "The overall scale of the fifth elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "wrist1tx",
              "description": "The X position of the first wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist1ty",
              "description": "The overall scale of the first wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist1tz",
              "description": "The overall scale of the first wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "wrist2tx",
              "description": "The X position of the second wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist2ty",
              "description": "The overall scale of the second wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist2tz",
              "description": "The overall scale of the second wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "wrist3tx",
              "description": "The X position of the third wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist3ty",
              "description": "The overall scale of the third wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist3tz",
              "description": "The overall scale of the third wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "wrist4tx",
              "description": "The X position of the fourth wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist4ty",
              "description": "The overall scale of the fourth wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist4tz",
              "description": "The overall scale of the fourth wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "wrist5tx",
              "description": "The X position of the fifth wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist5ty",
              "description": "The overall scale of the fifth wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist5tz",
              "description": "The overall scale of the fifth wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "tx",
              "description": "End Affector X Translate."
            },
            {
              "label": "Y",
              "value": "ty",
              "description": "End Affector Y Translate."
            },
            {
              "label": "Z",
              "value": "tz",
              "description": "End Affector Z Translate."
            },
            {
              "label": "X",
              "value": "rx",
              "description": "End Affector X Rotate."
            },
            {
              "label": "Y",
              "value": "ry",
              "description": "End Affector Y Rotate."
            },
            {
              "label": "Z",
              "value": "rz",
              "description": "End Affector Z Rotate."
            },
            {
              "label": "X",
              "value": "sx",
              "description": "End Affector X Scale."
            },
            {
              "label": "Y",
              "value": "sy",
              "description": "End Affector Y Scale."
            },
            {
              "label": "Z",
              "value": "sz",
              "description": "End Affector Z Scale."
            }
          ],
          "section": "End Affector Page"
        },
        {
          "name": "s",
          "label": "S",
          "description": "S parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Arm Page"
            },
            {
              "label": "X",
              "value": "shoulder1tx",
              "description": "The X position of the first shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder1ty",
              "description": "The Z position of the first shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder1tz",
              "description": "The overall scale of the first shoulder circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "shoulder2tx",
              "description": "The X position of the second shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder2ty",
              "description": "The Z position of the second shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder2tz",
              "description": "The overall scale of the second shoulder circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "shoulder3tx",
              "description": "The X position of the third shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder3ty",
              "description": "The Z position of the third shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder3tz",
              "description": "The overall scale of the third shoulder circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "shoulder4tx",
              "description": "The X position of the fourth shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder4ty",
              "description": "The Z position of the fourth shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder4tz",
              "description": "The overall scale of the fourth shoulder circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "shoulder5tx",
              "description": "The X position of the fifth shoulder circle."
            },
            {
              "label": "Y",
              "value": "shoulder5ty",
              "description": "The Z position of the fifth shoulder circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "shoulder5tz",
              "description": "The overall scale of the fifth shoulder circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "elbow1tx",
              "description": "The X position of the first elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow1ty",
              "description": "The Z position of the first elbow circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "elbow1tz",
              "description": "The overall scale of the first elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "elbow2tx",
              "description": "The X position of the second elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow2ty",
              "description": "The Z position of the second elbow circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "elbow2tz",
              "description": "The overall scale of the second elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "elbow3tx",
              "description": "The X position of the third elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow3ty",
              "description": "The Z position of the third elbow circle. (Note: the parameter is labelled Y)."
            },
            {
              "label": "Z",
              "value": "elbow3tz",
              "description": "The overall scale of the third elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "elbow4tx",
              "description": "The X position of the fourth elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow4ty",
              "description": "The overall scale of the fourth elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "elbow4tz",
              "description": "The overall scale of the fourth elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "elbow5tx",
              "description": "The X position of the fifth elbow circle."
            },
            {
              "label": "Y",
              "value": "elbow5ty",
              "description": "The overall scale of the fifth elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "elbow5tz",
              "description": "The overall scale of the fifth elbow circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "wrist1tx",
              "description": "The X position of the first wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist1ty",
              "description": "The overall scale of the first wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist1tz",
              "description": "The overall scale of the first wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "wrist2tx",
              "description": "The X position of the second wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist2ty",
              "description": "The overall scale of the second wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist2tz",
              "description": "The overall scale of the second wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "wrist3tx",
              "description": "The X position of the third wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist3ty",
              "description": "The overall scale of the third wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist3tz",
              "description": "The overall scale of the third wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "wrist4tx",
              "description": "The X position of the fourth wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist4ty",
              "description": "The overall scale of the fourth wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist4tz",
              "description": "The overall scale of the fourth wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "wrist5tx",
              "description": "The X position of the fifth wrist circle."
            },
            {
              "label": "Y",
              "value": "wrist5ty",
              "description": "The overall scale of the fifth wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "Z",
              "value": "wrist5tz",
              "description": "The overall scale of the fifth wrist circle. (Note: the parameter is labelled Z)."
            },
            {
              "label": "X",
              "value": "tx",
              "description": "End Affector X Translate."
            },
            {
              "label": "Y",
              "value": "ty",
              "description": "End Affector Y Translate."
            },
            {
              "label": "Z",
              "value": "tz",
              "description": "End Affector Z Translate."
            },
            {
              "label": "X",
              "value": "sx",
              "description": "End Affector X Scale."
            },
            {
              "label": "Y",
              "value": "sy",
              "description": "End Affector Y Scale."
            },
            {
              "label": "Z",
              "value": "sz",
              "description": "End Affector Z Scale."
            }
          ],
          "section": "End Affector Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note: If the channel is set to 0, then the hand rotations are relative to the forearm. If the channel is set to 1, the hand rotations are the same orientation as the end affector.",
        "Y shoulder1ty - The Z position of the first shoulder circle. (Note: the parameter is labelled Y).",
        "Z shoulder1tz - The overall scale of the first shoulder circle. (Note: the parameter is labelled Z).",
        "Y shoulder2ty - The Z position of the second shoulder circle. (Note: the parameter is labelled Y).",
        "Z shoulder2tz - The overall scale of the second shoulder circle. (Note: the parameter is labelled Z).",
        "Y shoulder3ty - The Z position of the third shoulder circle. (Note: the parameter is labelled Y).",
        "Z shoulder3tz - The overall scale of the third shoulder circle. (Note: the parameter is labelled Z).",
        "Y shoulder4ty - The Z position of the fourth shoulder circle. (Note: the parameter is labelled Y).",
        "Z shoulder4tz - The overall scale of the fourth shoulder circle. (Note: the parameter is labelled Z).",
        "Y shoulder5ty - The Z position of the fifth shoulder circle. (Note: the parameter is labelled Y).",
        "Z shoulder5tz - The overall scale of the fifth shoulder circle. (Note: the parameter is labelled Z).",
        "Y elbow1ty - The Z position of the first elbow circle. (Note: the parameter is labelled Y).",
        "Z elbow1tz - The overall scale of the first elbow circle. (Note: the parameter is labelled Z).",
        "Y elbow2ty - The Z position of the second elbow circle. (Note: the parameter is labelled Y).",
        "Z elbow2tz - The overall scale of the second elbow circle. (Note: the parameter is labelled Z).",
        "Y elbow3ty - The Z position of the third elbow circle. (Note: the parameter is labelled Y).",
        "Z elbow3tz - The overall scale of the third elbow circle. (Note: the parameter is labelled Z).",
        "Y elbow4ty - The overall scale of the fourth elbow circle. (Note: the parameter is labelled Z).",
        "Z elbow4tz - The overall scale of the fourth elbow circle. (Note: the parameter is labelled Z).",
        "Y elbow5ty - The overall scale of the fifth elbow circle. (Note: the parameter is labelled Z).",
        "Z elbow5tz - The overall scale of the fifth elbow circle. (Note: the parameter is labelled Z).",
        "Y wrist1ty - The overall scale of the first wrist circle. (Note: the parameter is labelled Z).",
        "Z wrist1tz - The overall scale of the first wrist circle. (Note: the parameter is labelled Z).",
        "Y wrist2ty - The overall scale of the second wrist circle. (Note: the parameter is labelled Z).",
        "Z wrist2tz - The overall scale of the second wrist circle. (Note: the parameter is labelled Z).",
        "Y wrist3ty - The overall scale of the third wrist circle. (Note: the parameter is labelled Z).",
        "Z wrist3tz - The overall scale of the third wrist circle. (Note: the parameter is labelled Z).",
        "Y wrist4ty - The overall scale of the fourth wrist circle. (Note: the parameter is labelled Z).",
        "Z wrist4tz - The overall scale of the fourth wrist circle. (Note: the parameter is labelled Z).",
        "Y wrist5ty - The overall scale of the fifth wrist circle. (Note: the parameter is labelled Z).",
        "Z wrist5tz - The overall scale of the fifth wrist circle. (Note: the parameter is labelled Z)."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "shoulder1tx",
          "language": "python"
        },
        {
          "code": "shoulder1ty",
          "language": "python"
        },
        {
          "code": "shoulder1tz",
          "language": "python"
        },
        {
          "code": "shoulder2tx",
          "language": "python"
        },
        {
          "code": "shoulder2ty",
          "language": "python"
        },
        {
          "code": "shoulder2tz",
          "language": "python"
        },
        {
          "code": "shoulder3tx",
          "language": "python"
        },
        {
          "code": "shoulder3ty",
          "language": "python"
        },
        {
          "code": "shoulder3tz",
          "language": "python"
        },
        {
          "code": "shoulder4tx",
          "language": "python"
        },
        {
          "code": "shoulder4ty",
          "language": "python"
        },
        {
          "code": "shoulder4tz",
          "language": "python"
        },
        {
          "code": "shoulder5tx",
          "language": "python"
        },
        {
          "code": "shoulder5ty",
          "language": "python"
        },
        {
          "code": "shoulder5tz",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "Image positioning and scaling",
        "Rotation and skew operations",
        "Coordinate space conversions",
        "Animation and motion graphics"
      ],
      "url": "https://docs.derivative.ca/Arm_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:15.900Z",
      "parameterCount": 33
    },
    {
      "name": "Attribute Create",
      "fullName": "Attribute Create SOP",
      "category": "SOP",
      "description": "The Attribute Create SOP allows you to add normals or tangents to geometry.\n\nYou can create custom attributes in other ways:  CHOP to SOP, Script SOP.\n\nattributecreateSOP_Class\n\nExtra Information for the Attribute Create SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditorwikieditor2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "compnml",
          "label": "Compnml",
          "description": "Compnml parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "comptang",
          "label": "Comptang",
          "description": "Comptang parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "mikktspace",
          "label": "Mikktspace",
          "description": "Mikktspace parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Attributes",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Attribute_Create_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:15.909Z",
      "parameterCount": 3
    },
    {
      "name": "Attribute",
      "fullName": "Attribute SOP",
      "category": "SOP",
      "description": "The Attribute SOP allows you to manually rename and delete point, vertex, and primitive attributes.\n\nThe top portion of each parameter page deals with the deleting of a specifc type of attributes.\n\nFor example: Cd Alpha\n\nPattern Matching - Deletion accepts general pattern matching when determining which attributes to delete. For example:\n\nNote: You should never delete just one of the following attributes, but always keep/delete them together. This is because TouchDesigner's capture/deform system expects these three attributes to occur together. Deleting a subset of the three will cause errors as they are interdependent: \t\t\npCapt (point attribute), pCaptPath, pCaptData (detail attribute)\n\nThe next section of each page deals with renaming attributes. Specify the name of the original incoming attribute in the 'From Attribute' parameter, and the new name you want it renamed to in the 'To Attribute' parameter.\n\nattributeSOP_Class\n\nThese tabbed pages are identical to the Point page except that they deal with vertex and primitive attributes of the input geometry.\n\nAccepts geometry of all types.\n\nExtra Information for the Attribute SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditorwikieditorwikieditor2022.241402021.100002020.200002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "ptdel",
          "label": "Ptdel",
          "description": "Ptdel parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Point Page"
        },
        {
          "name": "pt",
          "label": "Pt",
          "description": "Pt parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Point Page"
        },
        {
          "name": "vertdel",
          "label": "Vertdel",
          "description": "Vertdel parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Vertex Page"
        },
        {
          "name": "vert",
          "label": "Vert",
          "description": "Vert parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Vertex Page"
        },
        {
          "name": "primdel",
          "label": "Primdel",
          "description": "Primdel parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Primitive Page"
        },
        {
          "name": "prim",
          "label": "Prim",
          "description": "Prim parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Primitive Page"
        },
        {
          "name": "attrdel",
          "label": "Attrdel",
          "description": "Attrdel parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        },
        {
          "name": "attr",
          "label": "Attr",
          "description": "Attr parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note: You should never delete just one of the following attributes, but always keep/delete them together. This is because TouchDesigner's capture/deform system expects these three attributes to occur together. Deleting a subset of the three will cause errors as they are interdependent: \t\t\npCapt (point attribute), pCaptPath, pCaptData (detail attribute)"
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "pCapt (point attribute), pCaptPath, pCaptData (detail attribute)",
          "language": "python"
        },
        {
          "code": "Cd creaseweight",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Attributes",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Attribute_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.057Z",
      "parameterCount": 8
    },
    {
      "name": "Basis",
      "fullName": "Basis SOP",
      "category": "SOP",
      "description": "The Basis SOP provides a set of operations applicable to the parametric space of spline curves and surfaces. The parametric space, also known as the \"domain\" of a NURBS or Bzier primitive, is defined by one basis in the U direction and, if the primitive is a surface, another basis in the V direction. The size of the domain is given by the values of the knots that make up the basis.\n\nThe Basis SOP contains both ratio-preserving and non ratio-preserving operations.\n\nIf the basis reparameterization does not change the distance ratios between knots, the shape of a NURBS primitive is not affected. If the ratios are not preserved, however, a NURBS primitive will change shape in the area influenced by the modified knots; furthermore, if the primitive is a NURBS or Bzier surface, any profiles it may contain will be affected as well.\n\nFor more information about bases and knots see Breakpoints, Knots, and Spline Basis in the Primitive and Spline articles.\n\nbasisSOP_Class\n\nExtra Information for the Basis SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Manual: Propagated",
              "value": "manualall",
              "description": "Same as above + it copies the basis to the basis of all the other spline primitives in the model or in the group. Using this feature on curves that have the point count and degree will generate cleaner surfaces, i.e. surfaces with fewer isoparms."
            }
          ],
          "section": "Basis Page"
        },
        {
          "name": "ubasis",
          "label": "Ubasis",
          "description": "Ubasis parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Page"
        },
        {
          "name": "uparmtype",
          "label": "Uparmtype",
          "description": "Uparmtype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Page"
        },
        {
          "name": "uknots",
          "label": "Uknots",
          "description": "Uknots parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Page"
        },
        {
          "name": "uread",
          "label": "Uread",
          "description": "Uread parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Page"
        },
        {
          "name": "urange",
          "label": "Urange",
          "description": "Urange parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Page"
        },
        {
          "name": "ubias",
          "label": "Ubias",
          "description": "Ubias parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Page"
        },
        {
          "name": "uconcat",
          "label": "Uconcat",
          "description": "Uconcat parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Page"
        },
        {
          "name": "udoorigin",
          "label": "Udoorigin",
          "description": "Udoorigin parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Page"
        },
        {
          "name": "uorigin",
          "label": "Uorigin",
          "description": "Uorigin parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Page"
        },
        {
          "name": "udolength",
          "label": "Udolength",
          "description": "Udolength parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Page"
        },
        {
          "name": "ulength",
          "label": "Ulength",
          "description": "Ulength parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Page"
        },
        {
          "name": "udoscale",
          "label": "Udoscale",
          "description": "Udoscale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Page"
        },
        {
          "name": "uscale",
          "label": "Uscale",
          "description": "Uscale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Page"
        },
        {
          "name": "uraise",
          "label": "Uraise",
          "description": "Uraise parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Page"
        },
        {
          "name": "orderu",
          "label": "Orderu",
          "description": "Orderu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Page"
        },
        {
          "name": "vbasis",
          "label": "Vbasis",
          "description": "Vbasis parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Page"
        },
        {
          "name": "vparmtype",
          "label": "Vparmtype",
          "description": "Vparmtype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Page"
        },
        {
          "name": "vknots",
          "label": "Vknots",
          "description": "Vknots parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Page"
        },
        {
          "name": "vread",
          "label": "Vread",
          "description": "Vread parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Page"
        },
        {
          "name": "vrange",
          "label": "Vrange",
          "description": "Vrange parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Page"
        },
        {
          "name": "vbias",
          "label": "Vbias",
          "description": "Vbias parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Page"
        },
        {
          "name": "vconcat",
          "label": "Vconcat",
          "description": "Vconcat parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Page"
        },
        {
          "name": "vdoorigin",
          "label": "Vdoorigin",
          "description": "Vdoorigin parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Page"
        },
        {
          "name": "vorigin",
          "label": "Vorigin",
          "description": "Vorigin parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Page"
        },
        {
          "name": "vdolength",
          "label": "Vdolength",
          "description": "Vdolength parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Page"
        },
        {
          "name": "vlength",
          "label": "Vlength",
          "description": "Vlength parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Page"
        },
        {
          "name": "vdoscale",
          "label": "Vdoscale",
          "description": "Vdoscale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Page"
        },
        {
          "name": "vscale",
          "label": "Vscale",
          "description": "Vscale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Page"
        },
        {
          "name": "vraise",
          "label": "Vraise",
          "description": "Vraise parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Page"
        },
        {
          "name": "orderv",
          "label": "Orderv",
          "description": "Orderv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note: Bezier bases cannot have repeated knots. NURBS bases accept repeated knots as long as the knot multiplicity does not exceed the degree of the basis. The first two and last two knots of a NURBS basis must be identical.",
        "Production Tip: Before applying a spline-based texture projection with the Texture SOP, remap the U and/or V bases of the spline surface between 0 and 1 to ensure a complete mapping of the texture. If a single texture map must be shared by several surfaces, the surface bases should be concatenated prior to being remapped.",
        "Note: Bezier bases cannot have repeated knots. NURBS bases accept repeated knots as long as the knot multiplicity does not exceed the degree of the basis. The first two and last two knots of a NURBS basis must be identical.",
        "Production Tip: Before applying a spline-based texture projection with the Texture SOP, remap the U and/or V bases of the spline surface between 0 and 1 to ensure a complete mapping of the texture. If a single texture map must be shared by several surfaces, the surface bases should be concatenated prior to being remapped."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "centripetal",
          "language": "python"
        },
        {
          "code": "centripetal",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Basis_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.082Z",
      "parameterCount": 31
    },
    {
      "name": "Blend",
      "fullName": "Blend SOP",
      "category": "SOP",
      "description": "The Blend SOP provides 3D metamorphosis between shapes with the same topology. It can blend between sixteen input SOPs using the average weight of each input's respective channel. It will also interpolate point colors and/or texture co-ordinates between shapes.\n\nFor best results, there should be the same number of points / CVs (and faces) in the geometry of each SOP. The points should have a similar order; if point 17 in one source is on the left side, and point 17 in another Source is on the right side, it will move across the object during the blend, which may create distorted and twisted shapes. To ensure that this doesn't happen, you can make all the pieces to be blended by editing point positions of one common base shape. Each of the pieces to be morphed must be in different SOPs.\n\nFor example, when editing the shapes in the Model Editor, each particular geometry can be saved and then read in, or input the Model SOP directly into the Blend SOP. You would then have the base model geometry entering the Blend SOP in the first Blend, then up to 15 Model SOPs feeding from the SOP containing the base model geometry, which in turn would feed into the Blend SOP. Remember that Model SOPs cannot be unlocked and, therefore, are a safe way to store data without using a File In SOP.\n\nThe Blend SOP now only cooks non-zero-weighted inputs.\n\nblendSOP_Class\n\nChannels controlling the contribution of the geometry inputs to the output geometry. Add parameters below as needed for the number of inputs connected.\n\nThis SOP can be used as a form of geometry deformation. Model your geometry, such as the mouth on the head of a character. This will become your first input.\n\nSet the input to the first SOP to be blended. For example, if there are five shapes to be blended, the simplest set-up is the following:\n\nUse four Model SOPs, and import the geometry from the base geometry to be deformed / morphed. In each of the Model SOPs, edit the geometry to suit.\n\nAppend a Blend SOP off of the SOP containing the base geometry and then proceed to connect up the four Model SOPs into the Blend SOP.\n\nThe amount that each input contributes to the resulting shape is controlled by each input's blend channel. Editing the values of the blend channels will result in each input to determine the final shape based on ratios.\n\nFor example, if the /blend3 channel's value is 1, and the rest of the channels are set to 0, the resulting shape is the geometry in the third input SOP. Now change the value in the /blend5 channel to 1, the resulting shape will be a 50/50 percent blend of the geometry contained in the input SOPs' three and five. You would get the exact same result by setting both channels to 0.3, or to any number if the numbers are the same in both channels, there will be equal contribution to the shape.\n\nExtra Information for the Blend SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditorwikieditor2022.241402021.100002020.200002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Blend Page"
        },
        {
          "name": "diff",
          "label": "Diff",
          "description": "Diff parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Blend Page"
        },
        {
          "name": "dopos",
          "label": "Dopos",
          "description": "Dopos parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Blend Page"
        },
        {
          "name": "doclr",
          "label": "Doclr",
          "description": "Doclr parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Blend Page"
        },
        {
          "name": "donml",
          "label": "Donml",
          "description": "Donml parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Blend Page"
        },
        {
          "name": "douvw",
          "label": "Douvw",
          "description": "Douvw parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Blend Page"
        },
        {
          "name": "doup",
          "label": "Doup",
          "description": "Doup parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Blend Page"
        },
        {
          "name": "input",
          "label": "Input",
          "description": "Input parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Weights Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [
        {
          "title": "Example",
          "content": "Set the input to the first SOP to be blended. For example, if there are five shapes to be blended, the simplest set-up is the following:\nUse four Model SOPs, and import the geometry from the base geometry to be deformed / morphed. In each of the Model SOPs, edit the geometry to suit.\nAppend a Blend SOP off of the SOP containing the base geometry and then proceed to connect up the four Model SOPs into the Blend SOP.\nThe amount that each input contributes to the resulting shape is controlled by each input's blend channel. Editing the values of the blend channels will result in each input to determine the final shape based on ratios.\nFor example, if the /blend3 channel's value is 1, and the rest of the channels are set to 0, the resulting shape is the geometry in the third input SOP. Now change the value in the /blend5 channel to 1, the resulting shape will be a 50/50 percent blend of the geometry contained in the input SOPs' three and five. You would get the exact same result by setting both channels to 0.3, or to any number if the numbers are the same in both channels, there will be equal contribution to the shape."
        }
      ],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "input0weight",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Blend_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.068Z",
      "parameterCount": 8
    },
    {
      "name": "Bone Group",
      "fullName": "Bone Group SOP",
      "category": "SOP",
      "description": "The Bone Group SOP groups primitives by common bones (shared bones). This node often isn't needed in modern workflows with well made models.\n\nThis node will split the vertices into subsections, each of which are affected by a different subset of the bones of the skeleton. These are called Bone Groups. This SOP will split up geometry with capture attributes into different bone groups. The detail attributes pCaptData and pCaptPath will be split up into detail attributes with postfixes starting at 0. So for example if the geometry gets split into two bone groups, there will be detail attributes pCaptData0, pCaptPath0, pCaptData1, and pCaptPath1. The original pCaptData and pCaptPath will be deleted. The point/vertex attribute pCapt will become a vertex attribute named pCapt0, pCapt1 etc.. There will also be primitives groups named boneGroup0, boneGroup1 that contain all of the primitives in each bone group. All capture weights are re-normalized.\n\nYou should isolate out each of the primitive bone groups using the Delete SOP. Next drop down a MAT (like the Phong MAT) that supports deforms. You will need to give the MAT a few pieces of information:\n\nbonegroupSOP_Class\n\nExtra Information for the Bone Group SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditor2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "bonesperpoint",
          "label": "Bonesperpoint",
          "description": "Bonesperpoint parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "bonespergroup",
          "label": "Bonespergroup",
          "description": "Bonespergroup parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "bonesperpoint",
          "language": "python"
        },
        {
          "code": "bonespergroup",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Bone_Group_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.090Z",
      "parameterCount": 2
    },
    {
      "name": "Boolean",
      "fullName": "Boolean SOP",
      "category": "SOP",
      "description": "The Boolean SOP takes two closed polygonal sets, A and B. Set these Sources to the SOPs with the 3D shapes that you wish to operate on. There are two important requirements for input geometry:\n\nOther caveats for Boolean are the following:\n\nThis SOP is quite visual and intuitive; you can experiment with the different combinations on screen to see the effects.\n\nNote: The Boolean SOP handles polygonal geometry types. For boolean-type operations with nurbs and Bezier surfaces - see Surfsect SOP.\n\nbooleanSOP_Class\n\nExtra Information for the Boolean SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "booleanop",
          "label": "Booleanop",
          "description": "Booleanop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "accattrib",
          "label": "Accattrib",
          "description": "Accattrib parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "creategroup",
          "label": "Creategroup",
          "description": "Creategroup parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "groupa",
          "label": "Groupa",
          "description": "Groupa parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "groupb",
          "label": "Groupb",
          "description": "Groupb parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note: The Boolean SOP handles polygonal geometry types. For boolean-type operations with nurbs and Bezier surfaces - see Surfsect SOP."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "creategroup",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Boolean_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.100Z",
      "parameterCount": 5
    },
    {
      "name": "Box",
      "fullName": "Box SOP",
      "category": "SOP",
      "description": "The Box SOP creates cuboids. These can be used as geometries by themselves, or they can be sub-divided for use with the Lattice SOP.\n\nIf it has an input then it will create a box that bounds the incoming geometry. Otherwise, the parameters determine the size and location of the box.\n\nboxSOP_Class\n\nTo create boxes.\n\nYou can use the points as an input geometry for the Lattice and Spring SOPs.\n\nExtra Information for the Box SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditor2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "orientbounds",
          "label": "Orientbounds",
          "description": "Orientbounds parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "modifybounds",
          "label": "Modifybounds",
          "description": "Modifybounds parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "rord",
          "label": "Rord",
          "description": "Rord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "size",
          "label": "Size",
          "description": "Size parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            }
          ],
          "section": "Page"
        },
        {
          "name": "r",
          "label": "R",
          "description": "R parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            }
          ],
          "section": "Page"
        },
        {
          "name": "s",
          "label": "S",
          "description": "S parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            }
          ],
          "section": "Page"
        },
        {
          "name": "reverseanchors",
          "label": "Reverseanchors",
          "description": "Reverseanchors parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "anchoru",
          "label": "Anchoru",
          "description": "Anchoru parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "anchorv",
          "label": "Anchorv",
          "description": "Anchorv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "anchorw",
          "label": "Anchorw",
          "description": "Anchorw parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "dodivs",
          "label": "Dodivs",
          "description": "Dodivs parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "divs",
          "label": "Divs",
          "description": "Divs parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "rebar",
          "label": "Rebar",
          "description": "Rebar parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "consolidatepts",
          "label": "Consolidatepts",
          "description": "Consolidatepts parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "texture",
          "label": "Texture",
          "description": "Texture parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "normals",
          "label": "Normals",
          "description": "Normals parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "orientbounds",
          "language": "python"
        },
        {
          "code": "modifybounds",
          "language": "python"
        },
        {
          "code": "reverseanchors",
          "language": "python"
        },
        {
          "code": "consolidatepts",
          "language": "python"
        },
        {
          "code": "cubemapinside",
          "language": "python"
        },
        {
          "code": "faceoutside",
          "language": "python"
        },
        {
          "code": "cubemapoutside",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Primitives",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Box_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.184Z",
      "parameterCount": 17
    },
    {
      "name": "Bridge",
      "fullName": "Bridge SOP",
      "category": "SOP",
      "description": "The Bridge SOP is useful for skinning trimmed surfaces, holes, creating highly controllable joins between arms and body, branches or tube intersections.\n\nThe Bridge SOP is similar to the Skin SOP but with much greater control over the resulting surface. Given a set of profiles (i.e. curves on surface) and/or spatial faces, the Bridge SOP builds a NURBS skin with specified tangent and curvature characteristics. The precision of the resulting surface is highly dependent on the number of required cross-sections and on the quality of the profile extraction. High precisions will generate a very dense surface with, potentially, many multiple knots.\n\nIn general, the higher the order of the curve, the better the fit the Bridge SOP will be able to provide. However, it is generally better to stick to cubics (order 4) curves, as the software is optimized for cubics.\n\nBecause the Bridge SOP can join both a set of spatial curves and trim curves, it can be used much like the Skin SOP and/or the Fillet SOP. However, bridging trimmed surfaces is more expensive than bridging carved surfaces.\n\nYou will usually need a Trim, Bridge, or Profile SOP after a Project SOP.\n\nNote: To texture-map the resulting skin, use an Orthographic projection rather than a Spline-based projection. This results in better continuity across the surfaces.\n\nbridgeSOP_Class\n\nThis page's parameters are similar to those found in the Fit and Project SOPs.\n\nExtra Information for the Bridge SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "bridge",
          "label": "Bridge",
          "description": "Bridge parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "inc",
          "label": "Inc",
          "description": "Inc parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "order",
          "label": "Order",
          "description": "Order parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "isodivs",
          "label": "Isodivs",
          "description": "Isodivs parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Surface Properties Page"
        },
        {
          "name": "frenet",
          "label": "Frenet",
          "description": "The Frenet Frame of the face. This option uses a local coordinate system on the curve to compute the direction.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "The Frenet Frame of the Face",
              "value": "frenet",
              "description": "The Frenet Frame of the face. This option uses a local coordinate system on the curve to compute the direction."
            }
          ],
          "section": "Surface Properties Page"
        },
        {
          "name": "circular",
          "label": "Circular",
          "description": "Circular parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Surface Properties Page"
        },
        {
          "name": "rotatet",
          "label": "Rotatet",
          "description": "Rotatet parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Surface Properties Page"
        },
        {
          "name": "scalet",
          "label": "Scalet",
          "description": "Scalet parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Surface Properties Page"
        },
        {
          "name": "curvature",
          "label": "Curvature",
          "description": "Curvature parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Surface Properties Page"
        },
        {
          "name": "scalec",
          "label": "Scalec",
          "description": "Scalec parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Surface Properties Page"
        },
        {
          "name": "sdivs",
          "label": "Sdivs",
          "description": "Sdivs parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Profile Extraction Page"
        },
        {
          "name": "tolerance",
          "label": "Tolerance",
          "description": "Tolerance parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Profile Extraction Page"
        },
        {
          "name": "csharp",
          "label": "Csharp",
          "description": "Csharp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Profile Extraction Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [
        {
          "title": "Example",
          "content": "Place a Circle SOP. Primitive Type: NURBS; Radius = 0.2, 0.2\nPlace a Grid SOP. Primitive Type: NURBS.\nFeed both the Circle and Grid SOPs into a Project SOP. Make it the display SOP. You notice the projected circle on the grid - our trim curve.\nAppend a Trim SOP and make it the display SOP. Turn on Gouraud shading for the Viewport - you now see the trimmed holes in the surface of the grid.\nAppend a Copy SOP. Number of Copies: 2; Translation Z: 1.0; Rotation X: 30. Make it the display SOP. Now we have two grids with trimmed holes in them.\nAppend a Bridge SOP, and make it the display SOP. Scale Tangents: 0, 0, 0; Use Curvature: On; Preserve Curvature Magnitudes: Off; Scale Curvatures: 3, 3, 3 . Nothing happens. Why?\nWe need to specify which profile curves to skin. Turn on Profile Numbers in the Viewport options (click M at the bottom-right of Viewport, and enable the icon). We can see the profile numbers of the two trim curves are 0.0 and 1.0 - meaning the 0th profile of the 0th primitive and the 0th profile of the 1st primitive). The strange numbering is because primitive numbers start at 0 instead of 1.\nIn the Bridge SOP's Group field enter: .0 - this means to include the 0th (first) curve from all (the * wildcard character) primitives in the skin. You now see the resulting bridge between the two trim curves. The skin bulges outwards.\nWe can control the bulge by playing with the Scale Curvatures and the Tangent Magnitudes. Set the Scale Curvatures to: -3, -3, -3 . Now we have an inward-bulging tube connecting the two holes.\nExperiment with moving the location and size of the holes (change the Translation and Radius in the Circle SOP). The Bridge SOP dynamically updates the geometry connecting the two surfaces. Setting the Scale Curvature to: 0, 0, 0 produces a straight-through connection between the two holes."
        }
      ],
      "tips": [
        "Note: To texture-map the resulting skin, use an Orthographic projection rather than a Spline-based projection. This results in better continuity across the surfaces.",
        "Note: Always specify the curves on surface if you want the Bridge SOP bridge curves on surfaces; otherwise it will attempt to bridge free-floating curves.",
        "Production Tip: If, in generating a smooth surface, you create an extremely complex surface, some of the complexity can be removed without damaging the appearance of the surface by appending a Refine SOP, and using its Unrefine option. In the Refine SOP, set the First U parameter to zero and, in the Unrefine option's parameters, set the U value close to the order of the surface created in the Bridge SOP.",
        "Note: If the resulting skin bulges too greatly, you can achieve a smooth resulting transition between surfaces by disabling the Preserve Tangent & Preserve Curvature Magnitude parameters, and manually tweaking the Tangent Scales and the Curvature Scales. In general, avoid tweaking the Rotations of the Tangents unless you wish to deform the resulting surface."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "viewdisplay -l 1.5 SOPmain.persp1",
          "language": "python"
        },
        {
          "code": "Preserve Sharp Corners",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Bridge_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.219Z",
      "parameterCount": 14
    },
    {
      "name": "Cache",
      "fullName": "Cache SOP",
      "category": "SOP",
      "description": "The Cache SOP collects its input geometry in a cache for faster random-access playback of multiple SOPs. It should be used when cook times for a chain of SOPs is long and a quicker playback is needed.\n\nOnce cached, the geometries can be accessed in any order. This is advantageous to a 2D flipbook or scene render since the geometry is still fully 3-Dimensional. The upshot being that you can scrub otherwise sluggish animations in real time because things are precomputed and stored in a cache.\n\ncacheSOP_Class\n\nExtra Information for the Cache SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "active",
          "label": "Active",
          "description": "Active parameter",
          "type": "Toggle",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "prefill",
          "label": "Prefill",
          "description": "Prefill parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "cachesize",
          "label": "Cachesize",
          "description": "Cachesize parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "step",
          "label": "Step",
          "description": "Step parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "outputindex",
          "label": "Outputindex",
          "description": "Outputindex parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "cachepoints",
          "label": "Cachepoints",
          "description": "Cachepoints parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "blendpos",
          "label": "Blendpos",
          "description": "Blendpos parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "reset",
          "label": "Reset",
          "description": "Reset parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "resetpulse",
          "label": "Resetpulse",
          "description": "Resetpulse parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "outputindex",
          "language": "python"
        },
        {
          "code": "cachepoints",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "3D scene visualization",
        "Real-time graphics rendering",
        "Multi-pass rendering workflows",
        "Shadow and reflection generation"
      ],
      "url": "https://docs.derivative.ca/Cache_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.192Z",
      "parameterCount": 9
    },
    {
      "name": "Cap",
      "fullName": "Cap SOP",
      "category": "SOP",
      "description": "The Cap SOP is used to close open areas with flat or rounded coverings. Meshes are capped by extending the mesh in either the U or V direction (e.g. a NURBS tube). Faces are capped by appending a separate face or hull cap.\n\ncapSOP_Class\n\nExtra Information for the Cap SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "pshapeu",
          "label": "Pshapeu",
          "description": "Pshapeu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Caps Page"
        },
        {
          "name": "firstu",
          "label": "Firstu",
          "description": "Firstu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Caps Page"
        },
        {
          "name": "divsu1",
          "label": "Divsu1",
          "description": "Divsu1 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Caps Page"
        },
        {
          "name": "scaleu1",
          "label": "Scaleu1",
          "description": "Scaleu1 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Caps Page"
        },
        {
          "name": "lastu",
          "label": "Lastu",
          "description": "Lastu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Caps Page"
        },
        {
          "name": "divsu2",
          "label": "Divsu2",
          "description": "Divsu2 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Caps Page"
        },
        {
          "name": "scaleu2",
          "label": "Scaleu2",
          "description": "Scaleu2 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Caps Page"
        },
        {
          "name": "pshapev",
          "label": "Pshapev",
          "description": "Pshapev parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Caps Page"
        },
        {
          "name": "firstv",
          "label": "Firstv",
          "description": "Firstv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Caps Page"
        },
        {
          "name": "divsv1",
          "label": "Divsv1",
          "description": "Divsv1 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Caps Page"
        },
        {
          "name": "scalev1",
          "label": "Scalev1",
          "description": "Scalev1 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Caps Page"
        },
        {
          "name": "lastv",
          "label": "Lastv",
          "description": "Lastv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Caps Page"
        },
        {
          "name": "divsv2",
          "label": "Divsv2",
          "description": "Divsv2 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Caps Page"
        },
        {
          "name": "scalev2",
          "label": "Scalev2",
          "description": "Scalev2 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Caps Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Cap_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.236Z",
      "parameterCount": 15
    },
    {
      "name": "Capture Region",
      "fullName": "Capture Region SOP",
      "category": "SOP",
      "description": "The Capture Region SOP defines capture region (cregion), which is a type of primitive which can be thought of as a modified tube primitive (a tube with half a sphere on either end). The hemispheres on the ends of the tubes are called \"caps\". Like any other primitive, each Capture Region has a primitive number and can be assigned primitive attributes. A Capture Region is simply a volume which is used to define the point capture weighting for a geometry. It is then animated to deform the geometry.\n\nCapture Regions are always shown in wireframe (even in shaded mode) so that you can focus on the geometry for which the region will act on.\n\ncaptureregionSOP_Class\n\nThere are parameters to control the size, shape and position of the capture region. There are separate controls for the top and bottom half of the region. This allows you to edit one side of the bone at a time as you work through your character.\n\nThe Max/Min Weight parameter is used in the weighting of points. The closer a point is to the edge of the region, the smaller it's weight will be. By default the weight is 1 along the center axis of a region (more on this later), and 0 at the edge of the region. You can modify these weight extremities by through this parameter.\n\nWeighting is based on distance to the center line of the region. The center line's length is the height of the tube and runs down its center. When viewed in cross-section, the distance is measured perpendicular to the center line for the tube section and radially for the hemisphere region. This scheme is shown below. The lines represent the distance of points along the edge of the region.\n\nThis weighting scheme gives continuous deformations to NURBS surfaces when the end cap section of one region is sized so that it touches the middle section of the next region, as shown below.\n\nCapture regions shown with their containing bone objects.\n\nExtra Information for the Capture Region SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "orient",
          "label": "Orient",
          "description": "Orient parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Region Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Region Page"
            }
          ],
          "section": "Region Page"
        },
        {
          "name": "theight",
          "label": "Theight",
          "description": "Theight parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Region Page"
        },
        {
          "name": "tcap",
          "label": "Tcap",
          "description": "Tcap parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Region Page"
        },
        {
          "name": "bheight",
          "label": "Bheight",
          "description": "Bheight parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Region Page"
        },
        {
          "name": "bcap",
          "label": "Bcap",
          "description": "Bcap parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Region Page"
        },
        {
          "name": "weight",
          "label": "Weight",
          "description": "Weight parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Region Page"
        },
        {
          "name": "color",
          "label": "Color",
          "description": "Color parameter",
          "type": "RGB",
          "default": "",
          "range": null,
          "options": null,
          "section": "Display Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Capture_Region_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.252Z",
      "parameterCount": 8
    },
    {
      "name": "Capture",
      "fullName": "Capture SOP",
      "category": "SOP",
      "description": "The Capture SOP is used to weight points in a geometry to capture regions. The weighting scheme is described in the next section, Capture Region SOP.\n\nThe weights and the regions they correspond to are transferred down the SOP chain as point and detail attributes.\n\nThe Capture SOP can take an optional second input to specify extra capture regions to use in the capture process. Any capture regions that are in this second input are processed after the capture regions that are in the object hierarchy specified by the Hierarchy parameter. You can also specify a second input and not specify a Parent Object at all.\n\ncaptureSOP_Class\n\nExtra Information for the Capture SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Capture Page"
        },
        {
          "name": "rootbone",
          "label": "Rootbone",
          "description": "Rootbone parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Capture Page"
        },
        {
          "name": "weightfrom",
          "label": "Weightfrom",
          "description": "Weightfrom parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Capture Page"
        },
        {
          "name": "captframe",
          "label": "Captframe",
          "description": "Captframe parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Capture Page"
        },
        {
          "name": "color",
          "label": "Color",
          "description": "Color parameter",
          "type": "RGB",
          "default": "",
          "range": null,
          "options": null,
          "section": "Capture Page"
        },
        {
          "name": "captfile",
          "label": "Captfile",
          "description": "Captfile parameter",
          "type": "File",
          "default": "",
          "range": null,
          "options": null,
          "section": "Capture Page"
        },
        {
          "name": "savefile",
          "label": "Savefile",
          "description": "Savefile parameter",
          "type": "File",
          "default": "",
          "range": null,
          "options": null,
          "section": "Override Page"
        },
        {
          "name": "autoincr",
          "label": "Autoincr",
          "description": "Autoincr parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Override Page"
        },
        {
          "name": "savecaptfile",
          "label": "Savecaptfile",
          "description": "Savecaptfile parameter",
          "type": "File",
          "default": "",
          "range": null,
          "options": null,
          "section": "Override Page"
        },
        {
          "name": "savesel",
          "label": "Savesel",
          "description": "Savesel parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Override Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note: When a .toe file is loaded, all of the associated capture regions are evaluated at the Capture Frame. Keyframes must be set to position the capture regions properly at the Capture Frame, otherwise the geometry will be weighted incorrectly upon the subsequent file loads.",
        "Note: you must be editing this particular SOP in the Viewport for this selection to apply to this SOP."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "0 /obj/chain_bone1/cregion 0 0.0 \t\t\t\n0 /obj/chain_bone2/cregion 0 3.757989 \t\t\t\n0 /obj/chain_bone3/cregion 0 1.757989",
          "language": "python"
        },
        {
          "code": "/obj/chain_bone4/cregion 0",
          "language": "python"
        },
        {
          "code": "0 /obj/chain_bone1/cregion 0 1.0\t\t\t\n0 /obj/chain_bone1/cregion 0 2.0",
          "language": "python"
        },
        {
          "code": "savecaptfile",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Capture_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.288Z",
      "parameterCount": 10
    },
    {
      "name": "Carve",
      "fullName": "Carve SOP",
      "category": "SOP",
      "description": "The Carve SOP works with any face or surface type, be that polygon, Bzier, or NURBS. It can be used to slice a primitive, cut it into multiple sections, or extract points or cross-sections from it.\n\nLike the Project SOP, it also creates profile curves, but they are extracted as iso-parametric (2D) profiles directly from a surface, whereas the Project SOP extracts a 3D curve projected onto a surface.\n\nNote: When using a Carve SOP on a trimmed surface, you can't fillet or join the trim curves.\n\ncarveSOP_Class\n\nGiven a closed surface, it can be converted to an identical open surface at any location by using the Carve SOP, and cutting at a single location (e.g. First U enabled, Second U disabled). The same is true for faces.\n\nSelect the Cut operation, First U = 0, Second U = 1, First V = 0, Second V = 1, with (at least) three Divisions for U and V. This will dice the surface into (at least) 3 components. This can later be used with the Primitive SOP to \"explode\" the surface.\n\nSelect the Cut operation, First U = 0.33, Second U = 0.66, First V = 0.33, Second V = 0.66, 2 Divisions for U and V. Keep Inside is off, Keep Outside is on. This will cut a rectangular region from the centre of the surface.\n\nSelect the Extract option, First U = x, Last U disabled, First V = y, Last V disabled, Extract Point is on, Keep Primitives is optional. This will create a point over any position on the surface (0<=x<=1, 0<=y<=1).\n\nExtra Information for the Carve SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Carve Page"
        },
        {
          "name": "firstu",
          "label": "Firstu",
          "description": "Firstu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Carve Page"
        },
        {
          "name": "domainu1",
          "label": "Domainu1",
          "description": "Domainu1 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Carve Page"
        },
        {
          "name": "secondu",
          "label": "Secondu",
          "description": "Secondu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Carve Page"
        },
        {
          "name": "domainu2",
          "label": "Domainu2",
          "description": "Domainu2 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Carve Page"
        },
        {
          "name": "firstv",
          "label": "Firstv",
          "description": "Firstv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Carve Page"
        },
        {
          "name": "domainv1",
          "label": "Domainv1",
          "description": "Domainv1 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Carve Page"
        },
        {
          "name": "secondv",
          "label": "Secondv",
          "description": "Secondv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Carve Page"
        },
        {
          "name": "domainv2",
          "label": "Domainv2",
          "description": "Domainv2 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Carve Page"
        },
        {
          "name": "method",
          "label": "Method",
          "description": "Method parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        },
        {
          "name": "keepin",
          "label": "Keepin",
          "description": "Keepin parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        },
        {
          "name": "keepout",
          "label": "Keepout",
          "description": "Keepout parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        },
        {
          "name": "extractop",
          "label": "Extractop",
          "description": "Extractop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        },
        {
          "name": "keeporiginal",
          "label": "Keeporiginal",
          "description": "Keeporiginal parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        },
        {
          "name": "location",
          "label": "Location",
          "description": "Location parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Extract 3D Isoparametric Curve(s)",
              "value": "xisoparm",
              "description": "The extraction operation creates a 3-D, free-floating curve that matches the surface perfectly at the given U or V location."
            },
            {
              "label": "Extract Point(s)",
              "value": "xpoint",
              "description": "Available for Mesh and surfaces only. If selected, it will create a point at every U, V location specified, rather than removing a U cross section and a V cross section."
            },
            {
              "label": "Extract 2D Isoparametric Profile(s)",
              "value": "xprofile",
              "description": "Creates a 2D curve at the specified U/V location that matches the surface perfectly."
            },
            {
              "label": "Divisions",
              "value": "div",
              "description": "The Cut/Extract occurs precisely at the locations defined on the Carve page. Additional divisions can be specified using the U/V Divisions parameters below and they are evenly distributed across the Cut/Extracted geoemtry."
            }
          ],
          "section": "Method Page"
        },
        {
          "name": "divsu",
          "label": "Divsu",
          "description": "Divsu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        },
        {
          "name": "divsv",
          "label": "Divsv",
          "description": "Divsv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        },
        {
          "name": "allubreakpoints",
          "label": "Allubreakpoints",
          "description": "Allubreakpoints parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        },
        {
          "name": "allvbreakpoints",
          "label": "Allvbreakpoints",
          "description": "Allvbreakpoints parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note: When using a Carve SOP on a trimmed surface, you can't fillet or join the trim curves.",
        "Note: if a face is used, only points can be extracted and the V parameters have no effect."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "keeporiginal",
          "language": "python"
        },
        {
          "code": "allubreakpoints",
          "language": "python"
        },
        {
          "code": "allvbreakpoints",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Carve_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.300Z",
      "parameterCount": 19
    },
    {
      "name": "CHOP to",
      "fullName": "CHOP to SOP",
      "category": "SOP",
      "description": "The CHOP to SOP takes CHOP channels and generates 3D polygons in a SOP. It reads sample data from a CHOP and converts it into point positions and point attributes. This makes it complementary to the SOP to CHOP. The Channels created by the SOP to CHOP can be modified and then re-inserted into the SOP network via a CHOP to SOP.\n\nBy default, the SOP is a line from (-1 0 0) to (1 0 0) containing one point for every sample in the CHOP.\n\nIt matches the input channels to the Channel Scope (tx ty tz) where possible. If tx or ty or tz don’t match anything, it just uses the value from the default line, and it only shows a Warning.\n\nThe simplest thing to do is to send it a channel named ty, which will make a 3D curve that looks like the CHOP curve.\n\nThis does what a Point SOP with a op('wave1')['chan1'].eval(0) function can do, but is much faster.\n\nBy using point groups from the incoming SOP, the channels can be inserted only into the group's points.\n\nThe CHOP to SOP also supports custom attributes. If the user maps a channel to an attribute that is not found, that attribute is added to the points.  Currently, all custom attributes are floats and of size = 1.\n\nIn its default state it will attempt to replace the point positions (P(0) P(1) P(2)) with the channels named tx ty and tz.\n\nThe channel and attribute scope are first expanded into individual names and matched on a 1 to 1 basis. If you are filling P it doesn't matter if you specify t[xyz] or tx ty tz, both will replace P(0) P(1) P(2), which can be collapsed to P.\n\nFor example: Add custom attributes \"Scale\", \"Twist\" or \"Roll\" to the backbone's points with a CHOP to SOP.\n\nIf you connect a SOP to its input, it will use the SOP as a starting geometry versus the default line.\n\nchoptoSOP_Class\n\nExtra Information for the CHOP to SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditor2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "chop",
          "label": "Chop",
          "description": "Chop parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Resample CHOP to Fit SOP",
              "value": "scale",
              "description": "If there are more or less CHOP samples than points in the geometry, then the CHOP channels are resampled to interpolate values for all the geometry points."
            }
          ],
          "section": "Page"
        },
        {
          "name": "startpos",
          "label": "Startpos",
          "description": "Startpos parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "endpos",
          "label": "Endpos",
          "description": "Endpos parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "chanscope",
          "label": "Chanscope",
          "description": "Chanscope parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "attscope",
          "label": "Attscope",
          "description": "Attscope parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "organize",
          "label": "Organize",
          "description": "Organize parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "mapping",
          "label": "Mapping",
          "description": "Mapping parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "compnml",
          "label": "Compnml",
          "description": "Compnml parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "comptang",
          "label": "Comptang",
          "description": "Comptang parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "op('wave1')['chan1'].eval(0)",
          "language": "python"
        },
        {
          "code": "P(0) P(1) P(2)",
          "language": "python"
        },
        {
          "code": "P(0) P(1) P(2)",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/CHOP_to_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.328Z",
      "parameterCount": 10
    },
    {
      "name": "Circle",
      "fullName": "Circle SOP",
      "category": "SOP",
      "description": "The Circle SOP creates open or closed arcs, circles and ellipses.\n\nIf two NURBS circles that are non-rational (i.e. their X and Y radii are unequal) are skinned, more isoparms may be generated than expected. This is because non-rational NURBS circles parameterise their knots based on chord length, and the Skin SOP must consolidate the total number of knots between the two circles before skinning.\n\nTo remedy this, you may want to use a Refine SOP, and unrefine the resulting skin, or better yet - before unrefining, start with the same circle and use a Primitive or Transform SOP to deform the second copy before skinning.\n\ncircleSOP_Class\n\nExtra Information for the Circle SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditor2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "type",
          "label": "Type",
          "description": "Type parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "orient",
          "label": "Orient",
          "description": "Orient parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "modifybounds",
          "label": "Modifybounds",
          "description": "Modifybounds parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "rad",
          "label": "Rad",
          "description": "Rad parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            },
            {
              "label": "Open Arc",
              "value": "openarc",
              "description": "An open curve segment."
            },
            {
              "label": "Closed Arc",
              "value": "closedarc",
              "description": "An Open Arc with connecting edges to the centre resembling a slice of pie."
            },
            {
              "label": "Sliced Arc",
              "value": "slicedarc",
              "description": "Same as Closed Arc, but connects every single point to the center of the circle.Same as Closed Arc, but connects every single point to the center of the circle."
            },
            {
              "label": "Off",
              "value": "off",
              "description": "No texture coordinates are created."
            },
            {
              "label": "Face",
              "value": "face",
              "description": "Default texture coordinates are created. To modify texture coordinates, see Texture SOP."
            }
          ],
          "section": "Page"
        },
        {
          "name": "reverseanchors",
          "label": "Reverseanchors",
          "description": "Reverseanchors parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "anchoru",
          "label": "Anchoru",
          "description": "Anchoru parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "anchorv",
          "label": "Anchorv",
          "description": "Anchorv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "order",
          "label": "Order",
          "description": "Order parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "divs",
          "label": "Divs",
          "description": "Divs parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "arc",
          "label": "Arc",
          "description": "Arc parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Open Arc",
              "value": "openarc",
              "description": "An open curve segment."
            },
            {
              "label": "Closed Arc",
              "value": "closedarc",
              "description": "An Open Arc with connecting edges to the centre resembling a slice of pie."
            },
            {
              "label": "Sliced Arc",
              "value": "slicedarc",
              "description": "Same as Closed Arc, but connects every single point to the center of the circle.Same as Closed Arc, but connects every single point to the center of the circle."
            }
          ],
          "section": "Page"
        },
        {
          "name": "angle",
          "label": "Angle",
          "description": "Angle parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "imperfect",
          "label": "Imperfect",
          "description": "Imperfect parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "texture",
          "label": "Texture",
          "description": "Texture parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Off",
              "value": "off",
              "description": "No texture coordinates are created."
            },
            {
              "label": "Face",
              "value": "face",
              "description": "Default texture coordinates are created. To modify texture coordinates, see Texture SOP."
            }
          ],
          "section": "Page"
        },
        {
          "name": "normals",
          "label": "Normals",
          "description": "Normals parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note: The total angle can exceed 360, making multiple wraps of the circle."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "modifybounds",
          "language": "python"
        },
        {
          "code": "reverseanchors",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Primitives",
      "useCases": [
        "Image positioning and scaling",
        "Rotation and skew operations",
        "Coordinate space conversions",
        "Animation and motion graphics"
      ],
      "url": "https://docs.derivative.ca/Circle_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.349Z",
      "parameterCount": 15
    },
    {
      "name": "Clay",
      "fullName": "Clay SOP",
      "category": "SOP",
      "description": "The Clay SOP deforms faces and surfaces by pulling points that lie directly on them. As opposed to the Point SOP or other SOPs that manipulate control points (CVs), the Clay SOP operates on the primitive contours themselves, providing a direct, intuitive, and unconstrained way of reshaping geometry. Thus, rather than translating CVs to change the aspect of the primitive, the Clay SOP takes the inverse approach of manipulating the primitive's skin to reposition the CVs.\n\nThe point that defines the area to be modified is called a \"target point\" or \"target\" for short. It is expressed as a (u,v) pair in the parametric space of the primitive and ranges between 0 and 1 in both U and V. The image of the target point on the primitive is a 3D point which Clay can displace in several ways. Furthermore, if the primitive is a surface, there is are options to pull only the point or a whole isoparametric curve in either U or V.\n\nClay does not refine the faces and surfaces unless asked to, so the complexity of the geometry does not increase. The area affected by the change varies with each primitive type and topology. In all cases it is possible to reduce to amount of change by inserting a Refine SOP before the Clay SOP and inserting detail around the target point. For other ways to increase the locality of the deformation as well as its sharpness, see U and V Sharpness below.\n\nIf a second input is present, it is possible to snap the target (u,v) point to an (s,t) point on the first primitive of the second input. Without a second input, the primitives can be made to snap to themselves. Moreover, the Clay SOP is able to snap the target to arbitrary points in space.\n\nBoth this SOP and the Align SOP can be used effectively as snapping tools and building blocks for curve networks. The main difference between the two SOPs is that Clay deforms the inputs partially, while Align translates and/or rotates the whole primitive.\n\nThe Clay SOP accepts a mix of any combination of face and surface types.\n\nclaySOP_Class\n\n}}\n\nExtra Information for the Clay SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Clay Page"
        },
        {
          "name": "method",
          "label": "Method",
          "description": "Method parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Matrix",
              "value": "mat",
              "description": "The matrix method relocates the target point based on a transformation matrix. For a description of transforms, see the Transform SOP."
            },
            {
              "label": "Vector",
              "value": "vec",
              "description": "The vector method provides a distance and a vector to translate along."
            },
            {
              "label": "Point",
              "value": "point",
              "description": "The point method provides a 3D point in object space that the target point must snap to."
            },
            {
              "label": "Primitive",
              "value": "prim",
              "description": "The primitive method allows the target point to be snapped to a point on another primitive. Any primitive type is allowed, including metaballs, all quadrics, and even particle systems. The point on the destination primitive is expressed parametrically as a (U, V) pair."
            }
          ],
          "section": "Clay Page"
        },
        {
          "name": "xord",
          "label": "Xord",
          "description": "Xord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Clay Page"
        },
        {
          "name": "rord",
          "label": "Rord",
          "description": "Rord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Clay Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Clay Page"
            },
            {
              "label": "Matrix",
              "value": "mat",
              "description": "The matrix method relocates the target point based on a transformation matrix. For a description of transforms, see the Transform SOP."
            },
            {
              "label": "Vector",
              "value": "vec",
              "description": "The vector method provides a distance and a vector to translate along."
            },
            {
              "label": "Point",
              "value": "point",
              "description": "The point method provides a 3D point in object space that the target point must snap to."
            },
            {
              "label": "Primitive",
              "value": "prim",
              "description": "The primitive method allows the target point to be snapped to a point on another primitive. Any primitive type is allowed, including metaballs, all quadrics, and even particle systems. The point on the destination primitive is expressed parametrically as a (U, V) pair."
            }
          ],
          "section": "Clay Page"
        },
        {
          "name": "r",
          "label": "R",
          "description": "R parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Clay Page"
            },
            {
              "label": "Matrix",
              "value": "mat",
              "description": "The matrix method relocates the target point based on a transformation matrix. For a description of transforms, see the Transform SOP."
            },
            {
              "label": "Vector",
              "value": "vec",
              "description": "The vector method provides a distance and a vector to translate along."
            },
            {
              "label": "Point",
              "value": "point",
              "description": "The point method provides a 3D point in object space that the target point must snap to."
            },
            {
              "label": "Primitive",
              "value": "prim",
              "description": "The primitive method allows the target point to be snapped to a point on another primitive. Any primitive type is allowed, including metaballs, all quadrics, and even particle systems. The point on the destination primitive is expressed parametrically as a (U, V) pair."
            }
          ],
          "section": "Clay Page"
        },
        {
          "name": "s",
          "label": "S",
          "description": "S parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Clay Page"
            },
            {
              "label": "Matrix",
              "value": "mat",
              "description": "The matrix method relocates the target point based on a transformation matrix. For a description of transforms, see the Transform SOP."
            },
            {
              "label": "Vector",
              "value": "vec",
              "description": "The vector method provides a distance and a vector to translate along."
            },
            {
              "label": "Point",
              "value": "point",
              "description": "The point method provides a 3D point in object space that the target point must snap to."
            },
            {
              "label": "Primitive",
              "value": "prim",
              "description": "The primitive method allows the target point to be snapped to a point on another primitive. Any primitive type is allowed, including metaballs, all quadrics, and even particle systems. The point on the destination primitive is expressed parametrically as a (U, V) pair."
            }
          ],
          "section": "Clay Page"
        },
        {
          "name": "p",
          "label": "P",
          "description": "P parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Clay Page"
            },
            {
              "label": "Matrix",
              "value": "mat",
              "description": "The matrix method relocates the target point based on a transformation matrix. For a description of transforms, see the Transform SOP."
            },
            {
              "label": "Vector",
              "value": "vec",
              "description": "The vector method provides a distance and a vector to translate along."
            },
            {
              "label": "Point",
              "value": "point",
              "description": "The point method provides a 3D point in object space that the target point must snap to."
            },
            {
              "label": "Primitive",
              "value": "prim",
              "description": "The primitive method allows the target point to be snapped to a point on another primitive. Any primitive type is allowed, including metaballs, all quadrics, and even particle systems. The point on the destination primitive is expressed parametrically as a (U, V) pair."
            }
          ],
          "section": "Clay Page"
        },
        {
          "name": "dist",
          "label": "Dist",
          "description": "Dist parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Vector",
              "value": "vec",
              "description": "The vector method provides a distance and a vector to translate along."
            }
          ],
          "section": "Clay Page"
        },
        {
          "name": "normal",
          "label": "Normal",
          "description": "Normal parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Clay Page"
        },
        {
          "name": "dir",
          "label": "Dir",
          "description": "Dir parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Clay Page"
        },
        {
          "name": "coord",
          "label": "Coord",
          "description": "Coord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Clay Page"
        },
        {
          "name": "uvsnap",
          "label": "Uvsnap",
          "description": "Uvsnap parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Clay Page"
        },
        {
          "name": "uwarp",
          "label": "Uwarp",
          "description": "Uwarp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Page"
        },
        {
          "name": "u",
          "label": "U",
          "description": "U parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Point",
              "value": "point",
              "description": "The point method provides a 3D point in object space that the target point must snap to."
            },
            {
              "label": "Primitive",
              "value": "prim",
              "description": "The primitive method allows the target point to be snapped to a point on another primitive. Any primitive type is allowed, including metaballs, all quadrics, and even particle systems. The point on the destination primitive is expressed parametrically as a (U, V) pair."
            }
          ],
          "section": "U Page"
        },
        {
          "name": "uusebias",
          "label": "Uusebias",
          "description": "Uusebias parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Page"
        },
        {
          "name": "ubias",
          "label": "Ubias",
          "description": "Ubias parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Page"
        },
        {
          "name": "usharp",
          "label": "Usharp",
          "description": "Usharp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "U Page"
        },
        {
          "name": "vwarp",
          "label": "Vwarp",
          "description": "Vwarp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Page"
        },
        {
          "name": "v",
          "label": "V",
          "description": "V parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Vector",
              "value": "vec",
              "description": "The vector method provides a distance and a vector to translate along."
            },
            {
              "label": "Point",
              "value": "point",
              "description": "The point method provides a 3D point in object space that the target point must snap to."
            },
            {
              "label": "Primitive",
              "value": "prim",
              "description": "The primitive method allows the target point to be snapped to a point on another primitive. Any primitive type is allowed, including metaballs, all quadrics, and even particle systems. The point on the destination primitive is expressed parametrically as a (U, V) pair."
            }
          ],
          "section": "V Page"
        },
        {
          "name": "vusebias",
          "label": "Vusebias",
          "description": "Vusebias parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Page"
        },
        {
          "name": "vbias",
          "label": "Vbias",
          "description": "Vbias parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Page"
        },
        {
          "name": "vsharp",
          "label": "Vsharp",
          "description": "Vsharp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "V Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note: The range of the U Sharpness slider varies with the degree of the spline (i.e. the closer it is to 1, the more knots it adds). Since the number of knots added forms a discrete sequence, the slider will automatically jump to the valid positions.",
        "Note: The range of the V Sharpness slider varies with the degree of the spline (i.e. the closer it is to 1, the more knots it adds). Since the number of knots added forms a discrete sequence, the slider will automatically jump to the valid positions."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "|opFamily=SOP",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Clay_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.375Z",
      "parameterCount": 23
    },
    {
      "name": "Clip",
      "fullName": "Clip SOP",
      "category": "SOP",
      "description": "The Clip SOP cuts and creases source geometry with a plane.\n\nclipSOP_Class\n\nExtra Information for the Clip SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "clipop",
          "label": "Clipop",
          "description": "Clipop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "dist",
          "label": "Dist",
          "description": "Dist parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "dir",
          "label": "Dir",
          "description": "Dir parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "newg",
          "label": "Newg",
          "description": "Newg parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "above",
          "label": "Above",
          "description": "Retain the primitives above the cutting plane.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Primitives Above the Plane",
              "value": "above",
              "description": "Retain the primitives above the cutting plane."
            }
          ],
          "section": "Page"
        },
        {
          "name": "below",
          "label": "Below",
          "description": "Retain the primitives below the cutting plane.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Primitives Below the Plane",
              "value": "below",
              "description": "Retain the primitives below the cutting plane."
            }
          ],
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Clip_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.387Z",
      "parameterCount": 7
    },
    {
      "name": "Convert",
      "fullName": "Convert SOP",
      "category": "SOP",
      "description": "The Convert SOP converts geometry from one geometry type to another type. Types include polygon, mesh, Bezier patche, particle and sphere primitive.\n\nconvertSOP_Class\n\nThis affects the use of the U/V/Trim Curve fields:\n\nIn a spline's case, the span is the curve arc between two breakpoints. The number of divisions per span specifies how many points to be created between the two breakpoints. If the number of divisions = 0, a single segment will connect the two breakpoints; if number of divisions = 1, two edges will be created; etc.\t\t\nThe advantage of Divisions over the Level of Detail is that it tells you exactly how many points you'll end up with - extremely useful for polygonal modeling.\n\nThis affects the use of the U/V/Trim Curve fields:\n\nIn a spline's case, the span is the curve arc between two breakpoints. The number of divisions per span specifies how many points to be created between the two breakpoints. If the number of divisions = 0, a single segment will connect the two breakpoints; if number of divisions = 1, two edges will be created; etc.\t\t\nThe advantage of Divisions over the Level of Detail is that it tells you exactly how many points you'll end up with - extremely useful for polygonal modeling.\n\nFace to Surface Conversion - When converting from a set of polygons to a mesh, a single mesh will result only if Facet SOP.\n\nOtherwise, each polygon is converted individually into a mesh. In fact, any individual face can be converted to any surface. This is accomplished by cutting the face into three or four adjacent sections, and then creating a patch from them.\n\nExtra Information for the Convert SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "fromtype",
          "label": "Fromtype",
          "description": "Fromtype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "totype",
          "label": "Totype",
          "description": "Totype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "surftype",
          "label": "Surftype",
          "description": "Surftype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "lodu",
          "label": "Lodu",
          "description": "Lodu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Level of Detail Page"
        },
        {
          "name": "lodv",
          "label": "Lodv",
          "description": "Lodv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Level of Detail Page"
        },
        {
          "name": "lodtrim",
          "label": "Lodtrim",
          "description": "Lodtrim parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Level of Detail Page"
        },
        {
          "name": "divu",
          "label": "Divu",
          "description": "Divu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Divisions per Span Page"
        },
        {
          "name": "divv",
          "label": "Divv",
          "description": "Divv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Divisions per Span Page"
        },
        {
          "name": "divtrim",
          "label": "Divtrim",
          "description": "Divtrim parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Divisions per Span Page"
        },
        {
          "name": "orderu",
          "label": "Orderu",
          "description": "Orderu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Divisions per Span Page"
        },
        {
          "name": "orderv",
          "label": "Orderv",
          "description": "Orderv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Divisions per Span Page"
        },
        {
          "name": "new",
          "label": "New",
          "description": "New parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Divisions per Span Page"
        },
        {
          "name": "interphull",
          "label": "Interphull",
          "description": "Interphull parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Divisions per Span Page"
        },
        {
          "name": "prtype",
          "label": "Prtype",
          "description": "Prtype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Divisions per Span Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Tip: Animate the Level of Detail based on how close your character or geometry is to the camera by using the primdist() expression. Then the detail will increase/decrease as the camera gets closer/further away.",
        "Tip: Animate the Level of Detail based on how close your character or geometry is to the camera by using the primdist() expression. Then the detail will increase/decrease as the camera gets closer/further away.",
        "Tip: Animate the Level of Detail based on how close your character or geometry is to the camera by using the primdist() expression. Then the detail will increase/decrease as the camera gets closer/further away.",
        "Tip: Animate the Level of Detail based on how close your character or geometry is to the camera by using the primdist() expression. Then the detail will increase/decrease as the camera gets closer/further away."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "trimbezsurf",
          "language": "python"
        },
        {
          "code": "trimnurbsurf",
          "language": "python"
        },
        {
          "code": "alttriangles",
          "language": "python"
        },
        {
          "code": "pointprites",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Convert_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.407Z",
      "parameterCount": 15
    },
    {
      "name": "Copy",
      "fullName": "Copy SOP",
      "category": "SOP",
      "description": "The Copy SOP lets you make copies of the geometry of other SOPs and apply a transformation to each copy.\n\nIt also allows you to copy geometry to points on an input template.\n\ncopySOP_Class\n\nSpecifies a subset of template primitives from which to copy onto. Accepts patterns, as described in Pattern Matching.\n\nStamping is allowed in any parameter in TouchDesigner. The only requirement is that the stamped parameter is upstream in some fashion from the Copy SOP doing the stamping.\n\nThis page allows you to determine how point attributes on template geometry affect attributes on the source geometry. The template attribute can modify the source in four ways:\n\nThe template point attributes are able to affect point, primitive, or vertex attributes in the source geometry simply by entering values in the appropriate fields.\n\nYou can use the me.copyTotal python member to calculate the degrees of rotation for a given number of copies. For example, if you have 28 copies, you can set the rotation to be: 360/me.copyTotal - this would automatically give you 12.8571 degrees, evenly spacing your 28 copies around the full circumference of the circle.\n\nUsing a Particle SOP as the Template object, you can copy objects defined in the Copy Data input to each particle template. This allows you, for example, to copy a Bee to each particle to create a swarm of bees.\n\nMake a series of copies about an axis, and skin them to achieve lathe-like effects, similar to the results achieved with the Revolve SOP.\n\nYou can set multiple stamp Params at once and they can be used anywhere in the ancestry of the copy's input.\n\nExtra Information for the Copy SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditorwikieditorwikieditor2022.241402021.100002020.200002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "sourcegrp",
          "label": "Sourcegrp",
          "description": "Sourcegrp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Copy Page"
        },
        {
          "name": "templategrp",
          "label": "Templategrp",
          "description": "Templategrp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Copy Page"
        },
        {
          "name": "ncy",
          "label": "Ncy",
          "description": "Ncy parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Copy Page"
        },
        {
          "name": "nprims",
          "label": "Nprims",
          "description": "Nprims parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Copy Page"
        },
        {
          "name": "nml",
          "label": "Nml",
          "description": "Nml parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Copy Page"
        },
        {
          "name": "cum",
          "label": "Cum",
          "description": "Cum parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Copy Page"
        },
        {
          "name": "xord",
          "label": "Xord",
          "description": "Xord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Copy Page"
        },
        {
          "name": "rord",
          "label": "Rord",
          "description": "Rord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Copy Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Copy Page"
            }
          ],
          "section": "Copy Page"
        },
        {
          "name": "r",
          "label": "R",
          "description": "R parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Copy Page"
            }
          ],
          "section": "Copy Page"
        },
        {
          "name": "s",
          "label": "S",
          "description": "S parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Copy Page"
            }
          ],
          "section": "Copy Page"
        },
        {
          "name": "p",
          "label": "P",
          "description": "P parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Copy Page"
            }
          ],
          "section": "Copy Page"
        },
        {
          "name": "scale",
          "label": "Scale",
          "description": "Scale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Copy Page"
        },
        {
          "name": "vlength",
          "label": "Vlength",
          "description": "Vlength parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Copy Page"
        },
        {
          "name": "newg",
          "label": "Newg",
          "description": "Newg parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Copy Page"
        },
        {
          "name": "copyg",
          "label": "Copyg",
          "description": "Copyg parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Copy Page"
        },
        {
          "name": "lookat",
          "label": "Lookat",
          "description": "Lookat parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Copy Page"
        },
        {
          "name": "upvector",
          "label": "Upvector",
          "description": "Upvector parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Copy Page"
        },
        {
          "name": "stamp",
          "label": "Stamp",
          "description": "Stamp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Stamp Page"
        },
        {
          "name": "copy",
          "label": "Copy",
          "description": "Copy parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Copy Page"
            }
          ],
          "section": "Stamp Page"
        },
        {
          "name": "doattr",
          "label": "Doattr",
          "description": "Doattr parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        },
        {
          "name": "setpt",
          "label": "Setpt",
          "description": "Setpt parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        },
        {
          "name": "setprim",
          "label": "Setprim",
          "description": "Setprim parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        },
        {
          "name": "setvtx",
          "label": "Setvtx",
          "description": "Setvtx parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        },
        {
          "name": "mulpt",
          "label": "Mulpt",
          "description": "Mulpt parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        },
        {
          "name": "mulprim",
          "label": "Mulprim",
          "description": "Mulprim parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        },
        {
          "name": "mulvtx",
          "label": "Mulvtx",
          "description": "Mulvtx parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        },
        {
          "name": "addpt",
          "label": "Addpt",
          "description": "Addpt parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        },
        {
          "name": "addprim",
          "label": "Addprim",
          "description": "Addprim parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        },
        {
          "name": "addvtx",
          "label": "Addvtx",
          "description": "Addvtx parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        },
        {
          "name": "subpt",
          "label": "Subpt",
          "description": "Subpt parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        },
        {
          "name": "subprim",
          "label": "Subprim",
          "description": "Subprim parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        },
        {
          "name": "subvtx",
          "label": "Subvtx",
          "description": "Subvtx parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "templategrp",
          "language": "python"
        },
        {
          "code": "fetchStamp()",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "fetchStamp()",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.copyTotal",
          "language": "python"
        },
        {
          "code": "360/me.copyTotal",
          "language": "python"
        },
        {
          "code": "fetchStamp(\"sides\",3)",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "fetchStamp()",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.copyIndex+3",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Generate",
      "useCases": [
        "Image positioning and scaling",
        "Rotation and skew operations",
        "Coordinate space conversions",
        "Animation and motion graphics"
      ],
      "url": "https://docs.derivative.ca/Copy_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.439Z",
      "parameterCount": 33
    },
    {
      "name": "CPlusPlus",
      "fullName": "CPlusPlus SOP",
      "category": "SOP",
      "description": "The CPlusPlus SOP allows you to make custom SOP operators by writing your own plugin using C++.\n\nSee Write a CPlusPlus Plugin and the other articles in the C++ category for more detailed information on how to make .dll for use with this SOP.\n\nThe C++ code can be written for GPU or CPU loading. The ease of developing C++ code for either of these two options are fairly similar. Nevertheless, by setting the “directToGPU” flag within the C++ code, only one of these modes is recognized as a valid mode. Different classes are dedicated for each of these two modes, so bear in mind that setting the “directToGPU” flag to “true” or “false” requires different classes and functions to be called within either of execute() or executeVBO().\n\nIn CPU mode, the geometry data can be added one at a time or all at once. As well, in CPU mode the CPlusPlus SOP can use wired SOP inputs and SOP to DAT, SOP to CHOP, or SOP output OPs as well. Additionally DAT, CHOP, and TOP 'non-wired' input operators can be used as custom parameters. In this case, the custom parameters must be first handled in the C++ code to be able to accept any input from the other operators.\n\nThe GPU direct mode is similar to CPU mode, but it cannot use any output SOPs downstream or be accessed by SOP to DAT or SOP to CHOP operators. In GPU direct mode the data is added to the VBO buffers immediately which improves the performance through faster updating, however the size of the vertices and face array indices must be known prior to filling the buffers.\n\nExample for CPlusPlus SOP as a Visual Studio project in Windows are available in C:/Program Files/Derivative/TouchDesigner/Samples/CPlusPlus/SimpleShapesSOP or your custom TouchDesigner installation folder. (NOTE: On macOS it is here: TouchDesigner.app/Contents/Resources/tfs/Samples/CPlusPlus/SimpleShapesSOP)\n\nCustom Parameters - Custom Parameters can be automatically created by the C++ SOP .dll. This custom parameter page can be removed, edited, or appended to from within the setupParameters() function in SimpleShapes.cpp. The defined custom parameters can be enabled or disabled depending on whether they are valid for a specific task or not.\n\nGeometry Data - Geometry within the C++ SOP code can be defined by any algorithm or even imported from external files. The possible geometries are triangular meshes and particle systems. Note that if your original geometry has polygons with more than 3 vertices, they must be converted to triangles with known and valid vertex indices, before being added to the list of triangles.\n\nThe geometry data for exporting to TouchDesigner can have point, normal, and texture coordinates, RGBA colors, triangle information in case of meshes and/or particle systems, as well as custom attributes with an arbitrary name, float or integer type, and up to 4 components (ie. Cd0, Cd1, Cd2, Cd3).\n\ncplusplusSOP_Class\n\nExtra Information for the CPlusPlus SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "plugin",
          "label": "Plugin",
          "description": "Plugin parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Load Page"
        },
        {
          "name": "reinit",
          "label": "Reinit",
          "description": "Reinit parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Load Page"
        },
        {
          "name": "reinitpulse",
          "label": "Reinitpulse",
          "description": "Reinitpulse parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Load Page"
        },
        {
          "name": "unloadplugin",
          "label": "Unloadplugin",
          "description": "Unloadplugin parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Load Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Example for CPlusPlus SOP as a Visual Studio project in Windows are available in C:/Program Files/Derivative/TouchDesigner/Samples/CPlusPlus/SimpleShapesSOP or your custom TouchDesigner installation folder. (NOTE: On macOS it is here: TouchDesigner.app/Contents/Resources/tfs/Samples/CPlusPlus/SimpleShapesSOP)"
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "directToGPU",
          "language": "python"
        },
        {
          "code": "directToGPU",
          "language": "python"
        },
        {
          "code": "executeVBO()",
          "language": "python"
        },
        {
          "code": "C:/Program Files/Derivative/TouchDesigner/Samples/CPlusPlus/SimpleShapesSOP",
          "language": "python"
        },
        {
          "code": "TouchDesigner.app/Contents/Resources/tfs/Samples/CPlusPlus/SimpleShapesSOP",
          "language": "python"
        },
        {
          "code": "setupParameters()",
          "language": "python"
        },
        {
          "code": "reinitpulse",
          "language": "python"
        },
        {
          "code": "unloadplugin",
          "language": "python"
        },
        {
          "code": "/geo1/circle1",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "The C++ code can be written for GPU or CPU loading. The ease of developing C++ code for either of these two options are fairly similar. Nevertheless, by setting the “directToGPU” flag within the C++ code, only one of these modes is recognized as a valid mode. Different classes are dedicated for each of these two modes, so bear in mind that setting the “directToGPU” flag to “true” or “false” requires different classes and functions to be called within either of execute() or executeVBO().",
        "In CPU mode, the geometry data can be added one at a time or all at once. As well, in CPU mode the CPlusPlus SOP can use wired SOP inputs and SOP to DAT, SOP to CHOP, or SOP output OPs as well. Additionally DAT, CHOP, and TOP 'non-wired' input operators can be used as custom parameters. In this case, the custom parameters must be first handled in the C++ code to be able to accept any input from the other operators.",
        "The GPU direct mode is similar to CPU mode, but it cannot use any output SOPs downstream or be accessed by SOP to DAT or SOP to CHOP operators. In GPU direct mode the data is added to the VBO buffers immediately which improves the performance through faster updating, however the size of the vertices and face array indices must be known prior to filling the buffers.",
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data.",
        "An Operator Family that creates, composites and modifies images, and reads/writes images and movies to/from files and the network. TOPs run on the graphics card's GPU."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/CPlusPlus_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.456Z",
      "parameterCount": 4
    },
    {
      "name": "Creep",
      "fullName": "Creep SOP",
      "category": "SOP",
      "description": "The Creep SOP lets you deform and animate Source Input (input0) geometry along the surface of the Path Input (input1) geometry.\n\ncreepSOP_Class\n\nThe below three transform fields set the translation of the input geometry along the rows (U) and columns (V) of the Path. A creep translate of 0.5, -0.5, 1 puts the source in the middle of the path, one unit away from it.\t\t\nFor scaling, a source of 0.2  0.3 in size will span 20% of the columns, and 30% of the rows on the Path.\n\nExtra Information for the Creep SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "reset",
          "label": "Reset",
          "description": "Reset parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "resetmethod",
          "label": "Resetmethod",
          "description": "Resetmethod parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "resetmethod",
          "language": "python"
        },
        {
          "code": "keepproportions",
          "language": "python"
        },
        {
          "code": "0.5, -0.5, 1",
          "language": "python"
        },
        {
          "code": "/geo1/circle1",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "Image positioning and scaling",
        "Rotation and skew operations",
        "Coordinate space conversions",
        "Animation and motion graphics"
      ],
      "url": "https://docs.derivative.ca/Creep_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.486Z",
      "parameterCount": 2
    },
    {
      "name": "Curveclay",
      "fullName": "Curveclay SOP",
      "category": "SOP",
      "description": "The Curveclay SOP is similar to the Clay SOP in that you deform a spline surface not by modifying the CVs but by directly manipulating the surface. However, instead of using a point on the surface, you use one or more faces to deform that surface. Also, CurveClay does not yet support polygonal meshes. \t\t\nThe combination of inputs will determine the modes of transformation. For any combination of inputs, the following parameters modify the following behaviors of the SOP.\n\ncurveclaySOP_Class\n\nControls curve projection. Enabled if all 3 inputs exist.\n\nHow to deform surface. Enabled if only 1 input exists.\n\nWhen using CurveClay on a wrapped surface, here are some points to remember:\n\nExtra Information for the Curveclay SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "facegroup",
          "label": "Facegroup",
          "description": "Facegroup parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Curve Clay Page"
        },
        {
          "name": "surfgroup",
          "label": "Surfgroup",
          "description": "Surfgroup parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Curve Clay Page"
        },
        {
          "name": "divs",
          "label": "Divs",
          "description": "Divs parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Curve Clay Page"
        },
        {
          "name": "sharp",
          "label": "Sharp",
          "description": "Sharp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Curve Clay Page"
        },
        {
          "name": "refine",
          "label": "Refine",
          "description": "Refine parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Curve Clay Page"
        },
        {
          "name": "projop",
          "label": "Projop",
          "description": "Projop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Projection Page"
        },
        {
          "name": "projdir",
          "label": "Projdir",
          "description": "Projdir parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Projection Page"
        },
        {
          "name": "deformop",
          "label": "Deformop",
          "description": "Deformop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Displacement Page"
        },
        {
          "name": "deformdir",
          "label": "Deformdir",
          "description": "Deformdir parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Displacement Page"
        },
        {
          "name": "deformlen",
          "label": "Deformlen",
          "description": "Deformlen parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Displacement Page"
        },
        {
          "name": "deforminside",
          "label": "Deforminside",
          "description": "Deforminside parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Displacement Page"
        },
        {
          "name": "individual",
          "label": "Individual",
          "description": "Individual parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Displacement Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        },
        {
          "type": "SOP",
          "description": "Input 2:  -",
          "index": 2
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "deforminside",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Generate",
      "useCases": [
        "Image positioning and scaling",
        "Rotation and skew operations",
        "Coordinate space conversions",
        "Animation and motion graphics"
      ],
      "url": "https://docs.derivative.ca/Curveclay_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.496Z",
      "parameterCount": 12
    },
    {
      "name": "Curvesect",
      "fullName": "Curvesect SOP",
      "category": "SOP",
      "description": "The Curvesect SOP finds the intersections or the points of minimum distance between two or more faces (polygons, Bziers, and NURBS curves) or between faces and a polygonal or spline surface.\n\ncurvesectSOP_Class\n\nExtra Information for the Curvesect SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "leftgroup",
          "label": "Leftgroup",
          "description": "Leftgroup parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Curvesect Page"
        },
        {
          "name": "rightgroup",
          "label": "Rightgroup",
          "description": "Rightgroup parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Curvesect Page"
        },
        {
          "name": "xsect",
          "label": "Xsect",
          "description": "Xsect parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Curvesect Page"
        },
        {
          "name": "tolerance",
          "label": "Tolerance",
          "description": "Tolerance parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Curvesect Page"
        },
        {
          "name": "method",
          "label": "Method",
          "description": "Method parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Curvesect Page"
        },
        {
          "name": "left",
          "label": "Left",
          "description": "Extract from the left input faces.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Left Input",
              "value": "left",
              "description": "Extract from the left input faces."
            },
            {
              "label": "Both Inputs",
              "value": "both",
              "description": "Extract from both left and right inputs."
            }
          ],
          "section": "Curvesect Page"
        },
        {
          "name": "right",
          "label": "Right",
          "description": "Extract from the right input (face or surface).",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Right Input",
              "value": "right",
              "description": "Extract from the right input (face or surface)."
            },
            {
              "label": "Both Inputs",
              "value": "both",
              "description": "Extract from both left and right inputs."
            }
          ],
          "section": "Curvesect Page"
        },
        {
          "name": "affect",
          "label": "Affect",
          "description": "Affect parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Curvesect Page"
        },
        {
          "name": "extractpt",
          "label": "Extractpt",
          "description": "Extractpt parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Curvesect Page"
        },
        {
          "name": "keeporiginal",
          "label": "Keeporiginal",
          "description": "Keeporiginal parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Curvesect Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "keeporiginal",
          "language": "python"
        },
        {
          "code": "/geo1/circle1",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Generate",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Curvesect_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.512Z",
      "parameterCount": 10
    },
    {
      "name": "DAT to",
      "fullName": "DAT to SOP",
      "category": "SOP",
      "description": "The DAT to SOP can be used to create geometry from DAT tables, or if a SOP input is specified, to modify attributes on existing geometry. See also the Add SOP.\n\nWithout a SOP input, the output is created entirely from the DAT, one SOP point per row of the DAT, except for an optional top row with column headings. The common columns headings include the point number index, point position P(0) P(1) P(2), point weight Pw, the color and alpha Cd(0) Cd(1) Cd(2) Cd(3), texture coordinates uv(0) uv(1) uv(2), and point normal N(0) N(1) N(2). If no index column is specified, row number is used as the point number. If there is no heading for the Point DAT, the list of attributes is assumed to be in order P(0) P(1) P(2) Pw Cd(0) Cd(1) Cd(2) Cd(3) N(0) N(1) N(2) uv(0) uv(1) uv(2) for the first 14 columns.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nIf an input is used, attributes are read in and replace the ones in the existing geometry. The Merge parameter will be enabled when an input is connected. Depending on the Merge menu setting, either the  Points DAT or  Primitive DAT parameter used for the merge data. If an input is used, the Points or Primitives DAT must have a column named index. This column is used to match the point or primitive to the incoming geometry by point or primitive number.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nAttributes in the columns headings should have column name attrib if it is a single value attribute, or have multiple columns named attrib(0), attrib(1), attrib(2) etc if it is a multiple-value attribute.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nData can also be converted into a form that can be rendered as particles.\n\nExample File : File:SOPtoDATtoSOP.tox\n\ndattoSOP_Class\n\nExtra Information for the DAT to SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "pointsdat",
          "label": "Pointsdat",
          "description": "Pointsdat parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "verticesdat",
          "label": "Verticesdat",
          "description": "Verticesdat parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "primsdat",
          "label": "Primsdat",
          "description": "Primsdat parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "detaildat",
          "label": "Detaildat",
          "description": "Detaildat parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "merge",
          "label": "Merge",
          "description": "Merge parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Points",
              "value": "points",
              "description": "Merge point data."
            },
            {
              "label": "Primitives",
              "value": "primitives",
              "description": "Merge primitive data."
            }
          ],
          "section": "Page"
        },
        {
          "name": "float",
          "label": "Float",
          "description": "Float parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "int",
          "label": "Int",
          "description": "Int parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Points",
              "value": "points",
              "description": "Merge point data."
            },
            {
              "label": "Connect All Points",
              "value": "all",
              "description": "Connect all points."
            },
            {
              "label": "Connect Every 2 Points",
              "value": "pts2",
              "description": "Connect points in pairs."
            },
            {
              "label": "Connect Every 3 Points",
              "value": "pts3",
              "description": "Connect points in triples."
            },
            {
              "label": "Connect Every 4 Points",
              "value": "pts4",
              "description": "Connect every 4 points together."
            },
            {
              "label": "Connect Every N Points",
              "value": "ptsn",
              "description": "Connect every N points together."
            },
            {
              "label": "Particle System using All Points",
              "value": "particleall",
              "description": "Creates a particle system of points."
            }
          ],
          "section": "Page"
        },
        {
          "name": "string",
          "label": "String",
          "description": "String parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "build",
          "label": "Build",
          "description": "Build parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Use Primitive DAT",
              "value": "dat",
              "description": "Build geometry using data from the Primitive DAT."
            },
            {
              "label": "Triangles",
              "value": "triangles",
              "description": "Build the grid with Triangles."
            }
          ],
          "section": "Page"
        },
        {
          "name": "n",
          "label": "N",
          "description": "N parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Points",
              "value": "points",
              "description": "Merge point data."
            },
            {
              "label": "Use Primitive DAT",
              "value": "dat",
              "description": "Build geometry using data from the Primitive DAT."
            },
            {
              "label": "Connect All Points",
              "value": "all",
              "description": "Connect all points."
            },
            {
              "label": "Connect Every 2 Points",
              "value": "pts2",
              "description": "Connect points in pairs."
            },
            {
              "label": "Connect Every 3 Points",
              "value": "pts3",
              "description": "Connect points in triples."
            },
            {
              "label": "Connect Every 4 Points",
              "value": "pts4",
              "description": "Connect every 4 points together."
            },
            {
              "label": "Connect Every N Points",
              "value": "ptsn",
              "description": "Connect every N points together."
            },
            {
              "label": "Polygon with N Rows",
              "value": "polyrow",
              "description": "Create a polygon grid with N rows."
            },
            {
              "label": "Polygon with N Columns",
              "value": "polycol",
              "description": "Create a polygon grid with N columns."
            },
            {
              "label": "Mesh with N Rows",
              "value": "meshrow",
              "description": "Create a mesh grid with N rows."
            },
            {
              "label": "Mesh with N Columns",
              "value": "meshcol",
              "description": "Create a mesh grid with N columns."
            },
            {
              "label": "Particle System using All Points",
              "value": "particleall",
              "description": "Creates a particle system of points."
            },
            {
              "label": "Rows",
              "value": "rows",
              "description": "Creates horizontal lines."
            },
            {
              "label": "Columns",
              "value": "cols",
              "description": "Creates vertical lines."
            },
            {
              "label": "Rows and Columns",
              "value": "rowcol",
              "description": "Both Rows and Columns. Looks like Quads in wireframe display, but all polygons are open (if the primitive type is polygon). Compare them in the Model Editor."
            },
            {
              "label": "Triangles",
              "value": "triangles",
              "description": "Build the grid with Triangles."
            },
            {
              "label": "Quadrilaterals",
              "value": "quads",
              "description": "Generates sides composed of quadrilaterals (default)."
            },
            {
              "label": "Alternating Triangles",
              "value": "alttriangles",
              "description": "Generates triangles that are opposed; similar to the Triangles option."
            }
          ],
          "section": "Page"
        },
        {
          "name": "closed",
          "label": "Closed",
          "description": "Closed parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "closedv",
          "label": "Closedv",
          "description": "Closedv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "connect",
          "label": "Connect",
          "description": "Connect parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Connect All Points",
              "value": "all",
              "description": "Connect all points."
            },
            {
              "label": "Connect Every 2 Points",
              "value": "pts2",
              "description": "Connect points in pairs."
            },
            {
              "label": "Connect Every 3 Points",
              "value": "pts3",
              "description": "Connect points in triples."
            },
            {
              "label": "Connect Every 4 Points",
              "value": "pts4",
              "description": "Connect every 4 points together."
            },
            {
              "label": "Connect Every N Points",
              "value": "ptsn",
              "description": "Connect every N points together."
            }
          ],
          "section": "Page"
        },
        {
          "name": "prtype",
          "label": "Prtype",
          "description": "Prtype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "P(0) P(1) P(2)",
          "language": "python"
        },
        {
          "code": "Cd(0) Cd(1) Cd(2) Cd(3)",
          "language": "python"
        },
        {
          "code": "uv(0) uv(1) uv(2)",
          "language": "python"
        },
        {
          "code": "N(0) N(1) N(2)",
          "language": "python"
        },
        {
          "code": "P(0) P(1) P(2) Pw Cd(0) Cd(1) Cd(2) Cd(3) N(0) N(1) N(2) uv(0) uv(1) uv(2)",
          "language": "python"
        },
        {
          "code": "attribute_name(attribute_index)",
          "language": "python"
        },
        {
          "code": "P(0) P(1) P(2) Pw Cd(0) Cd(1) Cd(2) Cd(3) N(0) N(1) N(2) uv(0) uv(1) uv(2)",
          "language": "python"
        },
        {
          "code": "index\tP(0)\tP(1)\tP(2)\tPw\tN(0)\tN(1)\tN(2)\t\t\t\t\t\t\t\t\t\n   0\t\t-0.5\t-0.5\t-0.5\t1\t0\t0\t-1\t\t\t\t\t\t\t\t\n   1\t\t-0.5\t0.5\t-0.5\t1\t0\t0\t-1\t\t\t\t\t\t\t\t\n   2\t\t0.5\t0.5\t-0.5\t1\t0\t0\t-1\t\t\t\t\t\t\t\t\n   3\t\t0.5\t-0.5\t-0.5\t1\t0\t0\t-1\t\t\t\t\t\t\t\t\n   ...",
          "language": "python"
        },
        {
          "code": "P(0) P(1) P(2)",
          "language": "python"
        },
        {
          "code": "Cd(0) Cd(1) Cd(2) Cd(3)",
          "language": "python"
        },
        {
          "code": "uv(0) uv(1) uv(2)",
          "language": "python"
        },
        {
          "code": "N(0) N(1) N(2)",
          "language": "python"
        },
        {
          "code": "verticesdat",
          "language": "python"
        },
        {
          "code": "index\tvindex\tuv(0)\tuv(1)\tuv(2)\t\t\t\t\t\t\t\t\t\t\t\t\n   0\t\t0\t0\t0\t0\t\t\t\t\t\t\t\t\t\t\t\n   0\t\t1\t0\t1\t0\t\t\t\t\t\t\t\t\t\t\t\n   0\t\t2\t1\t1\t0\t\t\t\t\t\t\t\t\t\t\t\n   0\t\t3\t1\t0\t0\t\t\t\t\t\t\t\t\t\t\t\n   1\t\t0\t1\t0\t0\t\t\t\t\t\t\t\t\t\t\t\n   1\t\t1\t1\t1\t0\t\t\t\t\t\t\t\t\t\t\t\n   1\t\t2\t1\t1\t1\t\t\t\t\t\t\t\t\t\t\t\n   1\t\t3\t1\t0\t1\t\t\t\t\t\t\t\t\t\t\t\n   ...",
          "language": "python"
        },
        {
          "code": "Cd(0) Cd(1) Cd(2) Cd(3)",
          "language": "python"
        },
        {
          "code": "uv(0) uv(1) uv(2)",
          "language": "python"
        },
        {
          "code": "N(0) N(1) N(2)",
          "language": "python"
        },
        {
          "code": "index\tvertices\tclose\tCd(0)\tCd(1)\tCd(2)\tCd(3)\t\t\t\t\t\t\t\t\t\t\n   0\t\t0 1 2 3\t\t1\t0.2\t1\t1\t1\t\t\t\t\t\t\t\t\n   1\t\t4 5 6 7\t\t1\t0.2\t0.2\t0.5\t1\t\t\t\t\t\t\t\t\n   2\t\t8 9 10 11\t1\t0.2\t0.2\t0.2\t1",
          "language": "python"
        },
        {
          "code": "Cd(0) Cd(1) Cd(2) Cd(3)",
          "language": "python"
        },
        {
          "code": "pCaptPath\t\tpCaptData(0)\tpCaptData(1)\tpCaptData(2)\t...\t\t\t\t\t\t\t\t\t\t\t\n   /bone1/cregion \t0\t\t3.33333\t\t0\t\t...",
          "language": "python"
        },
        {
          "code": "particleall",
          "language": "python"
        },
        {
          "code": "alttriangles",
          "language": "python"
        },
        {
          "code": "pointprites",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "3D scene visualization",
        "Real-time graphics rendering",
        "Multi-pass rendering workflows",
        "Shadow and reflection generation"
      ],
      "url": "https://docs.derivative.ca/DAT_to_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.550Z",
      "parameterCount": 14
    },
    {
      "name": "Deform",
      "fullName": "Deform SOP",
      "category": "SOP",
      "description": "The Deform SOP takes geometry along with point weights (assigned by the Capture SOP) and deforms geometry as Capture Regions are moved. This gives you the flexibility to procedurally modify geometry between the Capture and Deform SOPs.\n\ndeformSOP_Class\n\nExtra Information for the Deform SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "delcaptatr",
          "label": "Delcaptatr",
          "description": "Delcaptatr parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "delcolatr",
          "label": "Delcolatr",
          "description": "Delcolatr parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "donormal",
          "label": "Donormal",
          "description": "Donormal parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "skelrootpath",
          "label": "Skelrootpath",
          "description": "Skelrootpath parameter",
          "type": "File",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "skelrootpath",
          "language": "python"
        },
        {
          "code": "/project1/moviein1",
          "language": "python"
        },
        {
          "code": "/geo1/circle1",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Deform_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.567Z",
      "parameterCount": 5
    },
    {
      "name": "Delete",
      "fullName": "Delete SOP",
      "category": "SOP",
      "description": "The Delete SOP deletes input geometry as selected by a group specification or a geometry selection by using either of the three selection options: by entity number, by a bounding volume, and by entity (primitive/point) normals. You can choose to delete the selected or the non-selected geometry.\n\ndeleteSOP_Class\n\nAllows selection of grouping of entities by number. When checked, the options relative to this selection option are displayed.\n\nThis option is used for selecting entities based on bounding volumes: Bounding Box, or Bounding Sphere. When checked, the options relative to this selection option are displayed.\n\nThis option is used for selecting entities based on the angle of the entity normals. When checked, the options relative to this selection option are displayed.\n\nExtra Information for the Delete SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "negate",
          "label": "Negate",
          "description": "Negate parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "entity",
          "label": "Entity",
          "description": "Entity parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "geotype",
          "label": "Geotype",
          "description": "Geotype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "usenumber",
          "label": "Usenumber",
          "description": "Usenumber parameter",
          "type": "Int",
          "default": "",
          "range": null,
          "options": null,
          "section": "Number Page"
        },
        {
          "name": "groupop",
          "label": "Groupop",
          "description": "Groupop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Number Page"
        },
        {
          "name": "pattern",
          "label": "Pattern",
          "description": "Select a pattern in the Pattern field below.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Delete by Pattern",
              "value": "pattern",
              "description": "Select a pattern in the Pattern field below."
            }
          ],
          "section": "Number Page"
        },
        {
          "name": "range",
          "label": "Range",
          "description": "Select a Range using the Start/End and Select_of_ fields below.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Delete by Range",
              "value": "range",
              "description": "Select a Range using the Start/End and Select_of_ fields below."
            },
            {
              "label": "Delete by Expression",
              "value": "filter",
              "description": "Select a range using the Filter Expression field below."
            }
          ],
          "section": "Number Page"
        },
        {
          "name": "select",
          "label": "Select",
          "description": "Select parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Delete",
              "value": "Non",
              "description": "Selected keep -"
            },
            {
              "label": "All Types",
              "value": "all",
              "description": "All geometry will be selected."
            },
            {
              "label": "Delete by Pattern",
              "value": "pattern",
              "description": "Select a pattern in the Pattern field below."
            },
            {
              "label": "Delete by Range",
              "value": "range",
              "description": "Select a Range using the Start/End and Select_of_ fields below."
            },
            {
              "label": "Delete by Expression",
              "value": "filter",
              "description": "Select a range using the Filter Expression field below."
            },
            {
              "label": "Bounding Box",
              "value": "usebbox",
              "description": "Bounding Box entities contained within the box are selected."
            },
            {
              "label": "Bounding Sphere",
              "value": "usebsphere",
              "description": "Bounding Sphere entities contained within the sphere are selected."
            }
          ],
          "section": "Number Page"
        },
        {
          "name": "filter",
          "label": "Filter",
          "description": "Select a range using the Filter Expression field below.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Delete by Expression",
              "value": "filter",
              "description": "Select a range using the Filter Expression field below."
            }
          ],
          "section": "Number Page"
        },
        {
          "name": "usebounds",
          "label": "Usebounds",
          "description": "Usebounds parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Bounding Volume Page"
        },
        {
          "name": "boundtype",
          "label": "Boundtype",
          "description": "Boundtype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Bounding Volume Page"
        },
        {
          "name": "size",
          "label": "Size",
          "description": "Size parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Bounding Volume Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            },
            {
              "label": "Delete",
              "value": "Non",
              "description": "Selected keep -"
            },
            {
              "label": "All Types",
              "value": "all",
              "description": "All geometry will be selected."
            },
            {
              "label": "Delete by Pattern",
              "value": "pattern",
              "description": "Select a pattern in the Pattern field below."
            },
            {
              "label": "Delete by Range",
              "value": "range",
              "description": "Select a Range using the Start/End and Select_of_ fields below."
            },
            {
              "label": "Delete by Expression",
              "value": "filter",
              "description": "Select a range using the Filter Expression field below."
            },
            {
              "label": "Bounding Box",
              "value": "usebbox",
              "description": "Bounding Box entities contained within the box are selected."
            },
            {
              "label": "Bounding Sphere",
              "value": "usebsphere",
              "description": "Bounding Sphere entities contained within the sphere are selected."
            }
          ],
          "section": "Bounding Volume Page"
        },
        {
          "name": "usenormal",
          "label": "Usenormal",
          "description": "Usenormal parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Normal Page"
        },
        {
          "name": "dir",
          "label": "Dir",
          "description": "Dir parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Normal Page"
        },
        {
          "name": "angle",
          "label": "Angle",
          "description": "Angle parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Normal Page"
        },
        {
          "name": "camera",
          "label": "Camera",
          "description": "Camera parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Normal Page"
        },
        {
          "name": "removegrp",
          "label": "Removegrp",
          "description": "Removegrp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Normal Page"
        },
        {
          "name": "keeppoints",
          "label": "Keeppoints",
          "description": "Keeppoints parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Normal Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "0.4 2 4 2.5 3.7",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Delete_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.602Z",
      "parameterCount": 20
    },
    {
      "name": "Divide",
      "fullName": "Divide SOP",
      "category": "SOP",
      "description": "The Divide SOP divides incoming polygonal geometry. It will smooth input polygons, dividing polygons, as well as sub-divide input polygons using the Bricker option. Bricker is also useful for polygon faces with more than four edges to chop them up into quads and triangles allowing for proper shading when using deformation tools.\n\ndivideSOP_Class\n\nExtra Information for the Divide SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "convex",
          "label": "Convex",
          "description": "Convex parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "numsides",
          "label": "Numsides",
          "description": "Numsides parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "planar",
          "label": "Planar",
          "description": "Planar parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "smooth",
          "label": "Smooth",
          "description": "Smooth parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "weight",
          "label": "Weight",
          "description": "Weight parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "divs",
          "label": "Divs",
          "description": "Divs parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "brick",
          "label": "Brick",
          "description": "Brick parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "size",
          "label": "Size",
          "description": "Size parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "offset",
          "label": "Offset",
          "description": "Offset parameter",
          "type": "XY",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "angle",
          "label": "Angle",
          "description": "Angle parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "removesh",
          "label": "Removesh",
          "description": "Removesh parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "dual",
          "label": "Dual",
          "description": "Dual parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Divide_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.612Z",
      "parameterCount": 13
    },
    {
      "name": "Extrude",
      "fullName": "Extrude SOP",
      "category": "SOP",
      "description": "The Extrude SOP can be used for:\n\nThe default is a 1 unit extrusion directly backwards from the input geometry's normals.\n\nIt uses the normal of the surface to determine the direction of extrusion. In the case of planar or open polygons, the normal is difficult to determine, and may not always provide the result that you expect. Turn on the Primitive Normals display in the Viewer display options to see the normals.\n\nThe extrusion is created by extending surfaces from the vertices of the input geometry along the cross-section curve given in the second input (Input 1). The first vertex of the cross-section curve is placed by default at the vertices of the input geometry and aligned so that the curve's positive Y axis extends opposite to the input geometry's normal. The cross-section's positive X axis by default extends outwards from center of the input geometry.\n\nIf no cross-section curve is given, a vertical line going from (0,0,0) to (0,1,0) is used. This results in a 1 unit extrusion directly backwards from the input geometry's normals. As another example, using a straight line from (0,0,0) to (.1,.1,0) will result in an extrusion that extends 1 unit backwards from the input and flares .1 unit outwards on all sides. The Thickness and Depth parameters can be used to shift and scale the cross-section without directly changing the curve.\n\nNote: The shape of the cross-section is always relative to its first vertex, so shifting the entire cross-section curve will have no effect. Also, only the X and Y axes of the curve are used i.e. Z position values are ignored.\n\nAfter the new geometry is created, normals are computed by default.\n\nWarning: If you take a default output from a Text SOP and Extrude it, it may have bad rendering artifacts (and too many polygons) as it's extruding each of the triangles of the triangulated letters. You need to change the Output parameter of the Text SOP to Closed Polygons. See OP Snippets.\n\nextrudeSOP_Class\n\nThis SOP is mainly used for generating bevels and extrusions of text where the input cross-sections are fed from a Font SOP. Any curve or group of curves can also be used as input.\n\nOffsets - This SOP can be used for generating two offsetting curves where the distance between the two curves remains constant. To do this, make sure that you set Side Mesh to No Output, the first thickness to zero and adjust the second to increase or decrease the distance of the offset.\n\nFixing Stray Normals - If your geometry contains normals that are pointed in many directions (say after reading geometry from a File In SOP, or if you have a lot of open or non-planar polygons), you can fix it so that they are suitable for extrusion.\n\nDo this by appending a Group SOP to the SOP that contains your geometry, enable Normal, and reduce the Spread Angle to something less than 180. Then append a Primitive SOP, which should work on the group made in the Group SOP. In the Face/Hull page, set the Vertex menu to Reverse.\n\nNow the normals in your geometry will all be oriented in the roughly the same direction, and ready for extrusion. To narrow the tolerance, decrease the Spread Angle further.\n\nExtra Information for the Extrude SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "sourcegrp",
          "label": "Sourcegrp",
          "description": "Sourcegrp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "xsectiongrp",
          "label": "Xsectiongrp",
          "description": "Xsectiongrp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "dofuse",
          "label": "Dofuse",
          "description": "Dofuse parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "fronttype",
          "label": "Fronttype",
          "description": "Fronttype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "backtype",
          "label": "Backtype",
          "description": "Backtype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "sidetype",
          "label": "Sidetype",
          "description": "Sidetype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "initextrude",
          "label": "Initextrude",
          "description": "Initextrude parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "thickxlate",
          "label": "Thickxlate",
          "description": "Thickxlate parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "thickscale",
          "label": "Thickscale",
          "description": "Thickscale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "depthxlate",
          "label": "Depthxlate",
          "description": "Depthxlate parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "depthscale",
          "label": "Depthscale",
          "description": "Depthscale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "vertex",
          "label": "Vertex",
          "description": "Vertex parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "docusp",
          "label": "Docusp",
          "description": "Docusp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "cuspangle",
          "label": "Cuspangle",
          "description": "Cuspangle parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "sharefaces",
          "label": "Sharefaces",
          "description": "Sharefaces parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "removesharedsides",
          "label": "Removesharedsides",
          "description": "Removesharedsides parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "newg",
          "label": "Newg",
          "description": "Newg parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Groups Page"
        },
        {
          "name": "frontgrp",
          "label": "Frontgrp",
          "description": "Frontgrp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Groups Page"
        },
        {
          "name": "backgrp",
          "label": "Backgrp",
          "description": "Backgrp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Groups Page"
        },
        {
          "name": "sidegrp",
          "label": "Sidegrp",
          "description": "Sidegrp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Groups Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note: The shape of the cross-section is always relative to its first vertex, so shifting the entire cross-section curve will have no effect. Also, only the X and Y axes of the curve are used i.e. Z position values are ignored.",
        "Warning: If you take a default output from a Text SOP and Extrude it, it may have bad rendering artifacts (and too many polygons) as it's extruding each of the triangles of the triangulated letters. You need to change the Output parameter of the Text SOP to Closed Polygons. See OP Snippets."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "xsectiongrp",
          "language": "python"
        },
        {
          "code": "alttriangles",
          "language": "python"
        },
        {
          "code": "initextrude",
          "language": "python"
        },
        {
          "code": "removesharedsides",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Modify",
      "useCases": [
        "3D scene visualization",
        "Real-time graphics rendering",
        "Multi-pass rendering workflows",
        "Shadow and reflection generation"
      ],
      "url": "https://docs.derivative.ca/Extrude_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.625Z",
      "parameterCount": 20
    },
    {
      "name": "Face Track",
      "fullName": "Face Track SOP",
      "category": "SOP",
      "description": "The Face Track SOP provides accesses to the fitted face mesh generated by the Face Track CHOP. It can either be uploaded directly to the GPU for rendering or passed along to other SOPs for further modification. By default, the mesh is pre-transformed to align with the source face of the input image (x, y positions equal image u,v positions). However, you can also disable the pre-transform which will leave the fitted mesh at the origin in the original scale. The mesh can still be aligned with the image using the tx, ty, rx, etc channels of the Face Track CHOP.\n\nNote:  To use this feature you will need to provide a compatible 3D morphable face mesh file in Nvidia 'nvf' format to the 'Mesh File' parameter of the Face Track CHOP. This file does not ship with TouchDesigner, but instructions on creating one are provided on the Face Track CHOP page.\n\nfacetrackSOP_Class\n\nExtra Information for the Face Track SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditorwikieditor2022.24140before 2022.24140",
      "parameters": [
        {
          "name": "chop",
          "label": "Chop",
          "description": "Chop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Face Track Page"
        },
        {
          "name": "directtogpu",
          "label": "Directtogpu",
          "description": "Directtogpu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Face Track Page"
        },
        {
          "name": "pretransform",
          "label": "Pretransform",
          "description": "Pretransform parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Face Track Page"
        },
        {
          "name": "normals",
          "label": "Normals",
          "description": "Normals parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Face Track Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note:  To use this feature you will need to provide a compatible 3D morphable face mesh file in Nvidia 'nvf' format to the 'Mesh File' parameter of the Face Track CHOP. This file does not ship with TouchDesigner, but instructions on creating one are provided on the Face Track CHOP page."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "directtogpu",
          "language": "python"
        },
        {
          "code": "pretransform",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "The Face Track SOP provides accesses to the fitted face mesh generated by the Face Track CHOP. It can either be uploaded directly to the GPU for rendering or passed along to other SOPs for further modification. By default, the mesh is pre-transformed to align with the source face of the input image (x, y positions equal image u,v positions). However, you can also disable the pre-transform which will leave the fitted mesh at the origin in the original scale. The mesh can still be aligned with the image using the tx, ty, rx, etc channels of the Face Track CHOP.",
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "3D scene visualization",
        "Real-time graphics rendering",
        "Multi-pass rendering workflows",
        "Shadow and reflection generation",
        "Image positioning and scaling",
        "Rotation and skew operations"
      ],
      "url": "https://docs.derivative.ca/Face_Track_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.659Z",
      "parameterCount": 4
    },
    {
      "name": "Experimental:Face Track",
      "fullName": "Experimental:Face Track SOP",
      "category": "SOP",
      "description": "The models for this node must be separately downloaded via the AR SDK for your GPU from https://www.nvidia.com/en-us/geforce/broadcasting/broadcast-sdk/resources/.The Face Track SOP provides accesses to the fitted face mesh generated by the Face Track CHOP. It can either be uploaded directly to the GPU for rendering or passed along to other SOPs for further modification. By default, the mesh is pre-transformed to align with the source face of the input image (x, y positions equal image u,v positions). However, you can also disable the pre-transform which will leave the fitted mesh at the origin in the original scale. The mesh can still be aligned with the image using the tx, ty, rx, etc channels of the Face Track CHOP.\n\nNote:  To use this feature you will need to provide a compatible 3D morphable face mesh file in Nvidia 'nvf' format to the 'Mesh File' parameter of the Face Track CHOP. This file does not ship with TouchDesigner, but instructions on creating one are provided on the Face Track CHOP page.\n\nfacetrackSOP_Class\n\nExtra Information for the Face Track SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditor",
      "parameters": [
        {
          "name": "chop",
          "label": "Chop",
          "description": "Chop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Face Track Page"
        },
        {
          "name": "directtogpu",
          "label": "Directtogpu",
          "description": "Directtogpu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Face Track Page"
        },
        {
          "name": "pretransform",
          "label": "Pretransform",
          "description": "Pretransform parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Face Track Page"
        },
        {
          "name": "normals",
          "label": "Normals",
          "description": "Normals parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Face Track Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note:  To use this feature you will need to provide a compatible 3D morphable face mesh file in Nvidia 'nvf' format to the 'Mesh File' parameter of the Face Track CHOP. This file does not ship with TouchDesigner, but instructions on creating one are provided on the Face Track CHOP page."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "directtogpu",
          "language": "python"
        },
        {
          "code": "pretransform",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "The models for this node must be separately downloaded via the AR SDK for your GPU from https://www.nvidia.com/en-us/geforce/broadcasting/broadcast-sdk/resources/.The Face Track SOP provides accesses to the fitted face mesh generated by the Face Track CHOP. It can either be uploaded directly to the GPU for rendering or passed along to other SOPs for further modification. By default, the mesh is pre-transformed to align with the source face of the input image (x, y positions equal image u,v positions). However, you can also disable the pre-transform which will leave the fitted mesh at the origin in the original scale. The mesh can still be aligned with the image using the tx, ty, rx, etc channels of the Face Track CHOP.",
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs."
      ],
      "subcategory": "General",
      "useCases": [
        "3D scene visualization",
        "Real-time graphics rendering",
        "Multi-pass rendering workflows",
        "Shadow and reflection generation",
        "Image positioning and scaling",
        "Rotation and skew operations"
      ],
      "url": "https://docs.derivative.ca/Experimental:Face_Track_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.677Z",
      "parameterCount": 4
    },
    {
      "name": "Facet",
      "fullName": "Facet SOP",
      "category": "SOP",
      "description": "The Facet SOP lets you control the smoothness of faceting of a given object. It also lets you consolidate points or surface normals.\n\nThe Facet SOP, like Divide SOP, works as a pipeline to change geometry in stages. For this reason, Compute Normals appears twice. For example, you can compute surface normals before making vertices (the points of each polygon) unique, which gives you the unusual result of smooth shading and unique point, as the normals get computed while the points are still shared.\n\nfacetSOP_Class\n\nExtra Information for the Facet SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "unit",
          "label": "Unit",
          "description": "Unit parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "prenml",
          "label": "Prenml",
          "description": "Prenml parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "unique",
          "label": "Unique",
          "description": "Unique parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "cons",
          "label": "Cons",
          "description": "Cons parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "No Consolidate",
              "value": "none",
              "description": "No consolidation."
            }
          ],
          "section": "Page"
        },
        {
          "name": "dist",
          "label": "Dist",
          "description": "Dist parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "inline",
          "label": "Inline",
          "description": "Inline parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "inlinedist",
          "label": "Inlinedist",
          "description": "Inlinedist parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "orientpolys",
          "label": "Orientpolys",
          "description": "Orientpolys parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "cusp",
          "label": "Cusp",
          "description": "Cusp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "angle",
          "label": "Angle",
          "description": "Angle parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "remove",
          "label": "Remove",
          "description": "Remove parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "postnml",
          "label": "Postnml",
          "description": "Postnml parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "orientpolys",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Modify",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Facet_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.727Z",
      "parameterCount": 13
    },
    {
      "name": "File In",
      "fullName": "File In SOP",
      "category": "SOP",
      "description": "The File In SOP allows you to read a geometry file that may have been previously created in the Model Editor, output geometry from a SOP, or generated from other software such as Houdini. The geometry file can be read in from disk or from the web. Use http:// when specifying a URL.\n\nfileinSOP_Class\n\nExtra Information for the File In SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "file",
          "label": "File",
          "description": "File parameter",
          "type": "File",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "flipfacing",
          "label": "Flipfacing",
          "description": "Flipfacing parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "normals",
          "label": "Normals",
          "description": "Normals parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "refresh",
          "label": "Refresh",
          "description": "Refresh parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "refreshpulse",
          "label": "Refreshpulse",
          "description": "Refreshpulse parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "refreshpulse",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Import/Export",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/File_In_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.718Z",
      "parameterCount": 5
    },
    {
      "name": "Fillet",
      "fullName": "Fillet SOP",
      "category": "SOP",
      "description": "The Fillet SOP is used to create smooth bridging geometry between two curves / polygons or two surfaces / meshes.\n\nFilleting creates a new primitive between each input pair and never affects the original shapes. This is in contrast to the Join and Stitch SOPs. The Join SOP converts and possibly changes the connected ends of primitives, and stitching changes the original shapes but does not change the number of resulting primitives.\n\nPlease refer to the Align SOP for a discussion of \"left\" and \"right\" primitives as well as the option of an auxiliary input.\n\nNote: Trim curves are not taken into account by a fillet. To do this, use the Join SOP.\n\nfilletSOP_Class\n\nExtra Information for the Fillet SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "fillet",
          "label": "Fillet",
          "description": "Fillet parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Freeform",
              "value": "freeform",
              "description": "Allows full specifications of the fillet."
            },
            {
              "label": "Convex",
              "value": "convex",
              "description": "May negate scale values to ensure convex fillets."
            },
            {
              "label": "Circular",
              "value": "circular",
              "description": "Attempts to build a fillet as close to a radial arc as the shape and orientation of the inputs permit. You do not need to specify a radius - it is automatically determined to ensure a smooth connection between the inputs. As the two inputs come into proximity of each other, the fillet radius decreases. The tangent scales are ignored (as in the Bridge SOP); only the sign of the tangent is taken into account in order to save you from needing to flip the normals of either input."
            },
            {
              "label": "Input Geometry Type",
              "value": "input",
              "description": "Builds a fillet of the matching type between pairs of primitives. If the pair of primitives are different types, then the most general type is used (i.e. NURBS over Bzier, Bzier over polygons)."
            },
            {
              "label": "Polygon",
              "value": "polygon",
              "description": "Builds a polygonal fillet between pairs of primitives."
            },
            {
              "label": "NURBS",
              "value": "nurbs",
              "description": "Builds a NURBS fillet between pairs of primitives at the given order."
            },
            {
              "label": "Bezier",
              "value": "bezier",
              "description": "Builds a Bzier fillet between pairs of primitives at the given order."
            }
          ],
          "section": "Page"
        },
        {
          "name": "inc",
          "label": "Inc",
          "description": "Inc parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "loop",
          "label": "Loop",
          "description": "Loop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "dir",
          "label": "Dir",
          "description": "Dir parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "fillettype",
          "label": "Fillettype",
          "description": "Fillettype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "primtype",
          "label": "Primtype",
          "description": "Primtype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "order",
          "label": "Order",
          "description": "Order parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Circular",
              "value": "circular",
              "description": "Attempts to build a fillet as close to a radial arc as the shape and orientation of the inputs permit. You do not need to specify a radius - it is automatically determined to ensure a smooth connection between the inputs. As the two inputs come into proximity of each other, the fillet radius decreases. The tangent scales are ignored (as in the Bridge SOP); only the sign of the tangent is taken into account in order to save you from needing to flip the normals of either input."
            },
            {
              "label": "NURBS",
              "value": "nurbs",
              "description": "Builds a NURBS fillet between pairs of primitives at the given order."
            },
            {
              "label": "Bezier",
              "value": "bezier",
              "description": "Builds a Bzier fillet between pairs of primitives at the given order."
            }
          ],
          "section": "Page"
        },
        {
          "name": "leftuv",
          "label": "Leftuv",
          "description": "Leftuv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "rightuv",
          "label": "Rightuv",
          "description": "Rightuv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "lrwidth",
          "label": "Lrwidth",
          "description": "Lrwidth parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "lrscale",
          "label": "Lrscale",
          "description": "Lrscale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "lroffset",
          "label": "Lroffset",
          "description": "Lroffset parameter",
          "type": "XY",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "seamless",
          "label": "Seamless",
          "description": "Seamless parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "cut",
          "label": "Cut",
          "description": "Cut parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note: Trim curves are not taken into account by a fillet. To do this, use the Join SOP."
      ],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Fillet_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.737Z",
      "parameterCount": 15
    },
    {
      "name": "Fit",
      "fullName": "Fit SOP",
      "category": "SOP",
      "description": "The Fit SOP fits a Spline curve to a sequence of points or a Spline surface to an m X n mesh of points.\n\nAny type of face or surface represents a valid input. The Fit SOP looks only at the control vertices (CVs) of the primitives, treating the CVs as data points to run the fit through. For example, if a cubic NURBS surface and a mesh have the same number of rows and columns and identical points, they will yield an identical fit because the Spline bases of the input NURBS surface are ignored.\n\nThe Fit SOP generates two types of outputs: primitives that roughly follow the path of the data points without necessarily going through the data points; and primitives that touch all the data points. The first type, known as \"approximation\", is used primarily to extract a lean, smooth shape from a heavy data set, lending itself well to data reduction. The second type, known as \"interpolation\", often serves as a smoothing tool for paths that must go through specified target positions.\n\nfitSOP_Class\n\nThis is the main page of the SOP. Its purpose is to specify the type of fitting and the characteristics of the output primitive.\n\nApproximation fitting is used primarily to generate a lean, smooth shape from a dense data set. The result is a primitive that approximates the positions and attributes of the data points but does not necessarily touch these points. The only points the fitted curve or surface goes through are the end-points of the data set. If the fitted primitive is required to go through all the points, fitting by interpolation is the answer.\n\nThe approximation fit is capable of producing very reasonable shapes with far fewer control vertices than the number of data points. Although the result is unlikely to match the original shape identically, it can come very close to it, depending on the parameters it is set to. For this reason, approximation fitting is often used as a data reduction tool and performs best when the size of the data set is large.\n\nThe fitted primitives are generated open or wrapped based on the \"open\" property of the inputs. For best results, the input primitives should be open.\n\nInterpolation fitting is used primarily to generate a shape that goes through (i.e. interpolates) a complete set of data points and their attributes. As opposed to approximation fitting, interpolation thrives on small data sets. Moreover, unlike the approximation method, this one does not produce a leaner structure than the input it fits. In certain cases it even generates a higher CV count than its input. For this reason, the use of interpolation fitting should be limited to those cases where point interpolation is paramount, such as building precise animation paths.\n\nExtra Information for the Fit SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "method",
          "label": "Method",
          "description": "Method parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Local (Curves Only)",
              "value": "local",
              "description": "Local interpolation takes a more geometric approach, building the curve or surface one span at a time, using only local data at each step. The local method generates more CVs than the number of data points it is given, but it usually yields a tighter fit than the global method. The local approach is also less computationally expensive than the global one, and handles cusps and local perturbations better. Local interpolation is available only for curves."
            }
          ],
          "section": "Fit Page"
        },
        {
          "name": "type",
          "label": "Type",
          "description": "Type parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Rows and Columns",
              "value": "rowcol",
              "description": "Both Rows and Columns. Looks like Quads in wire frame display, but all polygons are open (if the primitive type is polygon)."
            }
          ],
          "section": "Fit Page"
        },
        {
          "name": "surftype",
          "label": "Surftype",
          "description": "Surftype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Fit Page"
        },
        {
          "name": "orderu",
          "label": "Orderu",
          "description": "Orderu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Fit Page"
        },
        {
          "name": "orderv",
          "label": "Orderv",
          "description": "Orderv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Fit Page"
        },
        {
          "name": "tol",
          "label": "Tol",
          "description": "Tol parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Approximation Page"
        },
        {
          "name": "smooth",
          "label": "Smooth",
          "description": "Smooth parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Approximation Page"
        },
        {
          "name": "multipleu",
          "label": "Multipleu",
          "description": "Multipleu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Approximation Page"
        },
        {
          "name": "multiplev",
          "label": "Multiplev",
          "description": "Multiplev parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Approximation Page"
        },
        {
          "name": "scope",
          "label": "Scope",
          "description": "Scope parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Interpolation Page"
        },
        {
          "name": "dataparmu",
          "label": "Dataparmu",
          "description": "Dataparmu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Interpolation Page"
        },
        {
          "name": "dataparmv",
          "label": "Dataparmv",
          "description": "Dataparmv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Interpolation Page"
        },
        {
          "name": "closeu",
          "label": "Closeu",
          "description": "Closeu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Interpolation Page"
        },
        {
          "name": "closev",
          "label": "Closev",
          "description": "Closev parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Interpolation Page"
        },
        {
          "name": "corners",
          "label": "Corners",
          "description": "Corners parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Interpolation Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "alttriangles",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Fit_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.768Z",
      "parameterCount": 16
    },
    {
      "name": "Font",
      "fullName": "Font SOP",
      "category": "SOP",
      "description": "Note: Font SOP deprecated build 2019.14650, use Text SOP.\n\nThe Font SOP allows you to create text in your model from Adobe Type 1 Postscript Fonts.\n\nTo install fonts, copy the font files to the $TFS/touch/fonts directory of your installation path. They will be ready to be used in the Font SOP after restarting TouchDesigner.\n\nfontSOP_Class\n\nTouchDesigner Build: Latest\\nwikieditorwikieditor2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "type",
          "label": "Type",
          "description": "Type parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "file",
          "label": "File",
          "description": "File parameter",
          "type": "File",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "text",
          "label": "Text",
          "description": "Text parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "hcenter",
          "label": "Hcenter",
          "description": "Hcenter parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "vcenter",
          "label": "Vcenter",
          "description": "Vcenter parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            },
            {
              "label": "Off",
              "value": "off",
              "description": "No uv coordinates added."
            },
            {
              "label": "Orthographic",
              "value": "ortho",
              "description": "Orthographic uv coordinates added."
            }
          ],
          "section": "Page"
        },
        {
          "name": "s",
          "label": "S",
          "description": "S parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            },
            {
              "label": "Off",
              "value": "off",
              "description": "No uv coordinates added."
            },
            {
              "label": "Orthographic",
              "value": "ortho",
              "description": "Orthographic uv coordinates added."
            }
          ],
          "section": "Page"
        },
        {
          "name": "kern",
          "label": "Kern",
          "description": "Kern parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "italic",
          "label": "Italic",
          "description": "Italic parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "lod",
          "label": "Lod",
          "description": "Lod parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "hole",
          "label": "Hole",
          "description": "Hole parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "texture",
          "label": "Texture",
          "description": "Texture parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note: Font SOP deprecated build 2019.14650, use Text SOP.",
        "Note: Due to an Open GL bug, holes in Bzier fonts may shade incorrectly."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "$TFS/touch/fonts",
          "language": "python"
        },
        {
          "code": "me.time.frame",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "op('null1')['chan1']",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "'hello world'[int(me.time.frame)%11]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "op('font1').par.text = 'hello world'",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Font_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.786Z",
      "parameterCount": 12
    },
    {
      "name": "Force",
      "fullName": "Force SOP",
      "category": "SOP",
      "description": "The Force SOP adds force attributes to the input metaball field that is used by either Particle SOP or Spring SOP as attractor or repulsion force fields. In general, force values greater than 0 cause points to be attracted, less than 0 cause points to be repelled.\n\nforceSOP_Class\n\nTo view the metaball field of influence, turn on the hulls display of the input metaball/s object/s. Both the Particle SOP and Spring SOP will display these hulls as guide geometry.\n\nAdjust the weights of the metaball inputs to increase or decrease the field effect within the metaball field of influence.\n\nIn general, it is a good idea to try and keep the scale of forces and force fields to a smaller rather than a larger scale. This tends to make particle movement and attraction more manageable and realistic.\n\nExtra Information for the Force SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "doradial",
          "label": "Doradial",
          "description": "Doradial parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "radial",
          "label": "Radial",
          "description": "Radial parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "doaxis",
          "label": "Doaxis",
          "description": "Doaxis parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "dir",
          "label": "Dir",
          "description": "Dir parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "axial",
          "label": "Axial",
          "description": "Axial parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "vortex",
          "label": "Vortex",
          "description": "Vortex parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "spiral",
          "label": "Spiral",
          "description": "Spiral parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Force_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.832Z",
      "parameterCount": 7
    },
    {
      "name": "Fractal",
      "fullName": "Fractal SOP",
      "category": "SOP",
      "description": "The Fractal SOP allows you created jagged mountain-like divisions of the input geometry. It will create random-looking deviations and sub-divisions along either a specified normal vector (the Direction xyz fields) or the vertex normals of the input geometry. This is great for the creation of terrains and landscapes.\n\nfractalSOP_Class\n\nExtra Information for the Fractal SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "divs",
          "label": "Divs",
          "description": "Divs parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "smooth",
          "label": "Smooth",
          "description": "Smooth parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "scale",
          "label": "Scale",
          "description": "Scale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "seed",
          "label": "Seed",
          "description": "Seed parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "fixed",
          "label": "Fixed",
          "description": "Fixed parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "vtxnms",
          "label": "Vtxnms",
          "description": "Vtxnms parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "dir",
          "label": "Dir",
          "description": "Dir parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Fractal_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.850Z",
      "parameterCount": 8
    },
    {
      "name": "Grid",
      "fullName": "Grid SOP",
      "category": "SOP",
      "description": "The Grid SOP allows you to create grids and rectangles using polygons, a mesh, Bzier and NURBS surfaces, or multiple lines using open polygons.\n\ngridSOP_Class\n\nExtra Information for the Grid SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "type",
          "label": "Type",
          "description": "Type parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Rows and Columns",
              "value": "rowcol",
              "description": "Both Rows and Columns. Looks like Quads in wireframe display, but all polygons are open (if the primitive type is polygon). Compare them in the Model Editor."
            }
          ],
          "section": "Page"
        },
        {
          "name": "surftype",
          "label": "Surftype",
          "description": "Surftype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "orient",
          "label": "Orient",
          "description": "Orient parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "modifybounds",
          "label": "Modifybounds",
          "description": "Modifybounds parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "size",
          "label": "Size",
          "description": "Size parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            },
            {
              "label": "Rows",
              "value": "rows",
              "description": "Creates horizontal lines."
            },
            {
              "label": "Columns",
              "value": "cols",
              "description": "Creates vertical lines."
            },
            {
              "label": "Rows and Columns",
              "value": "rowcol",
              "description": "Both Rows and Columns. Looks like Quads in wireframe display, but all polygons are open (if the primitive type is polygon). Compare them in the Model Editor."
            },
            {
              "label": "Triangles",
              "value": "triangles",
              "description": "Build the grid with Triangles."
            },
            {
              "label": "Quadrilaterals",
              "value": "quads",
              "description": "Generates sides composed of quadrilaterals (default)."
            },
            {
              "label": "Alternating Triangles",
              "value": "alttriangles",
              "description": "Generates triangles that are opposed; similar to the Triangles option."
            },
            {
              "label": "Off",
              "value": "off",
              "description": "No uv coordinates added."
            }
          ],
          "section": "Page"
        },
        {
          "name": "reverseanchors",
          "label": "Reverseanchors",
          "description": "Reverseanchors parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "anchoru",
          "label": "Anchoru",
          "description": "Anchoru parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "anchorv",
          "label": "Anchorv",
          "description": "Anchorv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "rows",
          "label": "Rows",
          "description": "Creates horizontal lines.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Rows",
              "value": "rows",
              "description": "Creates horizontal lines."
            },
            {
              "label": "Rows and Columns",
              "value": "rowcol",
              "description": "Both Rows and Columns. Looks like Quads in wireframe display, but all polygons are open (if the primitive type is polygon). Compare them in the Model Editor."
            }
          ],
          "section": "Page"
        },
        {
          "name": "cols",
          "label": "Cols",
          "description": "Creates vertical lines.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Columns",
              "value": "cols",
              "description": "Creates vertical lines."
            }
          ],
          "section": "Page"
        },
        {
          "name": "orderu",
          "label": "Orderu",
          "description": "Orderu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "orderv",
          "label": "Orderv",
          "description": "Orderv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "interpu",
          "label": "Interpu",
          "description": "Interpu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "interpv",
          "label": "Interpv",
          "description": "Interpv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "texture",
          "label": "Texture",
          "description": "Texture parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "normals",
          "label": "Normals",
          "description": "Normals parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "alttriangles",
          "language": "python"
        },
        {
          "code": "modifybounds",
          "language": "python"
        },
        {
          "code": "reverseanchors",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Primitives",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Grid_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.862Z",
      "parameterCount": 17
    },
    {
      "name": "Group",
      "fullName": "Group SOP",
      "category": "SOP",
      "description": "The Group SOP generates groups of points or primitives according to various criteria and allows you to act upon these groups. Elements can occur in more than one group. Groups are used in many parts of the SOP Editor to specify which portion(s) of input geometry you wish a SOP to act upon.\n\nYou can also create ordered groups. To do so, check the Ordered button.\n\ngroupSOP_Class\n\nThis page of parameters lets you modify the The number of primitives or points in one of the input groups by combining groups through different operations.\n\nThis folder allows you to edit existing groups.\n\nExtra Information for the Group SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditor2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "crname",
          "label": "Crname",
          "description": "Crname parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Group Page"
        },
        {
          "name": "entity",
          "label": "Entity",
          "description": "Entity parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Group Page"
        },
        {
          "name": "geotype",
          "label": "Geotype",
          "description": "Geotype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Group Page"
        },
        {
          "name": "usenumber",
          "label": "Usenumber",
          "description": "Usenumber parameter",
          "type": "Int",
          "default": "",
          "range": null,
          "options": null,
          "section": "Create Page"
        },
        {
          "name": "ordered",
          "label": "Ordered",
          "description": "Ordered parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Create Page"
        },
        {
          "name": "groupop",
          "label": "Groupop",
          "description": "Groupop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Create Page"
        },
        {
          "name": "pattern",
          "label": "Pattern",
          "description": "Pattern parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Group by Pattern",
              "value": "grppattern",
              "description": "Select a pattern in the Pattern field below."
            }
          ],
          "section": "Create Page"
        },
        {
          "name": "transfer",
          "label": "Transfer",
          "description": "Transfer parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Create Page"
        },
        {
          "name": "range",
          "label": "Range",
          "description": "Range parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Group by Range",
              "value": "grprange",
              "description": "Select a Range using the Start/End and Select_of_ fields below."
            },
            {
              "label": "Group by Expression",
              "value": "grpexpression",
              "description": "Select a range using the Filter Expression field below."
            }
          ],
          "section": "Create Page"
        },
        {
          "name": "select",
          "label": "Select",
          "description": "Select parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "All Types",
              "value": "all",
              "description": "All geometry will be selected."
            },
            {
              "label": "Group by Pattern",
              "value": "grppattern",
              "description": "Select a pattern in the Pattern field below."
            },
            {
              "label": "Group by Range",
              "value": "grprange",
              "description": "Select a Range using the Start/End and Select_of_ fields below."
            },
            {
              "label": "Group by Expression",
              "value": "grpexpression",
              "description": "Select a range using the Filter Expression field below."
            },
            {
              "label": "Bounding Box",
              "value": "usebbox",
              "description": "Entities contained within the box are selected."
            },
            {
              "label": "Bounding Sphere",
              "value": "usebsphere",
              "description": "Entities contained within the sphere are selected."
            },
            {
              "label": "Bounding Object (points only)",
              "value": "usebobject",
              "description": "Points contained within the Object are selected. Make sure the object consists of well formed polygons. If using an irregular mesh, convert to polygons with a Convert SOP, then use a Divide SOP to convex sides to 3."
            }
          ],
          "section": "Create Page"
        },
        {
          "name": "filter",
          "label": "Filter",
          "description": "Filter parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Group by Expression",
              "value": "grpexpression",
              "description": "Select a range using the Filter Expression field below."
            }
          ],
          "section": "Create Page"
        },
        {
          "name": "usebounds",
          "label": "Usebounds",
          "description": "Usebounds parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Create Page"
        },
        {
          "name": "boundtype",
          "label": "Boundtype",
          "description": "Boundtype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Create Page"
        },
        {
          "name": "size",
          "label": "Size",
          "description": "Size parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Create Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Group Page"
            },
            {
              "label": "All Types",
              "value": "all",
              "description": "All geometry will be selected."
            },
            {
              "label": "Group by Pattern",
              "value": "grppattern",
              "description": "Select a pattern in the Pattern field below."
            },
            {
              "label": "Group by Range",
              "value": "grprange",
              "description": "Select a Range using the Start/End and Select_of_ fields below."
            },
            {
              "label": "Group by Expression",
              "value": "grpexpression",
              "description": "Select a range using the Filter Expression field below."
            },
            {
              "label": "Bounding Box",
              "value": "usebbox",
              "description": "Entities contained within the box are selected."
            },
            {
              "label": "Bounding Sphere",
              "value": "usebsphere",
              "description": "Entities contained within the sphere are selected."
            },
            {
              "label": "Bounding Object (points only)",
              "value": "usebobject",
              "description": "Points contained within the Object are selected. Make sure the object consists of well formed polygons. If using an irregular mesh, convert to polygons with a Convert SOP, then use a Divide SOP to convex sides to 3."
            },
            {
              "label": "None",
              "value": "none",
              "description": "No operation is performed between the groups."
            }
          ],
          "section": "Create Page"
        },
        {
          "name": "usenormal",
          "label": "Usenormal",
          "description": "Usenormal parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Create Page"
        },
        {
          "name": "dir",
          "label": "Dir",
          "description": "Dir parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Create Page"
        },
        {
          "name": "angle",
          "label": "Angle",
          "description": "Angle parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Create Page"
        },
        {
          "name": "camera",
          "label": "Camera",
          "description": "Camera parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Create Page"
        },
        {
          "name": "useedges",
          "label": "Useedges",
          "description": "Useedges parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Create Page"
        },
        {
          "name": "doangle",
          "label": "Doangle",
          "description": "Doangle parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Create Page"
        },
        {
          "name": "edgeangle",
          "label": "Edgeangle",
          "description": "Edgeangle parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Create Page"
        },
        {
          "name": "dodepth",
          "label": "Dodepth",
          "description": "Dodepth parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Create Page"
        },
        {
          "name": "edgestep",
          "label": "Edgestep",
          "description": "Edgestep parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Create Page"
        },
        {
          "name": "point",
          "label": "Point",
          "description": "Point parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Bounding Object (points only)",
              "value": "usebobject",
              "description": "Points contained within the Object are selected. Make sure the object consists of well formed polygons. If using an irregular mesh, convert to polygons with a Convert SOP, then use a Divide SOP to convex sides to 3."
            }
          ],
          "section": "Create Page"
        },
        {
          "name": "unshared",
          "label": "Unshared",
          "description": "Unshared parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Create Page"
        },
        {
          "name": "boundarygroups",
          "label": "Boundarygroups",
          "description": "Boundarygroups parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Create Page"
        },
        {
          "name": "grpequal",
          "label": "Grpequal",
          "description": "Grpequal parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Combine Page"
        },
        {
          "name": "not1",
          "label": "Not1",
          "description": "Not1 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Combine Page"
        },
        {
          "name": "grp1",
          "label": "Grp1",
          "description": "Grp1 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Combine Page"
        },
        {
          "name": "op1",
          "label": "Op1",
          "description": "Op1 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Combine Page"
        },
        {
          "name": "not2",
          "label": "Not2",
          "description": "Not2 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Combine Page"
        },
        {
          "name": "grp2",
          "label": "Grp2",
          "description": "Grp2 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Combine Page"
        },
        {
          "name": "op2",
          "label": "Op2",
          "description": "Op2 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Combine Page"
        },
        {
          "name": "not3",
          "label": "Not3",
          "description": "Not3 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Combine Page"
        },
        {
          "name": "grp3",
          "label": "Grp3",
          "description": "Grp3 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Combine Page"
        },
        {
          "name": "op3",
          "label": "Op3",
          "description": "Op3 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Combine Page"
        },
        {
          "name": "not4",
          "label": "Not4",
          "description": "Not4 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Combine Page"
        },
        {
          "name": "grp4",
          "label": "Grp4",
          "description": "Grp4 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Combine Page"
        },
        {
          "name": "cnvtype",
          "label": "Cnvtype",
          "description": "Cnvtype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Edit Page"
        },
        {
          "name": "convertg",
          "label": "Convertg",
          "description": "Convertg parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Edit Page"
        },
        {
          "name": "cnvtname",
          "label": "Cnvtname",
          "description": "Cnvtname parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Edit Page"
        },
        {
          "name": "preserve",
          "label": "Preserve",
          "description": "Preserve parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Edit Page"
        },
        {
          "name": "oldname",
          "label": "Oldname",
          "description": "Oldname parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Edit Page"
        },
        {
          "name": "newname",
          "label": "Newname",
          "description": "Newname parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Edit Page"
        },
        {
          "name": "destroyname",
          "label": "Destroyname",
          "description": "Destroyname parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Edit Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note: Point and primitive selections can be dumped directly into Group fields without use of the Group SOP. Do this by selecting the points or primitives in the Viewport with the Select state. Then the pop-up N menu beside the Group field of the SOP you want to cook should display the selection in the input SOP (e.g. \"grid1's Primitive Selection\"). Ranges are automatically compacted."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "grpexpression",
          "language": "python"
        },
        {
          "code": "0.4 2 4 2.5 3.7",
          "language": "python"
        },
        {
          "code": "1-23 40 67-100",
          "language": "python"
        },
        {
          "code": "boundarygroups",
          "language": "python"
        },
        {
          "code": "destroyname",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Group_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.881Z",
      "parameterCount": 46
    },
    {
      "name": "Hole",
      "fullName": "Hole SOP",
      "category": "SOP",
      "description": "The Hole SOP is for making holes where faces are enclosed, even if they are not in the same plane. It can also remove existing holes from the input geometry.\n\nThe holes are made by searching for faces which are enclosed by other faces and creating bridges to the interior faces. It offers more flexibility than either the Extrude SOP or Divide SOP's hole-making capabilities because it can deal with interior faces which are not exactly in the same orientation as the exterior ones. It can also remove existing bridges that it finds in the input geometry if needed.\n\nNote: This SOP works with Polygonal and Bezier geometry types only. NURBS surfaces will be converted internally to Beziers.\n\nholeSOP_Class\n\nExtra Information for the Hole SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "unbridge",
          "label": "Unbridge",
          "description": "Unbridge parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "dist",
          "label": "Dist",
          "description": "Dist parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "angle",
          "label": "Angle",
          "description": "Angle parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "snap",
          "label": "Snap",
          "description": "Snap parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note: This SOP works with Polygonal and Bezier geometry types only. NURBS surfaces will be converted internally to Beziers."
      ],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Hole_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.894Z",
      "parameterCount": 5
    },
    {
      "name": "Import Select",
      "fullName": "Import Select SOP",
      "category": "SOP",
      "description": "The Import Select SOP is used to import and load the geometry types primitives defined in USD COMP and FBX COMP. It essentially loads any geometry type that USD COMP or FBX COMP can support such as a Mesh, Points, NURBS Curves or Patches, Basis Curves. Each geometry represents one primitive from the loading file or it can be a set of primitives merged together for better performance.\n\nIn USD COMP and FBX COMP if the Import Select SOP renders merged geometries, an Info DAT operator is created next to this SOP which represents the original paths of primitives within/from importing file, which can be useful for user to checkout what geometry the current SOP is made of.\nImport Select SOP can have its own animation controls within the Playback page or use the settings from its parent COMP.\n\nThe imported geometry can be loaded directly from GPU or CPU, depending on whether the Straight To GPU toggle is set to ON or not at the parent COMP node.\n\nimportselectSOP_Class\n\nExtra Information for the Import Select SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002019.146502018.28070",
      "parameters": [
        {
          "name": "parent",
          "label": "Parent",
          "description": "Parent parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "General Page"
        },
        {
          "name": "geometry",
          "label": "Geometry",
          "description": "Geometry parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "General Page"
        },
        {
          "name": "reload",
          "label": "Reload",
          "description": "Reload parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "General Page"
        },
        {
          "name": "comptang",
          "label": "Comptang",
          "description": "Comptang parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "General Page"
        },
        {
          "name": "useparentanim",
          "label": "Useparentanim",
          "description": "Useparentanim parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Playback Page"
        },
        {
          "name": "shiftanimationstart",
          "label": "Shiftanimationstart",
          "description": "Shiftanimationstart parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Playback Page"
        },
        {
          "name": "sampleratemode",
          "label": "Sampleratemode",
          "description": "Sampleratemode parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Playback Page"
        },
        {
          "name": "samplerate",
          "label": "Samplerate",
          "description": "Samplerate parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Playback Page"
        },
        {
          "name": "playmode",
          "label": "Playmode",
          "description": "Playmode parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Playback Page"
        },
        {
          "name": "initialize",
          "label": "Initialize",
          "description": "Initialize parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Playback Page"
        },
        {
          "name": "start",
          "label": "Start",
          "description": "Start parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Playback Page"
        },
        {
          "name": "cue",
          "label": "Cue",
          "description": "Cue parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Locked to Timeline",
              "value": "lockedtotimeline",
              "description": "This mode locks the animation position to the timeline. The parameters Play, Speed, Index, Cue and Cue Point, are disabled in this mode since the timeline is directly tied to animation position."
            },
            {
              "label": "Sequential",
              "value": "sequential",
              "description": "This mode continually plays regardless of the timeline position (the Index parameter is disabled). Play, Speed, Cue, and Cue Point parameters below are enabled to allow some control. The default is set to this value."
            }
          ],
          "section": "Playback Page"
        },
        {
          "name": "cuepulse",
          "label": "Cuepulse",
          "description": "Cuepulse parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Playback Page"
        },
        {
          "name": "cuepoint",
          "label": "Cuepoint",
          "description": "Cuepoint parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Playback Page"
        },
        {
          "name": "cuepointunit",
          "label": "Cuepointunit",
          "description": "Cuepointunit parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Playback Page"
        },
        {
          "name": "play",
          "label": "Play",
          "description": "Play parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Locked to Timeline",
              "value": "lockedtotimeline",
              "description": "This mode locks the animation position to the timeline. The parameters Play, Speed, Index, Cue and Cue Point, are disabled in this mode since the timeline is directly tied to animation position."
            },
            {
              "label": "Sequential",
              "value": "sequential",
              "description": "This mode continually plays regardless of the timeline position (the Index parameter is disabled). Play, Speed, Cue, and Cue Point parameters below are enabled to allow some control. The default is set to this value."
            }
          ],
          "section": "Playback Page"
        },
        {
          "name": "index",
          "label": "Index",
          "description": "Index parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Locked to Timeline",
              "value": "lockedtotimeline",
              "description": "This mode locks the animation position to the timeline. The parameters Play, Speed, Index, Cue and Cue Point, are disabled in this mode since the timeline is directly tied to animation position."
            },
            {
              "label": "Specify Index",
              "value": "specifyindex",
              "description": "This mode allows the user to specify a particular index (position) in the animation using the Index parameter below. Use this mode for random access to any location in the animation."
            },
            {
              "label": "Sequential",
              "value": "sequential",
              "description": "This mode continually plays regardless of the timeline position (the Index parameter is disabled). Play, Speed, Cue, and Cue Point parameters below are enabled to allow some control. The default is set to this value."
            }
          ],
          "section": "Playback Page"
        },
        {
          "name": "indexunit",
          "label": "Indexunit",
          "description": "Indexunit parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Playback Page"
        },
        {
          "name": "speed",
          "label": "Speed",
          "description": "Speed parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Locked to Timeline",
              "value": "lockedtotimeline",
              "description": "This mode locks the animation position to the timeline. The parameters Play, Speed, Index, Cue and Cue Point, are disabled in this mode since the timeline is directly tied to animation position."
            },
            {
              "label": "Sequential",
              "value": "sequential",
              "description": "This mode continually plays regardless of the timeline position (the Index parameter is disabled). Play, Speed, Cue, and Cue Point parameters below are enabled to allow some control. The default is set to this value."
            }
          ],
          "section": "Playback Page"
        },
        {
          "name": "trim",
          "label": "Trim",
          "description": "Trim parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Playback Page"
        },
        {
          "name": "tstart",
          "label": "Tstart",
          "description": "Tstart parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Playback Page"
        },
        {
          "name": "tstartunit",
          "label": "Tstartunit",
          "description": "Tstartunit parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Playback Page"
        },
        {
          "name": "tend",
          "label": "Tend",
          "description": "Tend parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Playback Page"
        },
        {
          "name": "tendunit",
          "label": "Tendunit",
          "description": "Tendunit parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Playback Page"
        },
        {
          "name": "textendleft",
          "label": "Textendleft",
          "description": "Textendleft parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Playback Page"
        },
        {
          "name": "textendright",
          "label": "Textendright",
          "description": "Textendright parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Playback Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "useparentanim",
          "language": "python"
        },
        {
          "code": "shiftanimationstart",
          "language": "python"
        },
        {
          "code": "sampleratemode",
          "language": "python"
        },
        {
          "code": "lockedtotimeline",
          "language": "python"
        },
        {
          "code": "specifyindex",
          "language": "python"
        },
        {
          "code": "cuepointunit",
          "language": "python"
        },
        {
          "code": "textendleft",
          "language": "python"
        },
        {
          "code": "textendright",
          "language": "python"
        },
        {
          "code": "/geo1/circle1",
          "language": "python"
        },
        {
          "code": "project.cookRate",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "The Import Select SOP is used to import and load the geometry types primitives defined in USD COMP and FBX COMP. It essentially loads any geometry type that USD COMP or FBX COMP can support such as a Mesh, Points, NURBS Curves or Patches, Basis Curves. Each geometry represents one primitive from the loading file or it can be a set of primitives merged together for better performance.",
        "The imported geometry can be loaded directly from GPU or CPU, depending on whether the Straight To GPU toggle is set to ON or not at the parent COMP node.",
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "3D scene visualization",
        "Real-time graphics rendering",
        "Multi-pass rendering workflows",
        "Shadow and reflection generation"
      ],
      "url": "https://docs.derivative.ca/Import_Select_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.935Z",
      "parameterCount": 26
    },
    {
      "name": "In",
      "fullName": "In SOP",
      "category": "SOP",
      "description": "The In SOP creates a SOP input in a Component. Component inputs are positioned alphanumerically on the left side of the node.\n\ninSOP_Class\n\nExtra Information for the In SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "label",
          "label": "Label",
          "description": "Label parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Import/Export",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/In_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.001Z",
      "parameterCount": 1
    },
    {
      "name": "Introduction Tos Vid",
      "fullName": "Introduction To SOPs Vid",
      "category": "SOP",
      "description": "",
      "parameters": [],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [],
      "subcategory": "Import/Export",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Introduction_To_SOPs_Vid",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:16.976Z",
      "parameterCount": 0
    },
    {
      "name": "Inverse Curve",
      "fullName": "Inverse Curve SOP",
      "category": "SOP",
      "description": "The Inverse Curve SOP takes data from an Inverse Curve CHOP and builds a curve from it.\n\ninversecurveSOP_Class\n\nExtra Information for the Inverse Curve SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "chop",
          "label": "Chop",
          "description": "Chop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Generate",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Inverse_Curve_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.013Z",
      "parameterCount": 1
    },
    {
      "name": "Iso Surface",
      "fullName": "Iso Surface SOP",
      "category": "SOP",
      "description": "The Iso Surface SOP uses implicit functions to create 3D visualizations of isometric surfaces found in Grade 12 Functions and Relations textbooks.\n\nAn implicit function is defined so that it = 0. For example with:\n\nthe implicit function is:\n\nisosurfaceSOP_Class\n\nThe action of the Iso Surface sop is conceptually simple - it takes a user specified expression in R3 (a mathematical term meaning, \"having three dimensions, each taking a Real value), and creates a surface where the function goes from being positive to being negative. In the case of the default expression ( me.curPos[0] * me.curPos[0] + me.curPos[1] * me.curPos[1] + me.curPos[2] * me.curPos[2] - 1 ), the expression is less than zero within a unit sphere, and greater than zero outside. As the sop cooks, it marches through the bounding volume specified (by default from -1 to +1 in X, Y and Z), and creates geometry where the expression equals zero.\n\nThis may seem like a difficult way to define a sphere, but there's much potential beyond this simple example using the rich array of mathematical functions (see the Expressions section). A simple illustration is with the noise() function. Try inputing the following expression.\n\nExtra Information for the Iso Surface SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditorwikieditorwikieditor2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "func",
          "label": "Func",
          "description": "Func parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "min",
          "label": "Min",
          "description": "Min parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "max",
          "label": "Max",
          "description": "Max parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "divs",
          "label": "Divs",
          "description": "Divs parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "normals",
          "label": "Normals",
          "description": "Normals parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [
        {
          "title": "Example",
          "content": "The action of the Iso Surface sop is conceptually simple - it takes a user specified expression in R3 (a mathematical term meaning, \"having three dimensions, each taking a Real value), and creates a surface where the function goes from being positive to being negative. In the case of the default expression ( me.curPos[0] * me.curPos[0] + me.curPos[1] * me.curPos[1] + me.curPos[2] * me.curPos[2] - 1 ), the expression is less than zero within a unit sphere, and greater than zero outside. As the sop cooks, it marches through the bounding volume specified (by default from -1 to +1 in X, Y and Z), and creates geometry where the expression equals zero.\nThis may seem like a difficult way to define a sphere, but there's much potential beyond this simple example using the rich array of mathematical functions (see the Expressions section). A simple illustration is with the noise() function. Try inputing the following expression."
        }
      ],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "x2 + y2 = r2",
          "language": "python"
        },
        {
          "code": "f(x, y) = x2 + y2 - r2 = 0",
          "language": "python"
        },
        {
          "code": "(me.curPos.x**2) / (4*4) - (me.curPos.y**2) / (3*3) + me.curPos.z",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "(me.curPos.x**2) / 0.1 + (me.curPos.y**2) / 2 + (me.curPos.z**2) / 6 - 1",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.curPos[0] * me.curPos[0] + me.curPos[1] * me.curPos[1] + me.curPos[2] * me.curPos[2] - 1",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "Procedural texture generation",
        "Organic animation and movement",
        "Terrain and landscape creation",
        "Adding natural variation to parameters"
      ],
      "url": "https://docs.derivative.ca/Iso_Surface_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.022Z",
      "parameterCount": 5
    },
    {
      "name": "Join",
      "fullName": "Join SOP",
      "category": "SOP",
      "description": "The Join SOP connects a sequence of faces or surfaces into a single primitive that inherits their attributes. Faces of different types can be joined together, and so can surfaces. Mixed face-surface types are not allowed. The surfaces do not have to have the same number of rows or columns in the side being joined. Spline types of different orders and parameterization are all valid inputs. The Join SOP converts simpler primitives such as polygons into Bziers and NURBS if necessary.\n\nJoining is different from filleting (see Fillet SOP) or stitching (see Stitch SOP) because it takes n primitives and converts them into one after possibly changing the connected ends of the primitives. Filleting creates a new primitive between each input pair and never affects the original shapes. Stitching changes the original shapes but does not change the number of resulting primitives.\n\njoinSOP_Class\n\nExtra Information for the Join SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "blend",
          "label": "Blend",
          "description": "Blend parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "tolerance",
          "label": "Tolerance",
          "description": "Tolerance parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "bias",
          "label": "Bias",
          "description": "Bias parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "knotmult",
          "label": "Knotmult",
          "description": "Knotmult parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "proximity",
          "label": "Proximity",
          "description": "Proximity parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "dir",
          "label": "Dir",
          "description": "Dir parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "joinop",
          "label": "Joinop",
          "description": "Joinop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "inc",
          "label": "Inc",
          "description": "Inc parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "loop",
          "label": "Loop",
          "description": "Loop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "prim",
          "label": "Prim",
          "description": "Prim parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Import/Export",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Join_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.033Z",
      "parameterCount": 11
    },
    {
      "name": "Joint",
      "fullName": "Joint SOP",
      "category": "SOP",
      "description": "The Joint SOP will aid in the creation of circle-based skeletons by creating a series of circles between each pair of input circles. This SOP requires at least a pair of circles in order to work correctly.\n\njointSOP_Class\n\nExtra Information for the Joint SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "divs",
          "label": "Divs",
          "description": "Divs parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "preserve1",
          "label": "Preserve1",
          "description": "Preserve1 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "preserve2",
          "label": "Preserve2",
          "description": "Preserve2 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "orient",
          "label": "Orient",
          "description": "Orient parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "smoothpath",
          "label": "Smoothpath",
          "description": "Smoothpath parameter",
          "type": "File",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "smoothtwist",
          "label": "Smoothtwist",
          "description": "Smoothtwist parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "majoraxes",
          "label": "Majoraxes",
          "description": "Majoraxes parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "mintwist",
          "label": "Mintwist",
          "description": "Mintwist parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "lrscale",
          "label": "Lrscale",
          "description": "Lrscale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "lroffset",
          "label": "Lroffset",
          "description": "Lroffset parameter",
          "type": "XY",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "smoothtwist",
          "language": "python"
        },
        {
          "code": "/geo1/circle1",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Import/Export",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Joint_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.074Z",
      "parameterCount": 11
    },
    {
      "name": "Kinect",
      "fullName": "Kinect SOP",
      "category": "SOP",
      "description": "The Kinect SOP uses the Kinect v1 sensor to scan and create geometry.\n\nkinectSOP_Class\n\nExtra Information for the Kinect SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "hwversion",
          "label": "Hwversion",
          "description": "Hwversion parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "sensor",
          "label": "Sensor",
          "description": "Sensor parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "skeleton",
          "label": "Skeleton",
          "description": "Skeleton parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "neardepthmode",
          "label": "Neardepthmode",
          "description": "Neardepthmode parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "normals",
          "label": "Normals",
          "description": "Normals parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "neardepthmode",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Import/Export",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Kinect_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.122Z",
      "parameterCount": 5
    },
    {
      "name": "Lattice",
      "fullName": "Lattice SOP",
      "category": "SOP",
      "description": "The Lattice SOP allows you to create animated deformations of its input geometry by manipulating grids or a subdivided box that encloses the input source's geometry.\n\nIt is much easier to deform an object by moving a few grids than trying to animate every single point of an object.\n\nThis SOP has very few buttons and looks simple, but it is important to understand how it works. The first input, called Geometry to Deform, is for the geometry you wish to deform. The second input, called Rest Geometry, must be an evenly spaced grid which fully encloses the geometry to deform. The third input, called Deformed Geometry, is a copy of the initial grid that is altered in some way, either by moving parts of it with animation channels, dragging its points in the Model Editor, or by running it through a Spring SOP which distorts it with the forces which simulate the laws of physics. Lattice computes a deformation based on the difference between the Rest Geometry and the Deformed Geometry, and applies it to the input geometry. The output of the SOP is the deformation of the geometry in the input source. If the Deformed Geometry is being animated, the output will also bend, twist and stretch every frame.\n\nlatticeSOP_Class\n\nExtra Information for the Lattice SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Lattice Page"
        },
        {
          "name": "deformtype",
          "label": "Deformtype",
          "description": "Deformtype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Lattice Page"
        },
        {
          "name": "divs",
          "label": "Divs",
          "description": "Divs parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Lattice Page"
        },
        {
          "name": "kernel",
          "label": "Kernel",
          "description": "Kernel parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Lattice Page"
        },
        {
          "name": "radius",
          "label": "Radius",
          "description": "Radius parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Lattice Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  - Geometry to deform.",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  - Rest Geometry.",
          "index": 1
        },
        {
          "type": "SOP",
          "description": "Input 2:  - Deformed Geometry.",
          "index": 2
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Deform",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Lattice_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.141Z",
      "parameterCount": 5
    },
    {
      "name": "Limit",
      "fullName": "Limit SOP",
      "category": "SOP",
      "description": "The Limit SOP creates geometry from samples fed to it by CHOPs. It creates geometry at every point in the sample. Different types of geometry can be created using the Output Type parameter on the Channels Page.\n\nlimitSOP_Class\n\nAllows custom attributes to be added to the geometry created. Use the + button to add additional parameters to add more custom attributes.\n\nExtra Information for the Limit SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditorwikieditor2021.100002020.200002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "chop",
          "label": "Chop",
          "description": "Chop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Channels Page"
        },
        {
          "name": "rord",
          "label": "Rord",
          "description": "Rord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Channels Page"
        },
        {
          "name": "chanx",
          "label": "Chanx",
          "description": "Chanx parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Channels Page"
        },
        {
          "name": "chany",
          "label": "Chany",
          "description": "Chany parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Channels Page"
        },
        {
          "name": "chanz",
          "label": "Chanz",
          "description": "Chanz parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Channels Page"
        },
        {
          "name": "chanrx",
          "label": "Chanrx",
          "description": "Chanrx parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Channels Page"
        },
        {
          "name": "chanry",
          "label": "Chanry",
          "description": "Chanry parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Channels Page"
        },
        {
          "name": "chanrz",
          "label": "Chanrz",
          "description": "Chanrz parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Channels Page"
        },
        {
          "name": "chanrad",
          "label": "Chanrad",
          "description": "Chanrad parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Channels Page"
        },
        {
          "name": "chanradx",
          "label": "Chanradx",
          "description": "Chanradx parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Channels Page"
        },
        {
          "name": "chanrady",
          "label": "Chanrady",
          "description": "Chanrady parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Channels Page"
        },
        {
          "name": "chanradz",
          "label": "Chanradz",
          "description": "Chanradz parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Channels Page"
        },
        {
          "name": "chanalpha",
          "label": "Chanalpha",
          "description": "Chanalpha parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Channels Page"
        },
        {
          "name": "chanr",
          "label": "Chanr",
          "description": "Chanr parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Channels Page"
        },
        {
          "name": "chang",
          "label": "Chang",
          "description": "Chang parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Channels Page"
        },
        {
          "name": "chanb",
          "label": "Chanb",
          "description": "Chanb parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Channels Page"
        },
        {
          "name": "texturew",
          "label": "Texturew",
          "description": "Texturew parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Channels Page"
        },
        {
          "name": "customattr",
          "label": "Customattr",
          "description": "Customattr parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Custom Page"
        },
        {
          "name": "output",
          "label": "Output",
          "description": "Output parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Output Page"
        },
        {
          "name": "divisions",
          "label": "Divisions",
          "description": "Divisions parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Polygon at Each Point",
              "value": "polys",
              "description": "Places a polygon at each sample point. Number of points in polygon defined by Divisions."
            },
            {
              "label": "Poly Sphere at Each Point",
              "value": "polyspheres",
              "description": "Places a polygonal sphere at each sample point. Sphere's frequency defined by Divisions."
            },
            {
              "label": "Tubes",
              "value": "tubes",
              "description": "Creates a tube down the path. Tubes cross-section defined by Divisions."
            },
            {
              "label": "Strips",
              "value": "strips",
              "description": "Creates a strip down the path. Number of points in strip defined by Divisions."
            }
          ],
          "section": "Output Page"
        },
        {
          "name": "rad",
          "label": "Rad",
          "description": "Rad parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Output Page"
        },
        {
          "name": "flipsmooth",
          "label": "Flipsmooth",
          "description": "Flipsmooth parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Output Page"
        },
        {
          "name": "dolimit",
          "label": "Dolimit",
          "description": "Dolimit parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Output Page"
        },
        {
          "name": "xlimit",
          "label": "Xlimit",
          "description": "Xlimit parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Output Page"
        },
        {
          "name": "ylimit",
          "label": "Ylimit",
          "description": "Ylimit parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Output Page"
        },
        {
          "name": "zlimit",
          "label": "Zlimit",
          "description": "Zlimit parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Output Page"
        },
        {
          "name": "texture",
          "label": "Texture",
          "description": "Texture parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Output Page"
        },
        {
          "name": "texscale",
          "label": "Texscale",
          "description": "Texscale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Output Page"
        },
        {
          "name": "texoffset",
          "label": "Texoffset",
          "description": "Texoffset parameter",
          "type": "XY",
          "default": "",
          "range": null,
          "options": null,
          "section": "Output Page"
        },
        {
          "name": "orient",
          "label": "Orient",
          "description": "Orient parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Output Page"
        },
        {
          "name": "lookat",
          "label": "Lookat",
          "description": "Lookat parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Output Page"
        },
        {
          "name": "dorotate",
          "label": "Dorotate",
          "description": "Dorotate parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Output Page"
        },
        {
          "name": "rotate",
          "label": "Rotate",
          "description": "Rotate parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "On",
              "value": "on",
              "description": "Add value of Rotate to polys equally."
            },
            {
              "label": "Cumulative",
              "value": "cum",
              "description": "Add value of Rotate to polys cumulatively (ie. increasing with each poly)."
            }
          ],
          "section": "Output Page"
        },
        {
          "name": "normals",
          "label": "Normals",
          "description": "Normals parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Output Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note: If using a Copy SOP, turn on the Use Template Point Attributes option in the Copy SOP's Attributes Page to allow the geometry to inherit the point attributes."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "customattr0name",
          "language": "python"
        },
        {
          "code": "customattr0chan0",
          "language": "python"
        },
        {
          "code": "customattr0chan1",
          "language": "python"
        },
        {
          "code": "customattr0chan2",
          "language": "python"
        },
        {
          "code": "customattr0chan3",
          "language": "python"
        },
        {
          "code": "polyspheres",
          "language": "python"
        },
        {
          "code": "/geo1/circle1",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Limit_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.161Z",
      "parameterCount": 34
    },
    {
      "name": "Line",
      "fullName": "Line SOP",
      "category": "SOP",
      "description": "The Line SOP creates straight lines.\n\nlineSOP_Class\n\nExtra Information for the Line SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "pa",
          "label": "Pa",
          "description": "Pa parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            }
          ],
          "section": "Page"
        },
        {
          "name": "pb",
          "label": "Pb",
          "description": "Pb parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "points",
          "label": "Points",
          "description": "Points parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "texture",
          "label": "Texture",
          "description": "Texture parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Generate",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Line_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.149Z",
      "parameterCount": 4
    },
    {
      "name": "Line Thick",
      "fullName": "Line Thick SOP",
      "category": "SOP",
      "description": "The Line Thick SOP extrudes a surface from a curved line. The line can be of polygon, NURBS, or Bezier geometry type.\n\nlinethickSOP_Class\n\nExtra Information for the Line Thick SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "startwidth",
          "label": "Startwidth",
          "description": "Startwidth parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "endwidth",
          "label": "Endwidth",
          "description": "Endwidth parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "divisions",
          "label": "Divisions",
          "description": "Divisions parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "rows",
          "label": "Rows",
          "description": "Rows parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "domain",
          "label": "Domain",
          "description": "Domain parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "shape",
          "label": "Shape",
          "description": "Shape parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "symmetric",
          "label": "Symmetric",
          "description": "Symmetric parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "startwidth1",
          "language": "python"
        },
        {
          "code": "startwidth2",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Generate",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Line_Thick_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.174Z",
      "parameterCount": 8
    },
    {
      "name": "LOD",
      "fullName": "LOD SOP",
      "category": "SOP",
      "description": "The LOD SOP is unusual in so far as it does not actually alter any geometry. Instead it builds a level of detail cache for the input object. The cache to be drawn is based upon the distance to the camera. Thus, a complicated object will be drawn with a lower level of detail when it is farther away.\n\nThe second input is the Rest Geometry. If provided, this is the geometry wich will be used to do the (expensive) polygon reduction, and only the points of the left input will be used.\n\nlodSOP_Class\n\nExtra Information for the LOD SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "steppercent",
          "label": "Steppercent",
          "description": "Steppercent parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "distance",
          "label": "Distance",
          "description": "Distance parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "minpercent",
          "label": "Minpercent",
          "description": "Minpercent parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "borderweight",
          "label": "Borderweight",
          "description": "Borderweight parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "lengthweight",
          "label": "Lengthweight",
          "description": "Lengthweight parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "triangulate",
          "label": "Triangulate",
          "description": "Triangulate parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "tstrips",
          "label": "Tstrips",
          "description": "Tstrips parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "polysonly",
          "label": "Polysonly",
          "description": "Polysonly parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "steppercent",
          "language": "python"
        },
        {
          "code": "borderweight",
          "language": "python"
        },
        {
          "code": "lengthweight",
          "language": "python"
        },
        {
          "code": "triangulate",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/LOD_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.228Z",
      "parameterCount": 8
    },
    {
      "name": "LSystem",
      "fullName": "LSystem SOP",
      "category": "SOP",
      "description": "The Lsystem SOP implements L-systems (Lindenmayer-systems, named after Aristid Lindenmayer (1925-1989)), allow definition of complex shapes through the use of iteration. They use a mathematical language in which an initial string of characters is evaluated repeatedly, and the results are used to generate geometry. The result of each evaluation becomes the basis for the next iteration of geometry, giving the illusion of growth.\n\nYou begin building an L-system by defining a sequence of rules which are evaluated to produce a new string of characters. Each character of the new string represents one command which affects an imaginary stylus, or \"turtle\". Repeating this process will grow your geometry.\n\nYou can use L-systems to create things such as:\n\nThe file can be read in from disk or from the web. Use http:// when specifying a URL.\n\nThe descriptions located here should be enough to get you started in writing your own L-system rules, however, if you have any serious interests in creating L-systems, you should obtain the book:\n\nwhich is the definitive reference on the subject. It contains a multitude of L-systems examples complete with descriptions of the ideas and theories behind modelling realistic plant growth.\n\nlsystemSOP_Class\n\nThe parameters on this page are active only if Geometry Page > Type has been set to the Tube type.\n\nThe parameters on this page allow you to stamp your leaf geometry (each copy can be different) as opposed to simply copying them. See the example in Example - Stamping L-system Leaves.\n\nYou create the highly structured organic and branching objects using L-systems grammar. An L-system is a process in which a sequence of rules are applied to an initial string of characters to create a new string. To build the geometry, each character of the final string represents one command which affects an imaginary stylus, or \"turtle\".\n\nThe process begins by examining the first character of the premise string. All sixteen rules are searched sequentially until an applicable rule is found. The current character is then replaced with one or more characters as defined by the rule. The remaining characters in the premise string are replaced in a similar fashion. The entire process is repeated once for each generation.\n\nF Move forward (creating geometry)\n\nH Move forward half the length (creating geometry)\n\nG Move forward but don't record a vertex\n\nf Move forward (no geometry created)\n\nh Move forward a half length (no geometry created)\n\nJ K M Copy geometry source J, K or M at the turtle's position  after rescaling and reorienting the geometry.\n\nT Apply tropism vector\n\n+ Turn right\n\n- Turn left (minus sign)\n\n& Pitch up\n\n^ Pitch down\n\n\\ Roll clockwise\n\n/ Roll counter-clockwise\n\n| Turn 180 degrees\n\n* Roll 180 degrees\n\n~ Pitch / Roll / Turn random amount\n\n\" Multiply current length\n\n! Multiply current thickness\n\n; Multiply current angle\n\n_ Divide current length (underscore)\n\n? Divides current width\n\n@ Divide current angle\n\n' Increment color index U (single quote)\n\n# Increment color index V\n\n% Cut off remainder of branch\n\n$ Rotate `up' towards the sun about heading\n\n[ Push turtle state (start a branch)\n\n] Pop turtle state (end a branch)\n\n{ Start a polygon\n\n. Make a polygon vertex\n\n} End a polygon\n\ng Create a new primitive group to which subsequent geometry is added\n\nA Touch L-system rule is specified as:\n\n[lc<] pred [>rc] [:cond]=succ [:prob]\n\nwhere:\n\nThe most basic type of rule is:\n\npred = succ\n\nIn this case, a character is replaced with the characters of succ if, and only if, it matches pred.\n\nFor example:\n\nPremise: ABCRule 1: B=DOG\n\nwill result in ADOGC\n\npred can only specify one letter, but left and right context symbols can be specified. The general syntax is [lc<] pred [>rc] = succ.\n\nFor example:\n\nPremise: ABC Rule 1: A<B=DOG\n\nagain results in ADOGC because B is preceded by A. If the rule were: Z<B=DOG or B>A=DOG the rule would not be applied.\n\nEach symbol can have up to five user-defined variables associated with it which can be referenced or assigned in expressions. Variables in the predecessor are instanced while variables in the successor are assigned.\n\nFor example:\n\nThe rule A(i, j) = A(i+1, j-1), will replace each A with a new A in which the first parameter has been incremented and the second parameter decremented.\n\nNote that the variables in the predecessor can also be referenced by the condition or probability portions of the rule.\n\nFor example:\n\nThe rule A(i):i<5 = A(i+1) A(i+1), will double each A a maximum of five times (assuming a Premise of A(0)).\n\nParameters assigned to geometric symbols (e.g. F, +, or !) are interpreted geometrically.\n\nFor example:\n\nThe rule F(i, j) = F(0.5*i, 2*j), will again replace each F with a new F containing modified parameters. In addition to this, the new F will now be drawn at half the length and twice the width.\n\nNormally turtle symbols use the current length/angle/thickness etc. to determine their effect. By providing a turtle operator with an explicit parameter, it will override the value normally used by the turtle operator.\n\nOverride parameters for F, f, G, h, H take the form of:\n\nThe k and l override parameters allow dynamic resolution of tube segments.\n\nF - Moves forward current length creating geometry.\n\nH - Moves forward half current length creating geometry.\n\nF(i, j) - Moves forward a distance of i, creating geometry of thickness j.\n\nH(i, j) - Move forward half the distance of i, creating geometry of thickness half of j.\n\n+ - Turn by current angle amount.  ~ - Rotate by random angle.\n\n+(i) - Turn by i degrees. ~(i) - Override random angle with value of i.\n\n$(x0,y0,z0) - Points the turtle to location (x0,y0,z0).\n\nGiven the above, the Premise:\n\ngenerates a unit box regardless of the default Step Size or Angle settings.\n\nThe following list describes the geometric interpretation of parameters assigned to certain turtle symbols:\n\nIn The Algorithmic Beauty of Plants, many examples use a technique called Edge Rewriting which involve left and right subscripts. A typical example might look like:\n\nGenerations 10Angle 90Premise F(l)RulesF(l) = F(l)+F(r)+ F(r) = -F(l)-F(r)\n\nHowever, Touch doesn't know what F(l) and F(r) are. In this case, we can modify the rules to use parameter passing. For the F turtle symbol, the first four parameters are length, width, tubesides, and tubesegs, leaving the last parameter user-definable. We can define this last parameter such that 0 is left, and 1 is right:\n\nGenerations 10Angle 90Premise F(1,1,3,3,0)Rules\n\nAfter two generations this produces: Fl+Fr+-Fl-Fr. There should not be any difference between this final string and F+F+-F-F.\n\nAnother approach is to use two new variables, and use a conditional statement on the final step to convert them to F:\n\nVariable b ch(\"generations\")Premise lRules l:t<b=l+r+ r:t<b=-l-r l=F r=FOutput lFF+F+F+F++-F-F+\n\nIn the earlier example, the expressions 0.5*i and 2*j are used. In fact, expressions can be used anywhere a numeric field is expected. Currently the following symbols can be used in expressions:\n\n( ) - brackets for nesting priority\n\n^ + - * / % - arithmetic operators\n\nmin() max() sin() cos() asin() acos() pic() in() - supported functions\n\n== != = < <= > >= - logical operators\n\n& | ! - logical operators: and, or, not\n\nb c d - SOP b, c, d parameters after expansion\n\nx y z - current turtle position\n\ng - age of symbol\n\nt - time (generations) of L-system\n\na - SOP angle parameter\n\nT - SOP tropism (gravity) parameter\n\nThe pre-defined variables above should not be used in the arguments of the predecessor.\n\nFor example: A(a,b) = B(a*2,b*2) is wrong (a is the SOP Angle parameter). a<b (A,B) = b(A+1,B) is right.\n\nThe last statement is correct because a and b are used as symbols and not variable names. A and B are correct because variable names are case sensitive.\n\nEach rule may have an optional condition specified. The syntax is:\n\n[lc<] pred [>rc]:cond = succ\n\nFor example:\n\nThe Rule1 A:y>2=J includes source J at all A's above the height of 2.\n\nEach rule can specify the probability that it is used (provided it is otherwise applicable). The syntax is:\n\n[lc<] pred [>rc]:cond=succ=prob\n\nFor example:\n\nRule1 A=B:0.5Rule2 A=C:0.5\n\nwill replace A with either B or  C with equal probability.\n\nThere is a group operator 'g' which lumps all geometry currently being built into group g.\n\nFor example: g[F] lumps geometry from F into a group called lsys0. You can set the lsys prefix from the Funcs page.\n\ng takes an optional parameter as well.\n\nFor example: g(1)[F] lumps geometry from f into a group called lsys1. If no parameter is given, the default index is bumped up appropriately.\n\nThe current group container is pushed/popped with the turtle state so you can do things like:\n\ngF [ FF] F - The geometry from all four F's are put into group 0, (pushing the turtle adopts the parent's group).\n\nTo exclude the middle FF from the parent's group type: gF [ g(-1)FF ] F\n\nTo create an L-system which goes forward X percent less for each iteration, you need to start your Premise with a value, and then within a rule, multiply that value by the percentage you want to remain:\n\nPremise A(1)Rule A(i) = F(i)A(i*0.5)\n\nThis way \"i\" is scaled before A is again evaluated. The important part is the Premise. You need to start with a value to be able to scale that value.\n\nStep 1) Place a Circle SOP, and set the Number of Divisions to: param(\"lsys\", 3)\n\nIt then displays a triangle (3 is default value).\n\nStep 2) Pipe this into the J input of a L-System SOP. If the L-system Premise is:\n\nJ AJ(,,4) AJ(,,5) A\n\nThis way, you can customize each leaf before it gets copied.\n\nStep 3) Change the Premise and Rule to:\n\nPremiseA(0)Rule1A(i)=FJ(,,i+3)A(i+1)\n\nThis creates a line of increasing-order polygons.\n\nStep 4) Finally, we will want to create 20 leaves, and put them all into a Switch SOP. Do this by entering the following expression into the Switch SOP's Select Input: param(\"lsys\",0)Step 5) Then in your L-system, J(,,0) gives you the first SOP, J(,,1) gives you the second, and so on. This solves the problem of a limited number of leaves using only JKM.\n\nAlso note that these examples use only the first stamp parameter, you can use up to three parameters: e.g. J(,,1,2,3)\n\nThe first two parameters of J, K, M are used to override length and width, like symbol F.\n\nExtra Information for the LSystem SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "type",
          "label": "Type",
          "description": "Type parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Tube",
              "value": "tube",
              "description": "Creates tube geometry. This option can be used with solid geometry that would need smooth curves, like trees or shrubs. Parameters on the Tube Page are only enabled when this Type is selected."
            }
          ],
          "section": "Geometry Page"
        },
        {
          "name": "generations",
          "label": "Generations",
          "description": "Generations parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Geometry Page"
        },
        {
          "name": "randscale",
          "label": "Randscale",
          "description": "Randscale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Geometry Page"
        },
        {
          "name": "randseed",
          "label": "Randseed",
          "description": "Randseed parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Geometry Page"
        },
        {
          "name": "contangl",
          "label": "Contangl",
          "description": "Contangl parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Geometry Page"
        },
        {
          "name": "contlength",
          "label": "Contlength",
          "description": "Contlength parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Geometry Page"
        },
        {
          "name": "contwidth",
          "label": "Contwidth",
          "description": "Contwidth parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Geometry Page"
        },
        {
          "name": "docolor",
          "label": "Docolor",
          "description": "Docolor parameter",
          "type": "RGB",
          "default": "",
          "range": null,
          "options": null,
          "section": "Geometry Page"
        },
        {
          "name": "colormap",
          "label": "Colormap",
          "description": "Colormap parameter",
          "type": "RGB",
          "default": "",
          "range": null,
          "options": null,
          "section": "Geometry Page"
        },
        {
          "name": "inc",
          "label": "Inc",
          "description": "Inc parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Geometry Page"
        },
        {
          "name": "pointwidth",
          "label": "Pointwidth",
          "description": "Pointwidth parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Geometry Page"
        },
        {
          "name": "rows",
          "label": "Rows",
          "description": "Rows parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Tube Page"
        },
        {
          "name": "cols",
          "label": "Cols",
          "description": "Cols parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Tube Page"
        },
        {
          "name": "tension",
          "label": "Tension",
          "description": "Tension parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Tube Page"
        },
        {
          "name": "smooth",
          "label": "Smooth",
          "description": "Smooth parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Tube",
              "value": "tube",
              "description": "Creates tube geometry. This option can be used with solid geometry that would need smooth curves, like trees or shrubs. Parameters on the Tube Page are only enabled when this Type is selected."
            }
          ],
          "section": "Tube Page"
        },
        {
          "name": "thickinit",
          "label": "Thickinit",
          "description": "Thickinit parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Tube Page"
        },
        {
          "name": "thickscale",
          "label": "Thickscale",
          "description": "Thickscale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Tube Page"
        },
        {
          "name": "dotexture",
          "label": "Dotexture",
          "description": "Dotexture parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Tube Page"
        },
        {
          "name": "vertinc",
          "label": "Vertinc",
          "description": "Vertinc parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Tube Page"
        },
        {
          "name": "stepinit",
          "label": "Stepinit",
          "description": "Stepinit parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "stepscale",
          "label": "Stepscale",
          "description": "Stepscale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "angleinit",
          "label": "Angleinit",
          "description": "Angleinit parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "anglescale",
          "label": "Anglescale",
          "description": "Anglescale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "varb",
          "label": "Varb",
          "description": "Varb parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "varc",
          "label": "Varc",
          "description": "Varc parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "vard",
          "label": "Vard",
          "description": "Vard parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "gravity",
          "label": "Gravity",
          "description": "Gravity parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Values Page"
        },
        {
          "name": "pictop",
          "label": "Pictop",
          "description": "Pictop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Funcs Page"
        },
        {
          "name": "grpprefix",
          "label": "Grpprefix",
          "description": "Grpprefix parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Funcs Page"
        },
        {
          "name": "chanprefix",
          "label": "Chanprefix",
          "description": "Chanprefix parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Funcs Page"
        },
        {
          "name": "stampa",
          "label": "Stampa",
          "description": "Stampa parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Funcs Page"
        },
        {
          "name": "stampb",
          "label": "Stampb",
          "description": "Stampb parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Funcs Page"
        },
        {
          "name": "stampc",
          "label": "Stampc",
          "description": "Stampc parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Funcs Page"
        },
        {
          "name": "rules",
          "label": "Rules",
          "description": "Rules parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Funcs Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        },
        {
          "type": "SOP",
          "description": "Input 2:  -",
          "index": 2
        },
        {
          "type": "SOP",
          "description": "Input 3:  -",
          "index": 3
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [
        {
          "title": "Examples",
          "content": "F - Moves forward current length creating geometry.\nH - Moves forward half current length creating geometry.\nF(i, j) - Moves forward a distance of i, creating geometry of thickness j.\nH(i, j) - Move forward half the distance of i, creating geometry of thickness half of j.\n+ - Turn by current angle amount.  ~ - Rotate by random angle.\n+(i) - Turn by i degrees. ~(i) - Override random angle with value of i.\n$(x0,y0,z0) - Points the turtle to location (x0,y0,z0).\nGiven the above, the Premise:\ngenerates a unit box regardless of the default Step Size or Angle settings."
        },
        {
          "title": "Example",
          "content": "Step 1) Place a Circle SOP, and set the Number of Divisions to: param(\"lsys\", 3)\nIt then displays a triangle (3 is default value).\nStep 2) Pipe this into the J input of a L-System SOP. If the L-system Premise is:\nJ AJ(,,4) AJ(,,5) A\nThis way, you can customize each leaf before it gets copied.\nStep 3) Change the Premise and Rule to:\nPremiseA(0)Rule1A(i)=FJ(,,i+3)A(i+1)\nThis creates a line of increasing-order polygons.\nStep 4) Finally, we will want to create 20 leaves, and put them all into a Switch SOP. Do this by entering the following expression into the Switch SOP's Select Input: param(\"lsys\",0)Step 5) Then in your L-system, J(,,0) gives you the first SOP, J(,,1) gives you the second, and so on. This solves the problem of a limited number of leaves using only JKM.\nAlso note that these examples use only the first stamp parameter, you can use up to three parameters: e.g. J(,,1,2,3)\nThe first two parameters of J, K, M are used to override length and width, like symbol F."
        }
      ],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "The Algorithmic Beauty of Plants\t\t\t\nPrzemyslaw Prusinkiewicz & Aristid Lindenmayer\t\t\t\nSpringer-Verlag, New York, Phone: 212.460.1500\t\t\t\nISBN: 0-387-94676-4, 1996.",
          "language": "python"
        },
        {
          "code": "generations",
          "language": "python"
        },
        {
          "code": "context_ignore:",
          "language": "python"
        },
        {
          "code": "A(i, j) = A(i+1, j-1)",
          "language": "python"
        },
        {
          "code": "A(i):i<5 = A(i+1) A(i+1)",
          "language": "python"
        },
        {
          "code": "F(i, j) = F(0.5*i, 2*j)",
          "language": "python"
        },
        {
          "code": "F(i,j,k,l,m)",
          "language": "python"
        },
        {
          "code": "$(x0,y0,z0)",
          "language": "python"
        },
        {
          "code": "F(1) +(90) F(1) +(90) F(1) +(90) F(1)",
          "language": "python"
        },
        {
          "code": "F(l) = F(l)+F(r)+ F(r) = -F(l)-F(r)",
          "language": "python"
        },
        {
          "code": "F(1,1,3,3,0)",
          "language": "python"
        },
        {
          "code": "Fl+Fr+-Fl-Fr",
          "language": "python"
        },
        {
          "code": "ch(\"generations\")",
          "language": "python"
        },
        {
          "code": "l:t<b=l+r+ r:t<b=-l-r l=F r=F",
          "language": "python"
        },
        {
          "code": "^ + - * / %",
          "language": "python"
        },
        {
          "code": "min() max() sin() cos() asin() acos() pic() in()",
          "language": "python"
        },
        {
          "code": "== != = < <= > >=",
          "language": "python"
        },
        {
          "code": "A(a,b) = B(a*2,b*2)",
          "language": "python"
        },
        {
          "code": "a<b (A,B) = b(A+1,B)",
          "language": "python"
        },
        {
          "code": "pic(u, v, c)",
          "language": "python"
        },
        {
          "code": "in(q, r, s)",
          "language": "python"
        },
        {
          "code": "in(x, y, z)",
          "language": "python"
        },
        {
          "code": "gF [ gFF] F",
          "language": "python"
        },
        {
          "code": "gF [ g(-1)FF ] F",
          "language": "python"
        },
        {
          "code": "A(i) = F(i)A(i*0.5)",
          "language": "python"
        },
        {
          "code": ": param(\"lsys\", 3",
          "language": "python"
        },
        {
          "code": "A(i)=FJ(,,i+3)A(i+1)",
          "language": "python"
        },
        {
          "code": "param(\"lsys\",0)",
          "language": "python"
        },
        {
          "code": "/geo1/circle1",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "An Operator Family that creates, composites and modifies images, and reads/writes images and movies to/from files and the network. TOPs run on the graphics card's GPU.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/LSystem_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.312Z",
      "parameterCount": 34
    },
    {
      "name": "Magnet",
      "fullName": "Magnet SOP",
      "category": "SOP",
      "description": "The Magnet SOP allows you to affect deformations of the input geometry with another object using a \"magnetic field\" of influence, defined by a metaball field. It allows the creation of animated bumps and dents within objects, and other special effects.\n\nIt is important to note that the actual deformation comes from the Translate parameters of the Magnet SOP, and not from the metaball. The metaball defines the area of effect for the Translate parameters of the Magnet SOP. The weight of the metaball determines the effectiveness of the Translate within the Magnet SOP.\n\nThe power of the magnet is greatest at the centre of a metaball field and diminishes to nothing at the edge of the field.\n\nmagnetSOP_Class\n\nExtra Information for the Magnet SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "deformgrp",
          "label": "Deformgrp",
          "description": "Deformgrp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "magnetgrp",
          "label": "Magnetgrp",
          "description": "Magnetgrp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "xord",
          "label": "Xord",
          "description": "Xord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Deform Page"
        },
        {
          "name": "rord",
          "label": "Rord",
          "description": "Rord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Deform Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            }
          ],
          "section": "Deform Page"
        },
        {
          "name": "r",
          "label": "R",
          "description": "R parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            }
          ],
          "section": "Deform Page"
        },
        {
          "name": "s",
          "label": "S",
          "description": "S parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            }
          ],
          "section": "Deform Page"
        },
        {
          "name": "p",
          "label": "P",
          "description": "P parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            }
          ],
          "section": "Deform Page"
        },
        {
          "name": "position",
          "label": "Position",
          "description": "Position parameter",
          "type": "XY",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        },
        {
          "name": "color",
          "label": "Color",
          "description": "Color parameter",
          "type": "RGB",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        },
        {
          "name": "nml",
          "label": "Nml",
          "description": "Nml parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        },
        {
          "name": "velocity",
          "label": "Velocity",
          "description": "Velocity parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note: If the Translate values of the Magnet SOP are all zero, the magnet will have no deforming influence. The weight of the Metaball SOP scales the influence of the Magnet SOP's Translates.",
        "Tip: To control the contribution of each magnet on the surface's Point Color when the Affect Point Color option is enabled, set your point colors to black (0,0,0) before the Magnet SOP by using a Point SOP. The Translate fields in the Magnet SOP will then add per-point rgb color with values of 2,2,2 approaching white."
      ],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Magnet_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.264Z",
      "parameterCount": 12
    },
    {
      "name": "Material",
      "fullName": "Material SOP",
      "category": "SOP",
      "description": "The Material SOP allows the assignment of materials (MATs) to geometry at the SOP level.\n\nNote: The Material parameter in Object Components will override material attributes assigned to geometry using the Material SOP.\n\nmaterialSOP_Class\n\nExtra Information for the Material SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "mat",
          "label": "Mat",
          "description": "Mat parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note: The Material parameter in Object Components will override material attributes assigned to geometry using the Material SOP."
      ],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Material_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.294Z",
      "parameterCount": 1
    },
    {
      "name": "Merge",
      "fullName": "Merge SOP",
      "category": "SOP",
      "description": "The Merge SOP merges geometry from multiple SOPs. You can merge SOPs by wiring them into the Merge SOP, and/or you can specify the names in the SOPs parameter, where you can include wildcard Pattern Matching to merge large sets of SOPs with similar names.\n\nmergeSOP_Class\n\nExtra Information for the Merge SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Merge_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.281Z",
      "parameterCount": 0
    },
    {
      "name": "Metaball",
      "fullName": "Metaball SOP",
      "category": "SOP",
      "description": "The Metaball SOP creates metaballs and meta-superquadric surfaces. Metaballs can be thought of as spherical force fields whose surface is an implicit function defined at any point where the density of the force field equals a certain threshold. Because the density of the force field can be increased by the proximity of other metaball force fields, metaballs have the unique property that they change their shape to adapt and fuse with surrounding metaballs. This makes them very effective for modeling organic surfaces. For example, below we have a metaball. The surface of the metaball exists whenever the density of the metaball's field reaches a certain threshold:\n\nWhen two or more metaball force fields are combined, as in the illustration below, the resulting density of the force fields is added, and the surface extends to include that area where the force fields intersect and create density values with a value of one. For more information on metaballs, see Metaballs.\n\nYou can change the level of detail of the metaball and NURBS display by adjusting the Level of Detail parameter in the Display Option Dialog > Viewport page > Level of Detail option. To open the Display Options Dialog, press \"p\" in a SOP viewport.\n\nAccurate metaball normals will be computed if the normal attribute exists when conversion to polygons is done. Thus, to get improved shading on polygonized metaballs, it's a good idea to add the normal attribute (i.e. use a Facet SOP) before converting the metaballs.\n\nmetaballSOP_Class\n\nIn the instance of metaballs, the exponent determines the inflation towards \"squarishness\" or contraction towards \"starishness\" as described below:\n\nExtra Information for the Metaball SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "modifybounds",
          "label": "Modifybounds",
          "description": "Modifybounds parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "rad",
          "label": "Rad",
          "description": "Rad parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "metaweight",
          "label": "Metaweight",
          "description": "Metaweight parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "kernel",
          "label": "Kernel",
          "description": "Kernel parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "expxy",
          "label": "Expxy",
          "description": "Expxy parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "expz",
          "label": "Expz",
          "description": "Expz parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "normals",
          "label": "Normals",
          "description": "Normals parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "modifybounds",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Metaball_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.335Z",
      "parameterCount": 8
    },
    {
      "name": "Model",
      "fullName": "Model SOP",
      "category": "SOP",
      "description": "The Model SOP holds the surface modeler in TouchDesigner. It is designed to hold raw model geometry constructed using the SOP Editor (aka Modeler). It holds modeled data and cannot be unlocked - protecting you from losing your model data.\n\nAny SOP can be locked and modified with the modeler.\n\nmodelSOP_Class\n\nExtra Information for the Model SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Model_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.373Z",
      "parameterCount": 0
    },
    {
      "name": "Noise",
      "fullName": "Noise SOP",
      "category": "SOP",
      "description": "The Noise SOP displaces geometry points using noise patterns. It uses the same math as the Noise CHOP.\n\nnoiseSOP_Class\n\nThe Translate, Rotate, Scale and Pivot parameters let you sample in a different part of the 3D noise space. Imagine a different noise value for every XYZ point in space. Normally, the Noise SOP samples the noise space from (0,0,0) along the X-axis in steps of 2/period.\n\nBy changing the transform, you are translating, rotating and scaling the line along which the Noise SOPs samples the noise space. A slight Y-rotation is like walking in a straight path in the mountains, recording your altitude along the way, then re-starting from the same initial location, walking in a slightly different direction. Your altitude starts off being similar but then diverges.\n\nExtra Information for the Noise SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Noise Page"
        },
        {
          "name": "attribute",
          "label": "Attribute",
          "description": "Attribute parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Noise Page"
        },
        {
          "name": "type",
          "label": "Type",
          "description": "Type parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Noise Page"
        },
        {
          "name": "seed",
          "label": "Seed",
          "description": "Seed parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Noise Page"
        },
        {
          "name": "period",
          "label": "Period",
          "description": "Period parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Noise Page"
        },
        {
          "name": "harmon",
          "label": "Harmon",
          "description": "Harmon parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Harmomic Summation",
              "value": "harmonic",
              "description": "Sparse noise with the ability to control the frequency step of the harmonics. Takes the longest to compute."
            }
          ],
          "section": "Noise Page"
        },
        {
          "name": "spread",
          "label": "Spread",
          "description": "Spread parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Noise Page"
        },
        {
          "name": "rough",
          "label": "Rough",
          "description": "Rough parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Noise Page"
        },
        {
          "name": "exp",
          "label": "Exp",
          "description": "Exp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Noise Page"
        },
        {
          "name": "numint",
          "label": "Numint",
          "description": "Numint parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Noise Page"
        },
        {
          "name": "amp",
          "label": "Amp",
          "description": "Amp parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Random",
              "value": "random",
              "description": "(White Noise) Every sample is random and unrelated to any other sample. It is the same as \"white noise\" in audio."
            }
          ],
          "section": "Noise Page"
        },
        {
          "name": "keepnormals",
          "label": "Keepnormals",
          "description": "Keepnormals parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Noise Page"
        },
        {
          "name": "xord",
          "label": "Xord",
          "description": "Xord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "rord",
          "label": "Rord",
          "description": "Rord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Noise Page"
            },
            {
              "label": "Point Position",
              "value": "pos",
              "description": "Noise is applied in the direction of the point normal. If no normal is specified, a normal is computed."
            },
            {
              "label": "Point Diffuse Color",
              "value": "cd",
              "description": "Noise is applied to each component of the color independently."
            },
            {
              "label": "Point Alpha",
              "value": "alpha",
              "description": "Noise is applied to alpha."
            },
            {
              "label": "Point Texture UV",
              "value": "uv",
              "description": "Noise is applied to each component uv independently."
            },
            {
              "label": "Sparse",
              "value": "sparse",
              "description": "Produces high quality, continuous noise based on Sparse Convolution."
            },
            {
              "label": "Hermite",
              "value": "hermite",
              "description": "Quicker than Sparse, but produces lower quality noise."
            },
            {
              "label": "Harmomic Summation",
              "value": "harmonic",
              "description": "Sparse noise with the ability to control the frequency step of the harmonics. Takes the longest to compute."
            },
            {
              "label": "Brownian",
              "value": "brownian",
              "description": "Works like a bug in random flight. With Num of Integrals at 2, its acceleration is changed randomly every frame."
            },
            {
              "label": "Random",
              "value": "random",
              "description": "(White Noise) Every sample is random and unrelated to any other sample. It is the same as \"white noise\" in audio."
            },
            {
              "label": "Alligator",
              "value": "alligator",
              "description": "Cell Noise."
            }
          ],
          "section": "Transform Page"
        },
        {
          "name": "r",
          "label": "R",
          "description": "R parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Noise Page"
            },
            {
              "label": "Point Position",
              "value": "pos",
              "description": "Noise is applied in the direction of the point normal. If no normal is specified, a normal is computed."
            },
            {
              "label": "Point Diffuse Color",
              "value": "cd",
              "description": "Noise is applied to each component of the color independently."
            },
            {
              "label": "Sparse",
              "value": "sparse",
              "description": "Produces high quality, continuous noise based on Sparse Convolution."
            },
            {
              "label": "Hermite",
              "value": "hermite",
              "description": "Quicker than Sparse, but produces lower quality noise."
            },
            {
              "label": "Harmomic Summation",
              "value": "harmonic",
              "description": "Sparse noise with the ability to control the frequency step of the harmonics. Takes the longest to compute."
            },
            {
              "label": "Brownian",
              "value": "brownian",
              "description": "Works like a bug in random flight. With Num of Integrals at 2, its acceleration is changed randomly every frame."
            },
            {
              "label": "Random",
              "value": "random",
              "description": "(White Noise) Every sample is random and unrelated to any other sample. It is the same as \"white noise\" in audio."
            },
            {
              "label": "Alligator",
              "value": "alligator",
              "description": "Cell Noise."
            }
          ],
          "section": "Transform Page"
        },
        {
          "name": "s",
          "label": "S",
          "description": "S parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Noise Page"
            },
            {
              "label": "Point Position",
              "value": "pos",
              "description": "Noise is applied in the direction of the point normal. If no normal is specified, a normal is computed."
            },
            {
              "label": "Point Diffuse Color",
              "value": "cd",
              "description": "Noise is applied to each component of the color independently."
            },
            {
              "label": "Point Alpha",
              "value": "alpha",
              "description": "Noise is applied to alpha."
            },
            {
              "label": "Point Texture UV",
              "value": "uv",
              "description": "Noise is applied to each component uv independently."
            },
            {
              "label": "Sparse",
              "value": "sparse",
              "description": "Produces high quality, continuous noise based on Sparse Convolution."
            },
            {
              "label": "Hermite",
              "value": "hermite",
              "description": "Quicker than Sparse, but produces lower quality noise."
            },
            {
              "label": "Harmomic Summation",
              "value": "harmonic",
              "description": "Sparse noise with the ability to control the frequency step of the harmonics. Takes the longest to compute."
            },
            {
              "label": "Brownian",
              "value": "brownian",
              "description": "Works like a bug in random flight. With Num of Integrals at 2, its acceleration is changed randomly every frame."
            },
            {
              "label": "Random",
              "value": "random",
              "description": "(White Noise) Every sample is random and unrelated to any other sample. It is the same as \"white noise\" in audio."
            },
            {
              "label": "Alligator",
              "value": "alligator",
              "description": "Cell Noise."
            }
          ],
          "section": "Transform Page"
        },
        {
          "name": "p",
          "label": "P",
          "description": "P parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Noise Page"
            },
            {
              "label": "Point Position",
              "value": "pos",
              "description": "Noise is applied in the direction of the point normal. If no normal is specified, a normal is computed."
            },
            {
              "label": "Point Diffuse Color",
              "value": "cd",
              "description": "Noise is applied to each component of the color independently."
            },
            {
              "label": "Point Alpha",
              "value": "alpha",
              "description": "Noise is applied to alpha."
            },
            {
              "label": "Point Texture UV",
              "value": "uv",
              "description": "Noise is applied to each component uv independently."
            },
            {
              "label": "Sparse",
              "value": "sparse",
              "description": "Produces high quality, continuous noise based on Sparse Convolution."
            },
            {
              "label": "Hermite",
              "value": "hermite",
              "description": "Quicker than Sparse, but produces lower quality noise."
            },
            {
              "label": "Harmomic Summation",
              "value": "harmonic",
              "description": "Sparse noise with the ability to control the frequency step of the harmonics. Takes the longest to compute."
            },
            {
              "label": "Random",
              "value": "random",
              "description": "(White Noise) Every sample is random and unrelated to any other sample. It is the same as \"white noise\" in audio."
            }
          ],
          "section": "Transform Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "keepnormals",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Deform",
      "useCases": [
        "Procedural texture generation",
        "Organic animation and movement",
        "Terrain and landscape creation",
        "Adding natural variation to parameters",
        "Image positioning and scaling",
        "Rotation and skew operations"
      ],
      "url": "https://docs.derivative.ca/Noise_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.387Z",
      "parameterCount": 18
    },
    {
      "name": "Null",
      "fullName": "Null SOP",
      "category": "SOP",
      "description": "The Null SOP has no effect on the geometry. It is an instance of the SOP connected to its input. The Null SOP is often used when making reference to a SOP network, allowing new SOPs to be added to the network (upstream) without the need to update the reference.\n\nnullSOP_Class\n\nNo parameters.\n\nExtra Information for the Null SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Null_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.401Z",
      "parameterCount": 0
    },
    {
      "name": "Object Merge",
      "fullName": "Object Merge SOP",
      "category": "SOP",
      "description": "The Object Merge SOP allows you to merge the geometry of several SOPs spanning different components. The SOP data will be baked so that all merged SOPs are relative to each other as if they were located using the transforms of the COMPs they originally came from.\n\nobjectmergeSOP_Class\n\nExtra Information for the Object Merge SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditorwikieditorwikieditor2021.100002020.200002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "xform",
          "label": "Xform",
          "description": "Xform parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Object Merge Page"
        },
        {
          "name": "merge",
          "label": "Merge",
          "description": "Merge parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Object Merge Page"
            }
          ],
          "section": "Object Merge Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "Image positioning and scaling",
        "Rotation and skew operations",
        "Coordinate space conversions",
        "Animation and motion graphics"
      ],
      "url": "https://docs.derivative.ca/Object_Merge_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.422Z",
      "parameterCount": 2
    },
    {
      "name": "Oculus Rift",
      "fullName": "Oculus Rift SOP",
      "category": "SOP",
      "description": "Loads geometry for the Oculus Rift Touch controllers.\n\noculusriftSOP_Class\n\nExtra Information for the Oculus Rift SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditor2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "model",
          "label": "Model",
          "description": "Model parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "leftcontroller",
          "language": "python"
        },
        {
          "code": "rightcontroller",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Oculus_Rift_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.442Z",
      "parameterCount": 1
    },
    {
      "name": "OpenVR",
      "fullName": "OpenVR SOP",
      "category": "SOP",
      "description": "The OpenVR SOP loads various models that the OpenVR driver for the installed device provides. This can be models of the controllers, headset and other peripherals. What the driver returns is entirely up to the manufacturer and can change between driver versions.\n\nopenvrSOP_Class\n\nExtra Information for the OpenVR SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditor2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "model",
          "label": "Model",
          "description": "Model parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/OpenVR_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.479Z",
      "parameterCount": 1
    },
    {
      "name": "Out",
      "fullName": "Out SOP",
      "category": "SOP",
      "description": "The Out SOP is used to create a SOP output in a Component. Component outputs are positioned alphanumerically on the right side of the Component.\n\noutSOP_Class\n\nOut SOP on Old Wiki\n\nExtra Information for the Out SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "label",
          "label": "Label",
          "description": "Label parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Import/Export",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Out_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.494Z",
      "parameterCount": 1
    },
    {
      "name": "Particle",
      "fullName": "Particle SOP",
      "category": "SOP",
      "description": "The Particle SOP is used for creating and controlling motion of \"particles\" for particle systems simulations. Particle systems are often used to create simulations of natural events such as rain and snow, or effects such as fireworks and sparks. In Touch, the points of the input geometry are used as the starting positions of the particles. Each point of the input can be affected by external force (gravity) and wind. Particles can collide and bounce off another object, set by the Collision Source. They can also bounce off, or die at, limit planes set in X, Y and Z.\n\nParticles are created with an initial velocity/direction that comes from the source geometry’s point normals, and that velocity can be controlled by modifying the normals using, for instance, a Point SOP, Facet SOP or Script SOP. A point with a Normal of magnitude 1 emit bear particles with a velocity of 1 unit per second in the direction of the normal.\n\nParticles have various Attributes that regular geometry do not have, such as velocity, life expectancy and age. These attributes must be carried with each point in order to carry out the simulation.\n\nThe fourth input is Surface Attractors that cause the particles to be attached to areas of a surface. Each particle's id is used to determine a random target primitive, and random u,v on that primitive.  That target position is used to modify the current velocity.\n\nparticleSOP_Class\n\nExtra Information for the Particle SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditorwikieditorwikieditor2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "sourcegrp",
          "label": "Sourcegrp",
          "description": "Sourcegrp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "prtype",
          "label": "Prtype",
          "description": "Prtype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "State Page"
        },
        {
          "name": "behave",
          "label": "Behave",
          "description": "Behave parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "State Page"
        },
        {
          "name": "normals",
          "label": "Normals",
          "description": "Normals parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "State Page"
        },
        {
          "name": "ptreuse",
          "label": "Ptreuse",
          "description": "Ptreuse parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "State Page"
        },
        {
          "name": "timepreroll",
          "label": "Timepreroll",
          "description": "Timepreroll parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "State Page"
        },
        {
          "name": "timeinc",
          "label": "Timeinc",
          "description": "Timeinc parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "State Page"
        },
        {
          "name": "maxsteps",
          "label": "Maxsteps",
          "description": "Maxsteps parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "State Page"
        },
        {
          "name": "jitter",
          "label": "Jitter",
          "description": "Jitter parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "State Page"
        },
        {
          "name": "accurate",
          "label": "Accurate",
          "description": "Accurate parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "State Page"
        },
        {
          "name": "rmunused",
          "label": "Rmunused",
          "description": "Rmunused parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "State Page"
        },
        {
          "name": "attractmode",
          "label": "Attractmode",
          "description": "Attractmode parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "State Page"
        },
        {
          "name": "reset",
          "label": "Reset",
          "description": "Reset parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "State Page"
        },
        {
          "name": "resetpulse",
          "label": "Resetpulse",
          "description": "Resetpulse parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "State Page"
        },
        {
          "name": "external",
          "label": "External",
          "description": "External parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "4.1",
              "value": "Discussion",
              "description": "Wind vs External Force"
            }
          ],
          "section": "Forces Page"
        },
        {
          "name": "wind",
          "label": "Wind",
          "description": "Wind parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "4.1",
              "value": "Discussion",
              "description": "Wind vs External Force"
            }
          ],
          "section": "Forces Page"
        },
        {
          "name": "turb",
          "label": "Turb",
          "description": "Turb parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Forces Page"
        },
        {
          "name": "period",
          "label": "Period",
          "description": "Period parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Forces Page"
        },
        {
          "name": "seed",
          "label": "Seed",
          "description": "Seed parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Forces Page"
        },
        {
          "name": "doid",
          "label": "Doid",
          "description": "Doid parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particles Page"
        },
        {
          "name": "domass",
          "label": "Domass",
          "description": "Domass parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particles Page"
        },
        {
          "name": "mass",
          "label": "Mass",
          "description": "Mass parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particles Page"
        },
        {
          "name": "dodrag",
          "label": "Dodrag",
          "description": "Dodrag parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particles Page"
        },
        {
          "name": "drag",
          "label": "Drag",
          "description": "Drag parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particles Page"
        },
        {
          "name": "birth",
          "label": "Birth",
          "description": "Birth parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particles Page"
        },
        {
          "name": "life",
          "label": "Life",
          "description": "Life parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particles Page"
        },
        {
          "name": "lifevar",
          "label": "Lifevar",
          "description": "Lifevar parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particles Page"
        },
        {
          "name": "alpha",
          "label": "Alpha",
          "description": "Alpha parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particles Page"
        },
        {
          "name": "subattract",
          "label": "Subattract",
          "description": "Subattract parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particles Page"
        },
        {
          "name": "birthcount",
          "label": "Birthcount",
          "description": "Birthcount parameter",
          "type": "Int",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particles Page"
        },
        {
          "name": "birthpulse",
          "label": "Birthpulse",
          "description": "Birthpulse parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particles Page"
        },
        {
          "name": "limitpos",
          "label": "Limitpos",
          "description": "Limitpos parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Limits Page"
        },
        {
          "name": "limitneg",
          "label": "Limitneg",
          "description": "Limitneg parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Limits Page"
        },
        {
          "name": "hit",
          "label": "Hit",
          "description": "Hit parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Limits Page"
        },
        {
          "name": "gaintan",
          "label": "Gaintan",
          "description": "Gaintan parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Limits Page"
        },
        {
          "name": "gainnorm",
          "label": "Gainnorm",
          "description": "Gainnorm parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Limits Page"
        },
        {
          "name": "splittype",
          "label": "Splittype",
          "description": "Splittype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Limits Page"
        },
        {
          "name": "split",
          "label": "Split",
          "description": "Split parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Limits Page"
        },
        {
          "name": "splitvel",
          "label": "Splitvel",
          "description": "Splitvel parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Limits Page"
        },
        {
          "name": "splitvar",
          "label": "Splitvar",
          "description": "Splitvar parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Limits Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        },
        {
          "type": "SOP",
          "description": "Input 2:  -",
          "index": 2
        },
        {
          "type": "SOP",
          "description": "Input 3:  -",
          "index": 3
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Tip: You can also instance geometry to particles. Use a SOP to CHOP to get the particle positions into CHOPs, and on the Instance page of the Geometry COMP to position any geometry at each particle positions. This is by far the most efficient way of animating many copies of geometry with a particle system.",
        "Note: Never set this parameter to be greater than 1/me.time.rate."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "pointprites",
          "language": "python"
        },
        {
          "code": "timepreroll",
          "language": "python"
        },
        {
          "code": "1/me.time.rate",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "1/me.time.rate",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "0.5/me.time.rate",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "1/me.time.rate",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "attractmode",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "Tip: You can also instance geometry to particles. Use a SOP to CHOP to get the particle positions into CHOPs, and on the Instance page of the Geometry COMP to position any geometry at each particle positions. This is by far the most efficient way of animating many copies of geometry with a particle system.",
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Particle_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.516Z",
      "parameterCount": 40
    },
    {
      "name": "Point",
      "fullName": "Point SOP",
      "category": "SOP",
      "description": "The Point SOP allows you to get right into the geometry and manipulate the position, color, texture coordinates, and normals of the points in the Source, and other attributes. The Point SOP also lets you create custom point attributes. It is the complement to the Primitive SOP. Using a second input allows for combining of two SOPs using their respective expressions (see: PointSOP Class). If the second input has less points than the first input, the points in the second input will be cycled.\n\nFor example, you can create point coloring, or flip the normals of incoming geometry. Using expressions in Position X, Y and Z, you can move any given input point to a new place as defined by the expression with any standard attributes.\n\nThe Width (width) attribute affects the line width in the Line MAT.  The Scale attribute (pscale) affects particle size, and in the Line MAT it affects the dot size at each point.\n\nTip: For greater flexibility, use the Script SOP.\n\npointSOP_Class\n\nYou can flip the point normals of incoming geometry by entering:\n\nin the fields with this parameter set to Add Normals. This works, because it takes the existing normals\n\nand inverts them (the preceding - ).\n\nExtra Information for the Point SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditor2021.100002020.200002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Point Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "3",
              "value": "Parameters",
              "description": "Custom Page"
            }
          ],
          "section": "Point Page"
        },
        {
          "name": "doweight",
          "label": "Doweight",
          "description": "Doweight parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Point Page"
        },
        {
          "name": "weight",
          "label": "Weight",
          "description": "Weight parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Point Page"
        },
        {
          "name": "doclr",
          "label": "Doclr",
          "description": "Doclr parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Point Page"
        },
        {
          "name": "diff",
          "label": "Diff",
          "description": "Diff parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Point Page"
        },
        {
          "name": "alpha",
          "label": "Alpha",
          "description": "Alpha parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Point Page"
        },
        {
          "name": "donml",
          "label": "Donml",
          "description": "Donml parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Point Page"
        },
        {
          "name": "n",
          "label": "N",
          "description": "N parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Point Page"
        },
        {
          "name": "attr",
          "label": "Attr",
          "description": "Attr parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Custom Page"
        },
        {
          "name": "domass",
          "label": "Domass",
          "description": "Domass parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particle Page"
        },
        {
          "name": "mass",
          "label": "Mass",
          "description": "Mass parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particle Page"
        },
        {
          "name": "drag",
          "label": "Drag",
          "description": "Drag parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particle Page"
        },
        {
          "name": "dotension",
          "label": "Dotension",
          "description": "Dotension parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particle Page"
        },
        {
          "name": "tension",
          "label": "Tension",
          "description": "Tension parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particle Page"
        },
        {
          "name": "dospringk",
          "label": "Dospringk",
          "description": "Dospringk parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particle Page"
        },
        {
          "name": "springk",
          "label": "Springk",
          "description": "Springk parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particle Page"
        },
        {
          "name": "dovel",
          "label": "Dovel",
          "description": "Dovel parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particle Page"
        },
        {
          "name": "v",
          "label": "V",
          "description": "V parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particle Page"
        },
        {
          "name": "doup",
          "label": "Doup",
          "description": "Doup parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particle Page"
        },
        {
          "name": "up",
          "label": "Up",
          "description": "Up parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particle Page"
        },
        {
          "name": "doradius",
          "label": "Doradius",
          "description": "Doradius parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Force Page"
        },
        {
          "name": "radiusf",
          "label": "Radiusf",
          "description": "Radiusf parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Force Page"
        },
        {
          "name": "doscale",
          "label": "Doscale",
          "description": "Doscale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Force Page"
        },
        {
          "name": "scalef",
          "label": "Scalef",
          "description": "Scalef parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Force Page"
        },
        {
          "name": "doradialf",
          "label": "Doradialf",
          "description": "Doradialf parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Force Page"
        },
        {
          "name": "radialf",
          "label": "Radialf",
          "description": "Radialf parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Force Page"
        },
        {
          "name": "donormalf",
          "label": "Donormalf",
          "description": "Donormalf parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Force Page"
        },
        {
          "name": "normalf",
          "label": "Normalf",
          "description": "Normalf parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Force Page"
        },
        {
          "name": "doedgef",
          "label": "Doedgef",
          "description": "Doedgef parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Force Page"
        },
        {
          "name": "edgef",
          "label": "Edgef",
          "description": "Edgef parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Force Page"
        },
        {
          "name": "dodirf",
          "label": "Dodirf",
          "description": "Dodirf parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Force Page"
        },
        {
          "name": "dirf",
          "label": "Dirf",
          "description": "Dirf parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Force Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0: Source 1 -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1: Source 2 -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Tip: For greater flexibility, use the Script SOP.",
        "Note: When edge forces are added using the Point SOP, the force directions are computed in the Point SOP itself. Thus, any following transformations do not effect these. If you wish for the edge directions to be transformed as well, all transformations must be done before the Point SOP. Only the edge forces function like this."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "me.inputPoint.x",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputPoint.y",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputPoint.z",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputPoint.x",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputPoint.x+5",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputPoint.w",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputColor[0]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputColor[1]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputColor[2]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputColor[3]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputColor[3]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputNormal[0]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputNormal[1]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputNormal[2]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "(-me.inputNormal[0] -me.inputNormal[1] -me.inputNormal[2])",
          "language": "python"
        },
        {
          "code": "(me.inputNormal[0] me.inputNormal[1] me.inputNormal[2])",
          "language": "python"
        },
        {
          "code": "me.inputTexture[0]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputTexture[1]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputTexture[2]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputPoint.width[0]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputPoint.pscale[0]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "attr0value1",
          "language": "python"
        },
        {
          "code": "attr0value2",
          "language": "python"
        },
        {
          "code": "attr0value3",
          "language": "python"
        },
        {
          "code": "attr0value4",
          "language": "python"
        },
        {
          "code": "me.inputPoint.tension[0]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputPoint.springk[0]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputPoint.v[0]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputPoint.v[1]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputPoint.v[2]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputPoint.up[0]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputPoint.up[1]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.inputPoint.up[2]",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Import/Export",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Point_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.541Z",
      "parameterCount": 33
    },
    {
      "name": "Polyloft",
      "fullName": "Polyloft SOP",
      "category": "SOP",
      "description": "The Polyloft SOP generates meshes of triangles by connecting (i.e. lofting/stitching) the points of open or closed faces without adding any new points. Polyloft can also connect groups of unrelated points in a similar fashion. The faces and the point groups need not have the same number of points.\n\nThe optional input specifies the rest geometry, typically the copy of the main input at a specific face (usually 1). This forces the point order to remain constant throughout the animation and prevents the triangular stitch from popping as the geometry deforms. If you specify face or point groups for lofting using rest geometry, make sure they are defined in the second input.\n\npolyloftSOP_Class\n\nStitch sets of points, each set acting as a cross-section.\n\nExtra Information for the Polyloft SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditor2021.100002020.200002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "proximity",
          "label": "Proximity",
          "description": "Proximity parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polyloft Page"
        },
        {
          "name": "consolidate",
          "label": "Consolidate",
          "description": "Consolidate parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polyloft Page"
        },
        {
          "name": "dist",
          "label": "Dist",
          "description": "Dist parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polyloft Page"
        },
        {
          "name": "minimize",
          "label": "Minimize",
          "description": "Minimize parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polyloft Page"
        },
        {
          "name": "closeu",
          "label": "Closeu",
          "description": "Closeu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polyloft Page"
        },
        {
          "name": "closev",
          "label": "Closev",
          "description": "Closev parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polyloft Page"
        },
        {
          "name": "creategroup",
          "label": "Creategroup",
          "description": "Creategroup parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polyloft Page"
        },
        {
          "name": "polygroup",
          "label": "Polygroup",
          "description": "Polygroup parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polyloft Page"
        },
        {
          "name": "method",
          "label": "Method",
          "description": "Method parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polyloft Page"
        },
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polyloft Page"
        },
        {
          "name": "prim",
          "label": "Prim",
          "description": "Prim parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polyloft Page"
        },
        {
          "name": "point",
          "label": "Point",
          "description": "Point parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2-Point Distance",
              "value": "point2",
              "description": "Default stitching target."
            },
            {
              "label": "3-Point Distance",
              "value": "point3",
              "description": "May help avoid intersections."
            },
            {
              "label": "Points",
              "value": "points",
              "description": "Stitch sets of points, each set acting as a cross-section."
            }
          ],
          "section": "Point Groups Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "consolidate",
          "language": "python"
        },
        {
          "code": "creategroup",
          "language": "python"
        },
        {
          "code": "point0group",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Polyloft_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.550Z",
      "parameterCount": 12
    },
    {
      "name": "Polypatch",
      "fullName": "Polypatch SOP",
      "category": "SOP",
      "description": "The Polypatch SOP creates a smooth polygonal patch from a mesh primitive or a set of faces (polygons, NURBS or Bezier curves).\n\npolypatchSOP_Class\n\nExtra Information for the Polypatch SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polypatch Page"
        },
        {
          "name": "basis",
          "label": "Basis",
          "description": "Basis parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polypatch Page"
        },
        {
          "name": "connecttype",
          "label": "Connecttype",
          "description": "Connecttype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polypatch Page"
        },
        {
          "name": "closeu",
          "label": "Closeu",
          "description": "Closeu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polypatch Page"
        },
        {
          "name": "closev",
          "label": "Closev",
          "description": "Closev parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polypatch Page"
        },
        {
          "name": "firstuclamp",
          "label": "Firstuclamp",
          "description": "Firstuclamp parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Off",
              "value": "firstuclampoff",
              "description": "Do not clamp the first/last end in the U/V direction."
            },
            {
              "label": "On",
              "value": "firstuclampon",
              "description": "Clamp the first/last end in the U/V direction."
            },
            {
              "label": "If primitive does",
              "value": "firstuclampifprim",
              "description": "Clamp the first/last end in the U/V direction if the input primitive does."
            }
          ],
          "section": "Polypatch Page"
        },
        {
          "name": "lastuclamp",
          "label": "Lastuclamp",
          "description": "Lastuclamp parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Off",
              "value": "lastuclampoff",
              "description": "Do not clamp the first/last end in the U/V direction."
            },
            {
              "label": "On",
              "value": "lastuclampon",
              "description": "Clamp the first/last end in the U/V direction."
            },
            {
              "label": "If primitive does",
              "value": "lastuclampifprim",
              "description": "Clamp the first/last end in the U/V direction if the input primitive does."
            }
          ],
          "section": "Polypatch Page"
        },
        {
          "name": "firstvclamp",
          "label": "Firstvclamp",
          "description": "Firstvclamp parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Off",
              "value": "firstvclampoff",
              "description": "Do not clamp the first/last end in the U/V direction."
            },
            {
              "label": "On",
              "value": "firstvclampon",
              "description": "Clamp the first/last end in the U/V direction."
            },
            {
              "label": "If primitive does",
              "value": "firstvclampifprim",
              "description": "Clamp the first/last end in the U/V direction if the input primitive does."
            }
          ],
          "section": "Polypatch Page"
        },
        {
          "name": "lastvclamp",
          "label": "Lastvclamp",
          "description": "Lastvclamp parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Off",
              "value": "lastvclampoff",
              "description": "Do not clamp the first/last end in the U/V direction."
            },
            {
              "label": "On",
              "value": "lastvclampon",
              "description": "Clamp the first/last end in the U/V direction."
            },
            {
              "label": "If primitive does",
              "value": "lastvclampifprim",
              "description": "Clamp the first/last end in the U/V direction if the input primitive does."
            }
          ],
          "section": "Polypatch Page"
        },
        {
          "name": "divisions",
          "label": "Divisions",
          "description": "Divisions parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polypatch Page"
        },
        {
          "name": "polys",
          "label": "Polys",
          "description": "Polys parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Polypatch Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "connecttype",
          "language": "python"
        },
        {
          "code": "alttriangles",
          "language": "python"
        },
        {
          "code": "inheritconnect",
          "language": "python"
        },
        {
          "code": "firstuclamp",
          "language": "python"
        },
        {
          "code": "firstuclampoff",
          "language": "python"
        },
        {
          "code": "firstuclampon",
          "language": "python"
        },
        {
          "code": "firstuclampifprim",
          "language": "python"
        },
        {
          "code": "lastuclampoff",
          "language": "python"
        },
        {
          "code": "lastuclampon",
          "language": "python"
        },
        {
          "code": "lastuclampifprim",
          "language": "python"
        },
        {
          "code": "firstvclamp",
          "language": "python"
        },
        {
          "code": "firstvclampoff",
          "language": "python"
        },
        {
          "code": "firstvclampon",
          "language": "python"
        },
        {
          "code": "firstvclampifprim",
          "language": "python"
        },
        {
          "code": "lastvclampoff",
          "language": "python"
        },
        {
          "code": "lastvclampon",
          "language": "python"
        },
        {
          "code": "lastvclampifprim",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Polypatch_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.590Z",
      "parameterCount": 11
    },
    {
      "name": "Polyreduce",
      "fullName": "Polyreduce SOP",
      "category": "SOP",
      "description": "The Polyreduce SOP reduces a high detail polygonal model into one consisting of fewer polygons. The second input's polygons represent feature edges. They are matched to the input mesh by point numbers.\n\nThe methods to reduce polygonal models are:\n\nNote that as it requires (and outputs) a triangular mesh, the polygon count may increase as a result of this operation.\n\nA second input for feature edges is provided.\n\npolyreduceSOP_Class\n\nExtra Information for the Polyreduce SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "reduce",
          "label": "Reduce",
          "description": "Reduce parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Reduce Page"
            },
            {
              "label": "Distance",
              "value": "distance",
              "description": "Reduce polygons based on distance to an object."
            }
          ],
          "section": "Reduce Page"
        },
        {
          "name": "creases",
          "label": "Creases",
          "description": "Creases parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Reduce Page"
        },
        {
          "name": "method",
          "label": "Method",
          "description": "Method parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Reduce Page"
        },
        {
          "name": "percentage",
          "label": "Percentage",
          "description": "Choose reduction level with a percentage.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Percentage",
              "value": "percentage",
              "description": "Choose reduction level with a percentage."
            }
          ],
          "section": "Reduce Page"
        },
        {
          "name": "numpolys",
          "label": "Numpolys",
          "description": "Numpolys parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Reduce Page"
        },
        {
          "name": "obj",
          "label": "Obj",
          "description": "Obj parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Distance",
              "value": "distance",
              "description": "Reduce polygons based on distance to an object."
            }
          ],
          "section": "Reduce Page"
        },
        {
          "name": "distance",
          "label": "Distance",
          "description": "Reduce polygons based on distance to an object.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Distance",
              "value": "distance",
              "description": "Reduce polygons based on distance to an object."
            }
          ],
          "section": "Reduce Page"
        },
        {
          "name": "minpercent",
          "label": "Minpercent",
          "description": "Minpercent parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Reduce Page"
        },
        {
          "name": "borderweight",
          "label": "Borderweight",
          "description": "Borderweight parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Clean Page"
        },
        {
          "name": "creaseweight",
          "label": "Creaseweight",
          "description": "Creaseweight parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Clean Page"
        },
        {
          "name": "lengthweight",
          "label": "Lengthweight",
          "description": "Lengthweight parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Clean Page"
        },
        {
          "name": "meshinvert",
          "label": "Meshinvert",
          "description": "Meshinvert parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Clean Page"
        },
        {
          "name": "triangulate",
          "label": "Triangulate",
          "description": "Triangulate parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Clean Page"
        },
        {
          "name": "keepedges",
          "label": "Keepedges",
          "description": "Keepedges parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Clean Page"
        },
        {
          "name": "originalpoints",
          "label": "Originalpoints",
          "description": "Originalpoints parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Clean Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "borderweight",
          "language": "python"
        },
        {
          "code": "creaseweight",
          "language": "python"
        },
        {
          "code": "lengthweight",
          "language": "python"
        },
        {
          "code": "triangulate",
          "language": "python"
        },
        {
          "code": "originalpoints",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Polyreduce_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.598Z",
      "parameterCount": 15
    },
    {
      "name": "Polyspline",
      "fullName": "Polyspline SOP",
      "category": "SOP",
      "description": "The Polyspline SOP fits a spline curve to a polygon or hull and outputs a polygonal approximation of that spline. You can choose either to create divisions between the original points, or to ignore the position of the original points and divide the shape into segments of equal lengths.\n\nPolyspline can optionally resample the output curve, providing control over the length and number of its segments.\n\nTip: When using this SOP, it is useful to enable Points display in the Viewport options dialog. This way you can see exactly what effect the SOP is having.\n\npolysplineSOP_Class\n\nExtra Information for the Polyspline SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "basis",
          "label": "Basis",
          "description": "Basis parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "closure",
          "label": "Closure",
          "description": "Closure parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "If polygon does",
              "value": "cifpoly",
              "description": "Use the closure of the input face. In other words, Closed splines are created if the Source polygons are closed, open splines are created if the Source polygons are open."
            }
          ],
          "section": "Page"
        },
        {
          "name": "divide",
          "label": "Divide",
          "description": "Divide parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "segsize",
          "label": "Segsize",
          "description": "Segsize parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "polydivs",
          "label": "Polydivs",
          "description": "Polydivs parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "edgedivs",
          "label": "Edgedivs",
          "description": "Edgedivs parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "first",
          "label": "First",
          "description": "First parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "last",
          "label": "Last",
          "description": "Last parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "tension",
          "label": "Tension",
          "description": "Tension parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Tip: When using this SOP, it is useful to enable Points display in the Viewport options dialog. This way you can see exactly what effect the SOP is having."
      ],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Generate",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Polyspline_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.618Z",
      "parameterCount": 10
    },
    {
      "name": "Polystitch",
      "fullName": "Polystitch SOP",
      "category": "SOP",
      "description": "The Polystitch SOP attempts to stitch polygonal surfaces together, thereby eliminating cracks that result from evaluating the surfaces at differing levels of detail.\n\nFirst, the boundaries of all the polygons to be stitched are found. An edge is a boundary edge if it is shared by no other polygon. The uniqueness of edges is determined by point numbers, and not by spatial positioning. Each boundary is then split at each \"corner\" into a number of pieces. A list of corner points can be manually specified, or any point at which the boundary changes direction by a certain amount can be flagged as a corner.\n\nFinally, any two boundary pieces that are within the tolerance of each other are stitched together. This is performed by snapping the points of the high detail edge to those of the low detail edge.\n\npolystitchSOP_Class\n\nExtra Information for the Polystitch SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "stitch",
          "label": "Stitch",
          "description": "Stitch parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "corners",
          "label": "Corners",
          "description": "Corners parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "tol3d",
          "label": "Tol3d",
          "description": "Tol3d parameter",
          "type": "XYZ",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "consolidate",
          "label": "Consolidate",
          "description": "Consolidate parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "findcorner",
          "label": "Findcorner",
          "description": "Findcorner parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "angle",
          "label": "Angle",
          "description": "Angle parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "consolidate",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Polystitch_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.650Z",
      "parameterCount": 6
    },
    {
      "name": "Experimental:POP to",
      "fullName": "Experimental:POP to SOP",
      "category": "SOP",
      "description": "poptoSOP_Class\n\nExtra Information for the POP to SOP can be accessed via an Info CHOP.",
      "parameters": [
        {
          "name": "pop",
          "label": "Pop",
          "description": "Pop parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "POP to Page"
            }
          ],
          "section": "POP to Page"
        },
        {
          "name": "downloadtype",
          "label": "Downloadtype",
          "description": "Downloadtype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "POP to Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "downloadtype",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Experimental:POP_to_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.660Z",
      "parameterCount": 2
    },
    {
      "name": "Primitive",
      "fullName": "Primitive SOP",
      "category": "SOP",
      "description": "The Primitive SOP is like the Point SOP but manipulates a primitive's position, size, orientation, color, alpha, in addition to primitive-specific attributes, such as reversing primitive normals. The Primitive SOP also lets you create custom primitive attributes.\n\nYou can also apply parametric affine transformations to a profile by using this SOP. You can also use it to open, close, reverse, and cycle the profile curves.\n\nNote: When applying transformations to a profile, you can only rotate about the Z axis because the projected curve is a planar curve that lives in the domain of the surface. Therefore it wouldn't make any sense to allow rotations in X or Y for profiles.\n\nA Bezier surface is a single primitive, as is a NURBS surface, while a polygon mesh can consist of hundreds of individual primitives. Care must be taken to ensure the desired result. Profiles can be translated, rotated, and scaled along with 3D primitives. The Z component of translation and scaling is ignored. The X and Y components would be interpreted as U and V values because they apply to the space in which profiles are defined.\n\nThere are many uses for the Primitive SOP. Normally, if you apply a texture onto a sphere, it is mapped onto the outside surface because the U surface normals point outwards by default. If you wanted to map the texture onto the inside of the sphere instead, you could simply run the sphere geometry through a Primitive SOP, and select Reverse U (i.e. the surface normals) in the Face/Hull page > Vertex menu.\n\nprimitiveSOP_Class\n\nExtra Information for the Primitive SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditor2021.100002020.200002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Primitive Page"
        },
        {
          "name": "templategrp",
          "label": "Templategrp",
          "description": "Templategrp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Primitive Page"
        },
        {
          "name": "doxform",
          "label": "Doxform",
          "description": "Doxform parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "dorot",
          "label": "Dorot",
          "description": "Dorot parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "xord",
          "label": "Xord",
          "description": "Xord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "rord",
          "label": "Rord",
          "description": "Rord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "1.2",
              "value": "Example",
              "description": "Mapping a Texture Inside a Sphere"
            },
            {
              "label": "2",
              "value": "Parameters",
              "description": "Primitive Page"
            },
            {
              "label": "Off",
              "value": "off",
              "description": "Don't rotate."
            },
            {
              "label": "On",
              "value": "on",
              "description": "The primitive gets rotated as if its normal was (0,0,1), and is meant to point the same direction as the template normal."
            },
            {
              "label": "Match Normals",
              "value": "match",
              "description": "Rotates the primitive so that its real normal lines up with the normal of the template point."
            },
            {
              "label": "No change",
              "value": "samevertex",
              "description": "Does not affect the ordering of the vertices."
            },
            {
              "label": "Reverse",
              "value": "reverse",
              "description": "Reverses both U and V for hulls, and just U for faces.For example:"
            },
            {
              "label": "Swap U and V",
              "value": "swapuv",
              "description": "Interchanges rows/columns while preserving topology."
            },
            {
              "label": "Shift",
              "value": "shift",
              "description": "Cycles the vertices by \"U Offset\" and \"V Offset\"."
            },
            {
              "label": "Render as Lines",
              "value": "lines",
              "description": "Each particle will be rendered as a 2-point line, with the length determined based on the particles velocity. If the particle has no velocity it will just be a single pixel in size."
            },
            {
              "label": "Render as Point Sprites",
              "value": "pointprites",
              "description": "For use with the Point Sprite MAT. Each particle is a square of pixels that always face the camera. The size of the square is determined by parameters in the Point Sprite and the pscale vertex/point attribute. The point sprites will have texture coordinates generated for them automatically also ((0,0) in the bottom left and (1,1) in the top right)."
            }
          ],
          "section": "Transform Page"
        },
        {
          "name": "r",
          "label": "R",
          "description": "R parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "1.2",
              "value": "Example",
              "description": "Mapping a Texture Inside a Sphere"
            },
            {
              "label": "2",
              "value": "Parameters",
              "description": "Primitive Page"
            },
            {
              "label": "Off",
              "value": "off",
              "description": "Don't rotate."
            },
            {
              "label": "On",
              "value": "on",
              "description": "The primitive gets rotated as if its normal was (0,0,1), and is meant to point the same direction as the template normal."
            },
            {
              "label": "Match Normals",
              "value": "match",
              "description": "Rotates the primitive so that its real normal lines up with the normal of the template point."
            },
            {
              "label": "No change",
              "value": "samevertex",
              "description": "Does not affect the ordering of the vertices."
            },
            {
              "label": "Reverse",
              "value": "reverse",
              "description": "Reverses both U and V for hulls, and just U for faces.For example:"
            },
            {
              "label": "Reverse U",
              "value": "reverseu",
              "description": "Reverses column order of hulls."
            },
            {
              "label": "Reverse V",
              "value": "reversev",
              "description": "Reverses row order of hulls."
            },
            {
              "label": "Swap U and V",
              "value": "swapuv",
              "description": "Interchanges rows/columns while preserving topology."
            },
            {
              "label": "Shift",
              "value": "shift",
              "description": "Cycles the vertices by \"U Offset\" and \"V Offset\"."
            },
            {
              "label": "Render as Lines",
              "value": "lines",
              "description": "Each particle will be rendered as a 2-point line, with the length determined based on the particles velocity. If the particle has no velocity it will just be a single pixel in size."
            },
            {
              "label": "Render as Point Sprites",
              "value": "pointprites",
              "description": "For use with the Point Sprite MAT. Each particle is a square of pixels that always face the camera. The size of the square is determined by parameters in the Point Sprite and the pscale vertex/point attribute. The point sprites will have texture coordinates generated for them automatically also ((0,0) in the bottom left and (1,1) in the top right)."
            }
          ],
          "section": "Transform Page"
        },
        {
          "name": "s",
          "label": "S",
          "description": "S parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "1.2",
              "value": "Example",
              "description": "Mapping a Texture Inside a Sphere"
            },
            {
              "label": "2",
              "value": "Parameters",
              "description": "Primitive Page"
            },
            {
              "label": "On",
              "value": "on",
              "description": "The primitive gets rotated as if its normal was (0,0,1), and is meant to point the same direction as the template normal."
            },
            {
              "label": "Match Normals",
              "value": "match",
              "description": "Rotates the primitive so that its real normal lines up with the normal of the template point."
            },
            {
              "label": "No change",
              "value": "samevertex",
              "description": "Does not affect the ordering of the vertices."
            },
            {
              "label": "Reverse",
              "value": "reverse",
              "description": "Reverses both U and V for hulls, and just U for faces.For example:"
            },
            {
              "label": "Reverse U",
              "value": "reverseu",
              "description": "Reverses column order of hulls."
            },
            {
              "label": "Reverse V",
              "value": "reversev",
              "description": "Reverses row order of hulls."
            },
            {
              "label": "Swap U and V",
              "value": "swapuv",
              "description": "Interchanges rows/columns while preserving topology."
            },
            {
              "label": "Shift",
              "value": "shift",
              "description": "Cycles the vertices by \"U Offset\" and \"V Offset\"."
            },
            {
              "label": "Render as Lines",
              "value": "lines",
              "description": "Each particle will be rendered as a 2-point line, with the length determined based on the particles velocity. If the particle has no velocity it will just be a single pixel in size."
            },
            {
              "label": "Render as Point Sprites",
              "value": "pointprites",
              "description": "For use with the Point Sprite MAT. Each particle is a square of pixels that always face the camera. The size of the square is determined by parameters in the Point Sprite and the pscale vertex/point attribute. The point sprites will have texture coordinates generated for them automatically also ((0,0) in the bottom left and (1,1) in the top right)."
            }
          ],
          "section": "Transform Page"
        },
        {
          "name": "p",
          "label": "P",
          "description": "P parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "1.2",
              "value": "Example",
              "description": "Mapping a Texture Inside a Sphere"
            },
            {
              "label": "2",
              "value": "Parameters",
              "description": "Primitive Page"
            },
            {
              "label": "On",
              "value": "on",
              "description": "The primitive gets rotated as if its normal was (0,0,1), and is meant to point the same direction as the template normal."
            },
            {
              "label": "Match Normals",
              "value": "match",
              "description": "Rotates the primitive so that its real normal lines up with the normal of the template point."
            },
            {
              "label": "Reverse",
              "value": "reverse",
              "description": "Reverses both U and V for hulls, and just U for faces.For example:"
            },
            {
              "label": "Swap U and V",
              "value": "swapuv",
              "description": "Interchanges rows/columns while preserving topology."
            },
            {
              "label": "Render as Lines",
              "value": "lines",
              "description": "Each particle will be rendered as a 2-point line, with the length determined based on the particles velocity. If the particle has no velocity it will just be a single pixel in size."
            },
            {
              "label": "Render as Point Sprites",
              "value": "pointprites",
              "description": "For use with the Point Sprite MAT. Each particle is a square of pixels that always face the camera. The size of the square is determined by parameters in the Point Sprite and the pscale vertex/point attribute. The point sprites will have texture coordinates generated for them automatically also ((0,0) in the bottom left and (1,1) in the top right)."
            }
          ],
          "section": "Transform Page"
        },
        {
          "name": "lookat",
          "label": "Lookat",
          "description": "Lookat parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "upvector",
          "label": "Upvector",
          "description": "Upvector parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "doclr",
          "label": "Doclr",
          "description": "Doclr parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        },
        {
          "name": "diff",
          "label": "Diff",
          "description": "Diff parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        },
        {
          "name": "alpha",
          "label": "Alpha",
          "description": "Alpha parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        },
        {
          "name": "docrease",
          "label": "Docrease",
          "description": "Docrease parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        },
        {
          "name": "crease",
          "label": "Crease",
          "description": "Crease parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        },
        {
          "name": "attr",
          "label": "Attr",
          "description": "Attr parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Render as Point Sprites",
              "value": "pointprites",
              "description": "For use with the Point Sprite MAT. Each particle is a square of pixels that always face the camera. The size of the square is determined by parameters in the Point Sprite and the pscale vertex/point attribute. The point sprites will have texture coordinates generated for them automatically also ((0,0) in the bottom left and (1,1) in the top right)."
            }
          ],
          "section": "Attributes Page"
        },
        {
          "name": "pshapeu",
          "label": "Pshapeu",
          "description": "Pshapeu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Face/Hull Page"
        },
        {
          "name": "pshapev",
          "label": "Pshapev",
          "description": "Pshapev parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Face/Hull Page"
        },
        {
          "name": "closeu",
          "label": "Closeu",
          "description": "Closeu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Face/Hull Page"
        },
        {
          "name": "closev",
          "label": "Closev",
          "description": "Closev parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Face/Hull Page"
        },
        {
          "name": "clampu",
          "label": "Clampu",
          "description": "Clampu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Face/Hull Page"
        },
        {
          "name": "clampv",
          "label": "Clampv",
          "description": "Clampv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Face/Hull Page"
        },
        {
          "name": "vtxsort",
          "label": "Vtxsort",
          "description": "Vtxsort parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Face/Hull Page"
        },
        {
          "name": "vtxuoff",
          "label": "Vtxuoff",
          "description": "Vtxuoff parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Face/Hull Page"
        },
        {
          "name": "vtxvoff",
          "label": "Vtxvoff",
          "description": "Vtxvoff parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Face/Hull Page"
        },
        {
          "name": "metaweight",
          "label": "Metaweight",
          "description": "Metaweight parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Meta Page"
        },
        {
          "name": "doweight",
          "label": "Doweight",
          "description": "Doweight parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Meta Page"
        },
        {
          "name": "doprender",
          "label": "Doprender",
          "description": "Doprender parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particles Page"
        },
        {
          "name": "prtype",
          "label": "Prtype",
          "description": "Prtype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particles Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [
        {
          "title": "Example - Mapping a Texture Inside a Sphere",
          "content": "There are many uses for the Primitive SOP. Normally, if you apply a texture onto a sphere, it is mapped onto the outside surface because the U surface normals point outwards by default. If you wanted to map the texture onto the inside of the sphere instead, you could simply run the sphere geometry through a Primitive SOP, and select Reverse U (i.e. the surface normals) in the Face/Hull page > Vertex menu.\nprimitiveSOP_Class"
        }
      ],
      "tips": [
        "Note: When applying transformations to a profile, you can only rotate about the Z axis because the projected curve is a planar curve that lives in the domain of the surface. Therefore it wouldn't make any sense to allow rotations in X or Y for profiles.",
        "Tip: By specifying both a primitive and a profile here (example: 0 0.* ), you can affect a transformation of both the parent surface and a profile curve.",
        "Tip: In order to get multiple sprites to always be perpendicular to the camera, feed them into a Primitive SOP and specify the camera as your Lookat Object. Then the sprites should always be perpendicular to the camera."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "templategrp",
          "language": "python"
        },
        {
          "code": "attr0value1",
          "language": "python"
        },
        {
          "code": "attr0value2",
          "language": "python"
        },
        {
          "code": "attr0value3",
          "language": "python"
        },
        {
          "code": "attr0value4",
          "language": "python"
        },
        {
          "code": "sameclosure",
          "language": "python"
        },
        {
          "code": "sameclosure",
          "language": "python"
        },
        {
          "code": "pointprites",
          "language": "python"
        },
        {
          "code": "pointsprites",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Attributes",
      "useCases": [
        "Image positioning and scaling",
        "Rotation and skew operations",
        "Coordinate space conversions",
        "Animation and motion graphics"
      ],
      "url": "https://docs.derivative.ca/Primitive_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.705Z",
      "parameterCount": 31
    },
    {
      "name": "Profile",
      "fullName": "Profile SOP",
      "category": "SOP",
      "description": "The Profile SOP enables the extraction and manipulation of profiles.\n\nYou will usually need a Trim SOP, Bridge SOP, or Profile SOP after a Project SOP. Use a Trim SOP to cut a hole in the projected surface. Use a Bridge SOP to skin the profile curve to another profile curve.\n\nprofileSOP_Class\n\nExtra Information for the Profile SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Profile Page"
        },
        {
          "name": "method",
          "label": "Method",
          "description": "Method parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Profile Page"
        },
        {
          "name": "parametric",
          "label": "Parametric",
          "description": "Parametric parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Remap",
              "value": "remap",
              "description": "Use parametric parameters below to produce a planar face from the profile."
            },
            {
              "label": "Chord Length",
              "value": "chordlen",
              "description": "Chord Length takes into account the surface parameterization and attempts to compute a profile best suited to the spatial and parametric determinants of the model."
            }
          ],
          "section": "Profile Page"
        },
        {
          "name": "smooth",
          "label": "Smooth",
          "description": "Smooth parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Profile Page"
        },
        {
          "name": "sdivs",
          "label": "Sdivs",
          "description": "Sdivs parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Profile Page"
        },
        {
          "name": "tolerance",
          "label": "Tolerance",
          "description": "Tolerance parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Profile Page"
        },
        {
          "name": "order",
          "label": "Order",
          "description": "Order parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Profile Page"
        },
        {
          "name": "csharp",
          "label": "Csharp",
          "description": "Csharp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Profile Page"
        },
        {
          "name": "keepsurf",
          "label": "Keepsurf",
          "description": "Keepsurf parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Profile Page"
        },
        {
          "name": "delprof",
          "label": "Delprof",
          "description": "Delprof parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Profile Page"
        },
        {
          "name": "maptype",
          "label": "Maptype",
          "description": "Maptype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Profile Page"
        },
        {
          "name": "urange",
          "label": "Urange",
          "description": "Urange parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Profile Page"
        },
        {
          "name": "vrange",
          "label": "Vrange",
          "description": "Vrange parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Profile Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Tip: A profile extracted parametrically can be reapplied to the surface identically with the Project SOP by choosing the Parametric option with no Mapping to Range. Use this method to extract the profile, pull its points or edit it as you would any 3D face, then re-project it on the surface at the same location."
      ],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Import/Export",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Profile_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.721Z",
      "parameterCount": 13
    },
    {
      "name": "Project",
      "fullName": "Project SOP",
      "category": "SOP",
      "description": "The Project SOP creates curves on surface (also known as trim or profile curves) by projecting a 3D face onto a spline surface, much like a light casts a 2D shadow onto a 3D surface. There are two projection methods: along a vector, or by mapping the face directly onto the parametric space of the surface.\n\nYou will usually need a Trim SOP, Bridge SOP, or Profile SOP after a Project SOP. For example, in the case of a Trim SOP we might have:\n\nUse a Trim SOP to cut a hole in the projected surface (as shown above).\n\nUse a Bridge SOP to skin the profile curve to another profile curve.\n\nUse a Profile SOP to extract the curve on surface or remap its position.\n\nIf you end up with a profile curve that is not visible, it may still exist. Confirm a profile curve's existence by clicking on the SOP's info pop-up (using middle-mouse button).\n\nTo delete a projected curve, use a Delete SOP, and enter the profile number (e.g. 1.4 returns the fifth profile on the second primitive (counting starts at 0) ). You can visualise the number of the profiles by enabling the Profile Number icon in the Viewport Display options.\n\nYou can group the profile curves with a Group SOP. Do this by typing the profile numbers in the Pattern field. You can use all regular expressions.\n\nYou can apply parametric affine transformations to the profile by using a Primitive SOP. You can also use the Primitive SOP to open, close, reverse, and cycle the profile curves.\n\nNote: When applying transformations to a profile in the Primitive SOP, you can only rotate about the Z axis because the projected curve is a planar curve that lives in the domain of the surface. Therefore it wouldn't make any sense to allow rotations in X or Y for profiles.\n\nprojectSOP_Class\n\nThe: Along Vector > Axis > Minimum Distance option is extremely useful, say in the following situation: You have a NURBS surface of a head, and you want to obtain a NURBS patch by projecting a hairline onto the head's surface. You could:\n\nTemplate the NURBS head.\n\nEnter a Model SOP.\n\nEnable the Snap to Template option in the Model Editor (Snap options).\n\nDraw a NURBS curve along the surface of the head where you want the hairline. Then, with the Project SOP, you select the Minimum Distance option, and you have a profile curve with which you can trim the surface of the head to obtain the patch.\n\nThus having obtained a NURBS patch for the scalp, you could use it as the base for hair.\n\nExtra Information for the Project SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "facegroup",
          "label": "Facegroup",
          "description": "Facegroup parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "surfgroup",
          "label": "Surfgroup",
          "description": "Surfgroup parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "cycle",
          "label": "Cycle",
          "description": "Cycle parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Cycled",
              "value": "cycled",
              "description": "This is the same as One Per Surface, above, but starts the faces again if there are surfaces left."
            }
          ],
          "section": "Page"
        },
        {
          "name": "method",
          "label": "Method",
          "description": "Method parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        },
        {
          "name": "axis",
          "label": "Axis",
          "description": "Axis parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "X",
              "value": "xaxis",
              "description": "Cartesian axis X, Y, or Z."
            },
            {
              "label": "Y",
              "value": "yaxis",
              "description": "Cartesian axis X, Y, or Z."
            },
            {
              "label": "Z",
              "value": "zaxis",
              "description": "Cartesian axis X, Y, or Z."
            },
            {
              "label": "Face Normal",
              "value": "fnorm",
              "description": "Projection axis occurs along each face's normal. Thus, each face could potentially have a different projection direction than the others. The option also works well for non-planar faces."
            }
          ],
          "section": "Method Page"
        },
        {
          "name": "vector",
          "label": "Vector",
          "description": "The face is projected along a 3D vector and its image on the surface is converted into a curve on the surface. One spatial curve may generate several profiles depending on its position relative to the surface, the shape of the surface, and the chosen projection side. If the projected face does not intersect the surface at all, no profile curve will be generated.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "All on Each Surface in Sequence",
              "value": "allseq",
              "description": "If projected parametrically, the spatial relationship between the faces will be preserved. For example, if the text \"hello\" is projected parametrically and in sequence, the letters will appear on the surface naturally, side by side. Sequence is not applicable if projecting along a vector."
            },
            {
              "label": "All on Each Surface Overlapping",
              "value": "allover",
              "description": "If projected parametrically, the spatial relationship between the faces is not preserved, so they will appear overlapped in the area of the domain chosen for projection. Overlapping is not applicable if projecting along a vector."
            },
            {
              "label": "Along Vector",
              "value": "vector",
              "description": "The face is projected along a 3D vector and its image on the surface is converted into a curve on the surface. One spatial curve may generate several profiles depending on its position relative to the surface, the shape of the surface, and the chosen projection side. If the projected face does not intersect the surface at all, no profile curve will be generated."
            },
            {
              "label": "Minimum Distance",
              "value": "mindist",
              "description": "Projects the entire 3D face along the vectors of minimum distance to the surface. The projection resolution is given by the Divisions per Span value."
            },
            {
              "label": "User Defined:",
              "value": "other",
              "description": "Enables the Vector fields immediately below to specify the X, Y, and Z components of the vector."
            },
            {
              "label": "Closest",
              "value": "closest",
              "description": "Will project the face onto the closest part of the surface in either direction of projection vector. For example, if a curve being projected onto a tube is inside the tube, it will yield two profiles, one on each side of the tube; if the curve is outside the tube, it will project onto the side closest to it."
            }
          ],
          "section": "Method Page"
        },
        {
          "name": "projside",
          "label": "Projside",
          "description": "Projside parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        },
        {
          "name": "sdivs",
          "label": "Sdivs",
          "description": "Sdivs parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        },
        {
          "name": "rtolerance",
          "label": "Rtolerance",
          "description": "Rtolerance parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        },
        {
          "name": "ftolerance",
          "label": "Ftolerance",
          "description": "Ftolerance parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        },
        {
          "name": "uvgap",
          "label": "Uvgap",
          "description": "Uvgap parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        },
        {
          "name": "order",
          "label": "Order",
          "description": "Order parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "One per Surface",
              "value": "oneeach",
              "description": "Each face is projected onto a surface in the order in which the face and the surface appear in the input or in their respective groups."
            }
          ],
          "section": "Method Page"
        },
        {
          "name": "csharp",
          "label": "Csharp",
          "description": "Csharp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        },
        {
          "name": "accurate",
          "label": "Accurate",
          "description": "Accurate parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        },
        {
          "name": "ufrom",
          "label": "Ufrom",
          "description": "Ufrom parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        },
        {
          "name": "vfrom",
          "label": "Vfrom",
          "description": "Vfrom parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        },
        {
          "name": "userange",
          "label": "Userange",
          "description": "Userange parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        },
        {
          "name": "urange",
          "label": "Urange",
          "description": "Urange parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        },
        {
          "name": "vrange",
          "label": "Vrange",
          "description": "Vrange parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        },
        {
          "name": "maptype",
          "label": "Maptype",
          "description": "Maptype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Method Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [
        {
          "title": "Example",
          "content": "Place a Circle SOP - Type: NURBS, Radius: 0.3, 0.3; then place a Tube SOP - Type: NURBS.\nConnect them into a Project SOP - Circle to Input1; Tube to Input2.\nAppend a Trim SOP to the Project SOP - it trims the surface according to the projection provided by the Project SOP. You need to append a Trim SOP to a Project SOP in order to realise this trimming action.\nEnable the template flags on the Circle and Tube SOPs; make the Project SOP the display SOP."
        }
      ],
      "tips": [
        "Note: When applying transformations to a profile in the Primitive SOP, you can only rotate about the Z axis because the projected curve is a planar curve that lives in the domain of the surface. Therefore it wouldn't make any sense to allow rotations in X or Y for profiles.",
        "Note: When the Minimum Distance option is selected, the Side button becomes disabled because it's irrelevant for this projection type."
      ],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "Image positioning and scaling",
        "Rotation and skew operations",
        "Coordinate space conversions",
        "Animation and motion graphics"
      ],
      "url": "https://docs.derivative.ca/Project_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.731Z",
      "parameterCount": 20
    },
    {
      "name": "Rails",
      "fullName": "Rails SOP",
      "category": "SOP",
      "description": "The Rails SOP generates surfaces by stretching cross-sections between two rails. This is similar to the Sweep SOP, but it gives more control over the orientation and scaling of the cross-sections. The first SOP input is the cross-section which will be replicated, and is typically placed in the XY plane. The second input SOP source is the rails along which the cross-section is replicated.\n\nrailsSOP_Class\n\nExtra Information for the Rails SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "xsectgrp",
          "label": "Xsectgrp",
          "description": "Xsectgrp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "railgrp",
          "label": "Railgrp",
          "description": "Railgrp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "cycle",
          "label": "Cycle",
          "description": "This cycles through incoming primitives when placing them on a backbone. i.e. Start with 0 at vertex 0, primitive 1 at vertex 1, etc.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Cycle Primitives",
              "value": "cycle",
              "description": "This cycles through incoming primitives when placing them on a backbone. i.e. Start with 0 at vertex 0, primitive 1 at vertex 1, etc."
            }
          ],
          "section": "Page"
        },
        {
          "name": "pairs",
          "label": "Pairs",
          "description": "Pairs parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "firstl",
          "label": "Firstl",
          "description": "Firstl parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "stretch",
          "label": "Stretch",
          "description": "Stretch parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "usevtx",
          "label": "Usevtx",
          "description": "Usevtx parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "vertex",
          "label": "Vertex",
          "description": "Vertex parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Cycle Primitives",
              "value": "cycle",
              "description": "This cycles through incoming primitives when placing them on a backbone. i.e. Start with 0 at vertex 0, primitive 1 at vertex 1, etc."
            }
          ],
          "section": "Page"
        },
        {
          "name": "scale",
          "label": "Scale",
          "description": "Scale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "roll",
          "label": "Roll",
          "description": "Roll parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "noflip",
          "label": "Noflip",
          "description": "Noflip parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "usedir",
          "label": "Usedir",
          "description": "Usedir parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "dir",
          "label": "Dir",
          "description": "Dir parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "newg",
          "label": "Newg",
          "description": "Newg parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "railname",
          "label": "Railname",
          "description": "Railname parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Rails_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.762Z",
      "parameterCount": 15
    },
    {
      "name": "Raster",
      "fullName": "Raster SOP",
      "category": "SOP",
      "description": "The Raster SOP converts TOP image data to geometry by scanning left to right, top to bottom, outputting a geometry point at each pixel. This output can be used to display image data on laser devices, oscilloscopes or similar devices using the Laser CHOP. This is different from the Trace SOP which only outputs contour shapes from an image.\n\nrasterSOP_Class\n\nExtra Information for the Raster SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002020.20000before 2020.20000",
      "parameters": [
        {
          "name": "top",
          "label": "Top",
          "description": "Top parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Raster Page"
        },
        {
          "name": "direction",
          "label": "Direction",
          "description": "Direction parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Raster Page"
        },
        {
          "name": "downloadtype",
          "label": "Downloadtype",
          "description": "Downloadtype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Raster Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "downloadtype",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "An Operator Family that creates, composites and modifies images, and reads/writes images and movies to/from files and the network. TOPs run on the graphics card's GPU.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Raster_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.770Z",
      "parameterCount": 3
    },
    {
      "name": "Ray",
      "fullName": "Ray SOP",
      "category": "SOP",
      "description": "The Ray SOP is used to project one surface onto another. Rays are projected from each point of the input geometry in the direction of its normal. This can be used to drape clothes over surfaces, shrink-wrap one object with another, and other similar effects.\n\nraySOP_Class\n\nThe Ray SOP will move the points of the Grid in the direction of the point normals. The first surface of the Collision Source (right input) will be where those points of the grid will rest. You can make those points rest on the other side of the sphere by enabling the Intersect Farthest Surface option. This means that the points should continue to project to the farthest surface of the collision source.\n\nExtra Information for the Ray SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "method",
          "label": "Method",
          "description": "Method parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Minimum Distance",
              "value": "minimum",
              "description": "Points are placed on the closest point on the collision geometry. This method does not use point normals. Use it to shrinkwrap or project one primitve onto another."
            }
          ],
          "section": "Page"
        },
        {
          "name": "dotrans",
          "label": "Dotrans",
          "description": "Dotrans parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "lookfar",
          "label": "Lookfar",
          "description": "Lookfar parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "normal",
          "label": "Normal",
          "description": "Normal parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Minimum Distance",
              "value": "minimum",
              "description": "Points are placed on the closest point on the collision geometry. This method does not use point normals. Use it to shrinkwrap or project one primitve onto another."
            },
            {
              "label": "Project Rays",
              "value": "project",
              "description": "Points are projected along their normals until intersecting with collision geometry."
            }
          ],
          "section": "Page"
        },
        {
          "name": "bounces",
          "label": "Bounces",
          "description": "Bounces parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "bouncegeo",
          "label": "Bouncegeo",
          "description": "Bouncegeo parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "putdist",
          "label": "Putdist",
          "description": "Putdist parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "scale",
          "label": "Scale",
          "description": "Scale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "lift",
          "label": "Lift",
          "description": "Lift parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "sample",
          "label": "Sample",
          "description": "Sample parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "jitter",
          "label": "Jitter",
          "description": "Jitter parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "seed",
          "label": "Seed",
          "description": "Seed parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "newgrp",
          "label": "Newgrp",
          "description": "Newgrp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "hitgrp",
          "label": "Hitgrp",
          "description": "Hitgrp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [
        {
          "title": "Example",
          "content": "Place a Grid SOP and translate it in TZ by 2.5. Turn it's template flag on.\nAppend a Point SOP to the Grid and enable the Create Point Normals option.\nPlace a NURBS Sphere with a Radius of 2,2,2 and translate it in Z by -2.5 .\nDisplay point normals by enabling the option in the Viewport > Display Options.\nAppend a Ray SOP to the Point SOP and connect the Sphere to the right input. Make it the display SOP.\nToggle the Intersect Farthest Surface button on and off.\nThe Ray SOP will move the points of the Grid in the direction of the point normals. The first surface of the Collision Source (right input) will be where those points of the grid will rest. You can make those points rest on the other side of the sphere by enabling the Intersect Farthest Surface option. This means that the points should continue to project to the farthest surface of the collision source."
        }
      ],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Ray_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.813Z",
      "parameterCount": 15
    },
    {
      "name": "Rectangle",
      "fullName": "Rectangle SOP",
      "category": "SOP",
      "description": "The Rectangle SOP creates a 4-sided polygon. It is a planar surface. The rectangle can be explicitly sized, or sized from other sources such as at the camera's view frustum, or the bounding box of a SOP connected to this node's input.\n\nrectangleSOP_Class\n\nExtra Information for the Rectangle SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "orient",
          "label": "Orient",
          "description": "Orient parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "camera",
          "label": "Camera",
          "description": "Camera parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "camz",
          "label": "Camz",
          "description": "Camz parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "cameraaspect",
          "label": "Cameraaspect",
          "description": "Cameraaspect parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "modifybounds",
          "label": "Modifybounds",
          "description": "Modifybounds parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "size",
          "label": "Size",
          "description": "Size parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            }
          ],
          "section": "Page"
        },
        {
          "name": "reverseanchors",
          "label": "Reverseanchors",
          "description": "Reverseanchors parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "anchoru",
          "label": "Anchoru",
          "description": "Anchoru parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "anchorv",
          "label": "Anchorv",
          "description": "Anchorv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "texture",
          "label": "Texture",
          "description": "Texture parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "normals",
          "label": "Normals",
          "description": "Normals parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "cameraaspect",
          "language": "python"
        },
        {
          "code": "cameraaspectx",
          "language": "python"
        },
        {
          "code": "cameraaspecty",
          "language": "python"
        },
        {
          "code": "modifybounds",
          "language": "python"
        },
        {
          "code": "reverseanchors",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Rectangle_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.828Z",
      "parameterCount": 12
    },
    {
      "name": "Refine",
      "fullName": "Refine SOP",
      "category": "SOP",
      "description": "The Refine SOP allows you to increase the number of CVs in any NURBS, Bzier, or polygonal surface or face without changing its shape. It is also used to decrease the number of CVs within a given tolerance (i.e. a simple but fast method of data reduction).\n\nRefinement and unrefinement work both on faces (polygons, Bzier curves and NURBS curves) and surfaces (primitive meshes, Bzier surfaces and NURBS surfaces). To unrefine a face or a surface you need to specify a parametric interval (not just a single value as in refinement). This allows you to unrefine primitives within arbitrary intervals, either locally or globally. For example, to unrefine the whole primitive choose 0 and 1 as the two parametric boundaries; [0,0.5] will unrefine only the first parametric half of the primitive.\n\nThe interval boundaries are given by the First/Second U/V fields. Since refinement does not need an interval, the Second U/V fields are disabled by default.\n\nThe Tolerance control is only available for unrefinement, and not for refinement. Refinement does not need tolerances because it generates a curve or a surface that is mathematically identical to the original. Unrefinement, however, may tend to smooth out (or \"melt\") the original in a given area. In short, unrefinement is lossy; refinement isn't.\n\nrefineSOP_Class\n\nIf enabled, will refine the primitive at the locations specified above. If the primitive is a NURBS, then a knot is inserted multiple times as described below.\n\nIf enabled, will remove CVs from any NURBS curve or surface, polygon or mesh (points/ rows removed) between First U and Second U, and First V and Second V.\n\nSubdivide refines a primitive such that the subdivision causes a sharp discontinuity if ever displaced. In essence subdivide is equivalent to refine for polygons and Bziers, since any refinement causes a potential discontinuity. In the case of a NURBS it is equivalent to a maximum refinement (i.e. count = primitive basis order - 1).\n\nExtra Information for the Refine SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "firstu",
          "label": "Firstu",
          "description": "Firstu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "domainu1",
          "label": "Domainu1",
          "description": "Domainu1 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "secondu",
          "label": "Secondu",
          "description": "Secondu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "domainu2",
          "label": "Domainu2",
          "description": "Domainu2 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "divsu",
          "label": "Divsu",
          "description": "Divsu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "firstv",
          "label": "Firstv",
          "description": "Firstv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "domainv1",
          "label": "Domainv1",
          "description": "Domainv1 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "secondv",
          "label": "Secondv",
          "description": "Secondv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "domainv2",
          "label": "Domainv2",
          "description": "Domainv2 parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "divsv",
          "label": "Divsv",
          "description": "Divsv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "refineu",
          "label": "Refineu",
          "description": "Refineu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Refine Page"
        },
        {
          "name": "refinev",
          "label": "Refinev",
          "description": "Refinev parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Refine Page"
        },
        {
          "name": "space",
          "label": "Space",
          "description": "Space parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Refine Page"
        },
        {
          "name": "unrefineu",
          "label": "Unrefineu",
          "description": "Unrefineu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Unrefine Page"
        },
        {
          "name": "unrefinev",
          "label": "Unrefinev",
          "description": "Unrefinev parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Unrefine Page"
        },
        {
          "name": "tolu",
          "label": "Tolu",
          "description": "Tolu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Unrefine Page"
        },
        {
          "name": "tolv",
          "label": "Tolv",
          "description": "Tolv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Unrefine Page"
        },
        {
          "name": "subdivspace",
          "label": "Subdivspace",
          "description": "Subdivspace parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Subdivide Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note: Uniform Domain Lengths should be selected if the domain ranges are animating, otherwise the inserted points will be undeterminable as different maximum lengths are encountered.",
        "Note: Uniform Domain Lengths should be selected if the domain ranges are animating, otherwise the inserted points will be undeterminable as different maximum lengths are encountered."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "subdivspace",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Import/Export",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Refine_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.838Z",
      "parameterCount": 19
    },
    {
      "name": "Resample",
      "fullName": "Resample SOP",
      "category": "SOP",
      "description": "The Resample SOP will resample one or more primitives into even length segments. It only applies to polygons so when presented with a NURBS or Bzier curve input, it first converts it to polygons using the Level of Detail parameter.\n\nresampleSOP_Class\n\nTo create a constant length flag with the Resample SOP:\n\nExtra Information for the Resample SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "lod",
          "label": "Lod",
          "description": "Lod parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "edge",
          "label": "Edge",
          "description": "Edge parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "method",
          "label": "Method",
          "description": "Method parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Along Arc",
              "value": "arc",
              "description": "This method of measurement divides the curve itself into even length segments."
            },
            {
              "label": "Along Chord",
              "value": "chord",
              "description": "This method creates straight even-length segments between the evaluated points on the primitive. This is faster but not as accurate."
            }
          ],
          "section": "Page"
        },
        {
          "name": "measure",
          "label": "Measure",
          "description": "Measure parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Even Length Segments",
              "value": "dist",
              "description": "Even-length measures are made along the original input"
            },
            {
              "label": "Along Arc",
              "value": "arc",
              "description": "This method of measurement divides the curve itself into even length segments."
            }
          ],
          "section": "Page"
        },
        {
          "name": "dolength",
          "label": "Dolength",
          "description": "Dolength parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "length",
          "label": "Length",
          "description": "Length parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Even Length Segments",
              "value": "dist",
              "description": "Even-length measures are made along the original input"
            },
            {
              "label": "Along Arc",
              "value": "arc",
              "description": "This method of measurement divides the curve itself into even length segments."
            },
            {
              "label": "Along Chord",
              "value": "chord",
              "description": "This method creates straight even-length segments between the evaluated points on the primitive. This is faster but not as accurate."
            }
          ],
          "section": "Page"
        },
        {
          "name": "dosegs",
          "label": "Dosegs",
          "description": "Dosegs parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "segs",
          "label": "Segs",
          "description": "Segs parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "last",
          "label": "Last",
          "description": "Last parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [
        {
          "title": "Example",
          "content": "To create a constant length flag with the Resample SOP:\nCreate a number of horizontal lines using a Grid SOP: Primitive Type: Polygon; Connectivity: Rows; Size: 3, 1\nAppend a Group SOP: Group: group1; Entity: Points; Number: Enable; Pattern: 0-99:1,10\nAppend a Spring SOP: Source Group: group1; Forces/Wind: 1, 0, 0; Turbulence: 1, 0, -1\nClip each line to a constant length by appending a Resample SOP: Maximum Segments On; Segments: 15\nAppending a Skin SOP whose parameters can stay at the default, and enable the Points display in the Viewport options.\nClick Play to view the result. Adjust the view as necessary.\nToggle the display SOP back and forth between the Spring SOP and the Skin SOP. Notice how the lines are stretched and deformed from their original length by the forces acting on them in the Spring SOP. After resampling, they are a constant length."
        }
      ],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Resample_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.871Z",
      "parameterCount": 10
    },
    {
      "name": "Revolve",
      "fullName": "Revolve SOP",
      "category": "SOP",
      "description": "The Revolve SOP revolves faces to create a surface of revolution. The revolution's direction and origin are represented by guide geometry that resembles a thick line with a cross hair at the centre. The cross hair represents the origin of the revolve as entered in the dialog and the stick represents the direction. Changing any of these parameters will cause the guide to change appropriately.\n\nIf the guide geometry is too distracting, you can disable it by entering the Viewport options dialog and clicking on the Guide geometry button so that it no longer appears indented. This procedure is global and will disable the guide geometry of other SOPs as well.\n\nrevolveSOP_Class\n\nExtra Information for the Revolve SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "surftype",
          "label": "Surftype",
          "description": "Surftype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Revolve Page"
        },
        {
          "name": "origin",
          "label": "Origin",
          "description": "Origin parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Revolve Page"
        },
        {
          "name": "dir",
          "label": "Dir",
          "description": "Dir parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Revolve Page"
        },
        {
          "name": "polys",
          "label": "Polys",
          "description": "Polys parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Revolve Page"
        },
        {
          "name": "imperfect",
          "label": "Imperfect",
          "description": "Imperfect parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Revolve Page"
        },
        {
          "name": "type",
          "label": "Type",
          "description": "Type parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Rows and Columns",
              "value": "rowcol",
              "description": "Both Rows and Columns. Looks like Quads in wire frame display, but all polygons are open (if the primitive type is polygon)."
            }
          ],
          "section": "Detail Page"
        },
        {
          "name": "angle",
          "label": "Angle",
          "description": "Angle parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Triangles",
              "value": "triangles",
              "description": "Build the grid with Triangles."
            },
            {
              "label": "Alternating Triangles",
              "value": "alttriangles",
              "description": "Generates triangles that are opposed; similar to the Triangles option."
            }
          ],
          "section": "Detail Page"
        },
        {
          "name": "divs",
          "label": "Divs",
          "description": "Divs parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        },
        {
          "name": "order",
          "label": "Order",
          "description": "Order parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        },
        {
          "name": "cap",
          "label": "Cap",
          "description": "Cap parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "alttriangles",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Revolve_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.884Z",
      "parameterCount": 11
    },
    {
      "name": "Script",
      "fullName": "Script SOP",
      "category": "SOP",
      "description": "The Script SOP runs a python script each time the Script SOP cooks. It can create, delete and modify points, primitives and their vertices. It can create custom attributes or built-in attributes like Cd (color), uv and N (normals). It can add polygons, bezier curves and meshes among others. It can combine multiple inputs. By default, the Script SOP is created with a docked DAT that contains three Python methods: cook(), onPulse(), and setupParameters(). The cook() method is run each time the Script SOP cooks. The setupParameters() method is run whenever the Setup Parameter button on the Script page is pressed. The onPulse() method is run whenever a custom pulse parameter is pushed.\n\nRefer to Help -> Python Examples, and Help -> Operator Snippets.\n\nNote: Because the Script SOP can get data from anywhere, it's difficult to determine what it procedurally depends on. So every time that a Script OP runs it will make a list of operators, parameters, nodes etc that it depends upon, and when they change, the Script OP will re-cook.\n\nscriptSOP_Class\n\nThese functions are included in the default script located in the docked node script1_callbacks.\n\nExtra Information for the Script SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "callbacks",
          "label": "Callbacks",
          "description": "Callbacks parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Script Page"
        },
        {
          "name": "setuppars",
          "label": "Setuppars",
          "description": "Setuppars parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Script Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note: Because the Script SOP can get data from anywhere, it's difficult to determine what it procedurally depends on. So every time that a Script OP runs it will make a list of operators, parameters, nodes etc that it depends upon, and when they change, the Script OP will re-cook."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "setupParameters()",
          "language": "python"
        },
        {
          "code": "setupParameters()",
          "language": "python"
        },
        {
          "code": "setupParameters()",
          "language": "python"
        },
        {
          "code": "script1_callbacks",
          "language": "python"
        },
        {
          "code": "# me is this DAT.\n# scriptOP is the OP which is cooking.\n\n# press 'Setup Parameters' in the OP to call this function to re-create the parameters.\ndef setupParameters(scriptOP):\n\tscriptOP.appendParFloat('ValueA', page='Custom')\n\tscriptOP.appendParFloat('ValueB', page='Custom')\n\treturn\n\n#called whenever custom pulse parameter is pushed\ndef onPulse(par):\n\treturn\n\ndef cook(scriptOP):\n\tscriptOP.clear()\n\treturn",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Script_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.920Z",
      "parameterCount": 2
    },
    {
      "name": "Select",
      "fullName": "Select SOP",
      "category": "SOP",
      "description": "The Select SOP allows you to reference a SOP from any other location in TouchDesigner. If only one other SOP is referenced, its memory is shared instead of re-created in this SOP.\n\nselectSOP_Class\n\nExtra Information for the Select SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "sop",
          "label": "Sop",
          "description": "Sop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "The Select SOP allows you to reference a SOP from any other location in TouchDesigner. If only one other SOP is referenced, its memory is shared instead of re-created in this SOP.",
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Select_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.934Z",
      "parameterCount": 1
    },
    {
      "name": "Sequence Blend",
      "fullName": "Sequence Blend SOP",
      "category": "SOP",
      "description": "The Sequence Blend SOP allows you do 3D Metamorphosis between shapes and Interpolate point position, colors, point normals, and texture coordinates between shapes.\n\nsequenceblendSOP_Class\n\nExtra Information for the Sequence Blend SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "blend",
          "label": "Blend",
          "description": "Blend parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "dopos",
          "label": "Dopos",
          "description": "Dopos parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "doclr",
          "label": "Doclr",
          "description": "Doclr parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "donml",
          "label": "Donml",
          "description": "Donml parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "douvw",
          "label": "Douvw",
          "description": "Douvw parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "doup",
          "label": "Doup",
          "description": "Doup parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Sequence_Blend_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.945Z",
      "parameterCount": 6
    },
    {
      "name": "Skin",
      "fullName": "Skin SOP",
      "category": "SOP",
      "description": "The Skin SOP takes any number of faces and builds a skin surface over them. If given two or more surfaces, however, the SOP builds four skins, one for each set of boundary curves.\n\nAll face and surface types are valid as long as the input(s) contain only faces or only surfaces. Different face types can be skinned together into one surface. For example, it is possible to skin a cubic open NURBS curve with a polygon and a quintic closed Bzier curve even if the three faces have a different number of control vertices. Similarly, this SOP can skin the boundary curves of surfaces of different types, number of rows, columns, etc.\n\nWhen face types are input, the number of input SOPs and the number of faces in each input establish the skinning method. If only one input exists, a \"linear-skinning\" operation is performed by running a skin across the cross-sections. The result is the classic ruled or skinned surface. If a second input exists, a \"bi-linear skinning\" is performed which computes a cross-skin between the faces in the first input (U cross-sections) and the faces in the second input (V cross-sections). The result is a surface whose name derives from the number of cross-sections in each direction: triangular, square, or multiple boundary surface, as well as a special case of swept surfaces and N-rails. When possible, cross-sections are interpolated as isoparms.\n\nIf you need more control over tangency in the skin, try using the Bridge SOP.\n\nTip: If you have problems with the results being skinned in the wrong order, try inserting a Sort SOP ahead of the Skin SOP, and Sort by Normals.\n\nskinSOP_Class\n\nSingle Boundary Surface - One face, open or closed, is converted into a surface whose boundaries match the shape of the face exactly. Basically, this operation builds an interior area for the face. The surface type will be similar to the type of the face. For example, a NURBS curve yields a NURBS surface. If the curve is highly concave, the result may look less satisfactory than expected.\n\nPatch - Two boundary faces define a ruled surface. The arrows on the two faces indicate the required parametric direction, which must be the same for both faces to avoid a bad twist in the surface. Use the Primitive SOP or the modeler to correct the problem. The surface type will be similar to the most complex type between the two cross-sections. For example, if a polygon and a NURBS curve are skinned together, the surface type will be NURBS. The surface always contains the two faces as two of its boundaries.\n\nLinear Ruled/Skinned Surface - Two or more faces are skinned linearly into a single surface. The arrows on the faces indicate the required parametric direction of each face, which must be the same for all faces to avoid bad twists or flips in the surface. Use the Primitive SOP or the modeler to correct the problem. The surface type will be similar to the most complex type among all cross-sections. For example, if a polygon, a Bzier and a NURBS curve are skinned together, the surface type will be NURBS. The surface goes through each cross-section unless \"Preserve Shape\" if OFF (see parameters below). If the cross-sections have repeated points, or share points between them, the result might not look good when shape preservation is enabled.\n\nA Special Swept Surface - This case does a bilinear skin and requires two inputs. The U face (1st input) is swept along the V face (second input). The two faces do not need to touch at their endpoints. If their endpoints coincide, though, the two of the surface's boundaries will match the two faces exactly. The surface type will be similar to the most complex type of the two faces. For example, if a polygon and a Bzier curve are skinned together, the surface type will be Bzier.\n\nTriangular Surface - This case requires two inputs for the bilinear skin. One input has two faces; the other input, just one. The endpoints of the faces need not coincide, but if they do, the surface boundaries will match the face shapes exactly. Basically, the three faces define an interior area to be filled by a surface. The surface type will be similar to the most complex type among the three boundary faces. For example, if the faces are Bzier and NURBS curves, the surface will be a NURBS primitive.\n\nSquare Surface - Four faces define the outer boundaries of a surface. This case requires two inputs for the bilinear skin: the two U boundaries (1st input) are cross-skinned with the V boundaries (the 2nd input). The endpoints of the faces need not coincide, but if they do, the surface boundaries will match the face shapes exactly. Basically, the four faces define an interior area to be filled by a surface. The surface type will be similar to the most complex type among the four boundary faces. For example, if the faces are polygons and NURBS curves, the surface will be a NURBS primitive.\n\nA Special Case of M-rails - One input contains the rails, and the other input the cross-section. The cross-section is swept along the rails to form a surface. The arrows on the faces indicate the required parametric direction of each face, which must be the same for all faces to avoid bad twists or flips in the surface. Use the Primitive SOP or the modeler to correct the problem. The surface type will be similar to the most complex type among both rails and cross-section. For example, if the faces are polygons and NURBS curves, the surface will be a NURBS primitive.\n\nMultiple-Boundary Surface - Not to be confused with N-ary patches. This case generalizes the square surface concept by allowing more interior cross-sections both in U and V. If no interior cross-sections exist, this case reduces to a square surface. The surface interpolates all the boundaries and the interior cross-sections. The result improves when the faces intersect. The arrows on the faces indicate the required parametric direction of each face, which must be the same for all faces to avoid bad twists or flips in the surface. Use the Primitive SOP or the modeler to correct the problem. The surface type will be similar to the most complex type among all faces. For example, if the faces are polygons and NURBS curves, the surface will be a NURBS primitive.\n\nExtra Information for the Skin SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "uprims",
          "label": "Uprims",
          "description": "Uprims parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "vprims",
          "label": "Vprims",
          "description": "Vprims parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "surftype",
          "label": "Surftype",
          "description": "Surftype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "keepshape",
          "label": "Keepshape",
          "description": "Keepshape parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "closev",
          "label": "Closev",
          "description": "Closev parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "force",
          "label": "Force",
          "description": "Force parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "orderv",
          "label": "Orderv",
          "description": "Orderv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "skinops",
          "label": "Skinops",
          "description": "Skinops parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "inc",
          "label": "Inc",
          "description": "Inc parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "prim",
          "label": "Prim",
          "description": "Prim parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Rows and Columns",
              "value": "rowcol",
              "description": "Both Rows and Columns. Looks like Quads in wire frame display, but all polygons are open (if the primitive type is polygon). Compare them in the Model Editor."
            }
          ],
          "section": "Page"
        },
        {
          "name": "polys",
          "label": "Polys",
          "description": "Polys parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Tip: If you have problems with the results being skinned in the wrong order, try inserting a Sort SOP ahead of the Skin SOP, and Sort by Normals."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "alttriangles",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Import/Export",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Skin_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.982Z",
      "parameterCount": 11
    },
    {
      "name": "Sort",
      "fullName": "Sort SOP",
      "category": "SOP",
      "description": "The Sort SOP allows you to sort points and primitives in different ways. Sometimes the primitives are arranged in the desired order, but the point order is not. There are many possible combinations. To sort vertices, use the Primitive SOP.\n\nsortSOP_Class\n\nParticles are sorted on a per-particle system basis. That is if you have a SOP with 2 different particle system primitives, they are sorted independently of each other.\n\nExtra Information for the Sort SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "ptsort",
          "label": "Ptsort",
          "description": "Ptsort parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Point Page"
        },
        {
          "name": "pointseed",
          "label": "Pointseed",
          "description": "Pointseed parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Point Page"
        },
        {
          "name": "pointoffset",
          "label": "Pointoffset",
          "description": "Pointoffset parameter",
          "type": "XY",
          "default": "",
          "range": null,
          "options": null,
          "section": "Point Page"
        },
        {
          "name": "pointprox",
          "label": "Pointprox",
          "description": "Pointprox parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Point Page"
        },
        {
          "name": "pointobj",
          "label": "Pointobj",
          "description": "Pointobj parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Point Page"
        },
        {
          "name": "pointdir",
          "label": "Pointdir",
          "description": "Pointdir parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Point Page"
        },
        {
          "name": "primsort",
          "label": "Primsort",
          "description": "Primsort parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Primitive Page"
        },
        {
          "name": "primseed",
          "label": "Primseed",
          "description": "Primseed parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Primitive Page"
        },
        {
          "name": "primoffset",
          "label": "Primoffset",
          "description": "Primoffset parameter",
          "type": "XY",
          "default": "",
          "range": null,
          "options": null,
          "section": "Primitive Page"
        },
        {
          "name": "primprox",
          "label": "Primprox",
          "description": "Primprox parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Primitive Page"
        },
        {
          "name": "primobj",
          "label": "Primobj",
          "description": "Primobj parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Primitive Page"
        },
        {
          "name": "primdir",
          "label": "Primdir",
          "description": "Primdir parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Primitive Page"
        },
        {
          "name": "partsort",
          "label": "Partsort",
          "description": "Partsort parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particle Page"
        },
        {
          "name": "partreverse",
          "label": "Partreverse",
          "description": "Partreverse parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particle Page"
        },
        {
          "name": "partoffset",
          "label": "Partoffset",
          "description": "Partoffset parameter",
          "type": "XY",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particle Page"
        },
        {
          "name": "partprox",
          "label": "Partprox",
          "description": "Partprox parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particle Page"
        },
        {
          "name": "partobj",
          "label": "Partobj",
          "description": "Partobj parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particle Page"
        },
        {
          "name": "partdir",
          "label": "Partdir",
          "description": "Partdir parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Particle Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "pointoffset",
          "language": "python"
        },
        {
          "code": "partreverse",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Sort_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:17.997Z",
      "parameterCount": 18
    },
    {
      "name": "Sphere",
      "fullName": "Sphere SOP",
      "category": "SOP",
      "description": "The Sphere SOP generates spherical objects of different geometry types. It is capable of creating non-uniform scalable spheres of all geometry types.\n\nIf an input is provided, the sphere's radius is automatically determined as a function of the input's bounding geometry.\n\nsphereSOP_Class\n\nExtra Information for the Sphere SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditorwikieditor2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "type",
          "label": "Type",
          "description": "Type parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Rows and Columns",
              "value": "rowcol",
              "description": "Both Rows and Columns. Looks like Quads in wire frame display, but all polygons are open (if the primitive type is polygon)."
            },
            {
              "label": "By Primitive Type",
              "value": "byprimtype",
              "description": "Adds vertex UV coordinates."
            }
          ],
          "section": "Page"
        },
        {
          "name": "surftype",
          "label": "Surftype",
          "description": "Surftype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "orientbounds",
          "label": "Orientbounds",
          "description": "Orientbounds parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "modifybounds",
          "label": "Modifybounds",
          "description": "Modifybounds parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "rord",
          "label": "Rord",
          "description": "Rord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "rad",
          "label": "Rad",
          "description": "Rad parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            },
            {
              "label": "Rows",
              "value": "rows",
              "description": "Creates horizontal lines."
            },
            {
              "label": "Columns",
              "value": "cols",
              "description": "Creates vertical lines."
            },
            {
              "label": "Rows and Columns",
              "value": "rowcol",
              "description": "Both Rows and Columns. Looks like Quads in wire frame display, but all polygons are open (if the primitive type is polygon)."
            },
            {
              "label": "Triangles",
              "value": "triangles",
              "description": "Build the grid with Triangles."
            },
            {
              "label": "Quadrilaterals",
              "value": "quads",
              "description": "Generates sides composed of quadrilaterals (default)."
            },
            {
              "label": "Alternating Triangles",
              "value": "alttriangles",
              "description": "Generates triangles that are opposed; similar to the Triangles option."
            },
            {
              "label": "Off",
              "value": "off",
              "description": "No UV coordinates added to surface."
            },
            {
              "label": "By Primitive Type",
              "value": "byprimtype",
              "description": "Adds vertex UV coordinates."
            }
          ],
          "section": "Page"
        },
        {
          "name": "r",
          "label": "R",
          "description": "R parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            },
            {
              "label": "Rows",
              "value": "rows",
              "description": "Creates horizontal lines."
            },
            {
              "label": "Columns",
              "value": "cols",
              "description": "Creates vertical lines."
            },
            {
              "label": "Rows and Columns",
              "value": "rowcol",
              "description": "Both Rows and Columns. Looks like Quads in wire frame display, but all polygons are open (if the primitive type is polygon)."
            },
            {
              "label": "Triangles",
              "value": "triangles",
              "description": "Build the grid with Triangles."
            },
            {
              "label": "Quadrilaterals",
              "value": "quads",
              "description": "Generates sides composed of quadrilaterals (default)."
            },
            {
              "label": "Alternating Triangles",
              "value": "alttriangles",
              "description": "Generates triangles that are opposed; similar to the Triangles option."
            },
            {
              "label": "Off",
              "value": "off",
              "description": "No UV coordinates added to surface."
            },
            {
              "label": "By Primitive Type",
              "value": "byprimtype",
              "description": "Adds vertex UV coordinates."
            }
          ],
          "section": "Page"
        },
        {
          "name": "reverseanchors",
          "label": "Reverseanchors",
          "description": "Reverseanchors parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "anchoru",
          "label": "Anchoru",
          "description": "Anchoru parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "anchorv",
          "label": "Anchorv",
          "description": "Anchorv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "anchorw",
          "label": "Anchorw",
          "description": "Anchorw parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "orient",
          "label": "Orient",
          "description": "Orient parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "freq",
          "label": "Freq",
          "description": "Freq parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "rows",
          "label": "Rows",
          "description": "Creates horizontal lines.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Rows",
              "value": "rows",
              "description": "Creates horizontal lines."
            },
            {
              "label": "Rows and Columns",
              "value": "rowcol",
              "description": "Both Rows and Columns. Looks like Quads in wire frame display, but all polygons are open (if the primitive type is polygon)."
            }
          ],
          "section": "Page"
        },
        {
          "name": "cols",
          "label": "Cols",
          "description": "Creates vertical lines.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Columns",
              "value": "cols",
              "description": "Creates vertical lines."
            }
          ],
          "section": "Page"
        },
        {
          "name": "orderu",
          "label": "Orderu",
          "description": "Orderu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "orderv",
          "label": "Orderv",
          "description": "Orderv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "imperfect",
          "label": "Imperfect",
          "description": "Imperfect parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "upole",
          "label": "Upole",
          "description": "Upole parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "accurate",
          "label": "Accurate",
          "description": "Accurate parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "texture",
          "label": "Texture",
          "description": "Texture parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "normals",
          "label": "Normals",
          "description": "Normals parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "alttriangles",
          "language": "python"
        },
        {
          "code": "orientbounds",
          "language": "python"
        },
        {
          "code": "modifybounds",
          "language": "python"
        },
        {
          "code": "reverseanchors",
          "language": "python"
        },
        {
          "code": "equirectangularin",
          "language": "python"
        },
        {
          "code": "equirectangularout",
          "language": "python"
        },
        {
          "code": "equiazimuth",
          "language": "python"
        },
        {
          "code": "equiazimuth360",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Primitives",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Sphere_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.029Z",
      "parameterCount": 23
    },
    {
      "name": "Spring",
      "fullName": "Spring SOP",
      "category": "SOP",
      "description": "The Spring SOP deforms and moves the input geometry using spring \"forces\" on the edges of polygons and on masses attached to each point.\n\nGeometry is deformed using forces that simulate simple physics on the points and edges. A simulated \"mass\" is assigned to each point. Its primitive edges act as \"springs\" which oppose the forces, and pull the points back toward their original positions. When the springs are stretched by the forces, they try to pull the points back. The points do not stop moving when they return to their original positions, however, but continue to oscillate because of their mass, until the oscillation dies out.\n\nForces which act upon the points are as follows:\n\nThe greater the drag value, or smaller the mass, the faster the oscillation dies out.\n\nspringSOP_Class\n\nExtra Information for the Spring SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "timepreroll",
          "label": "Timepreroll",
          "description": "Timepreroll parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "State Page"
        },
        {
          "name": "timeinc",
          "label": "Timeinc",
          "description": "Timeinc parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "State Page"
        },
        {
          "name": "accurate",
          "label": "Accurate",
          "description": "Accurate parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "State Page"
        },
        {
          "name": "attractmode",
          "label": "Attractmode",
          "description": "Attractmode parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "State Page"
        },
        {
          "name": "reset",
          "label": "Reset",
          "description": "Reset parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "State Page"
        },
        {
          "name": "resetpulse",
          "label": "Resetpulse",
          "description": "Resetpulse parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "State Page"
        },
        {
          "name": "external",
          "label": "External",
          "description": "External parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Forces Page"
        },
        {
          "name": "wind",
          "label": "Wind",
          "description": "Wind parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Forces Page"
        },
        {
          "name": "turb",
          "label": "Turb",
          "description": "Turb parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Forces Page"
        },
        {
          "name": "period",
          "label": "Period",
          "description": "Period parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Forces Page"
        },
        {
          "name": "seed",
          "label": "Seed",
          "description": "Seed parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Forces Page"
        },
        {
          "name": "fixed",
          "label": "Fixed",
          "description": "Fixed parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Nodes Page"
        },
        {
          "name": "revertfixed",
          "label": "Revertfixed",
          "description": "Revertfixed parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Nodes Page"
        },
        {
          "name": "copygroups",
          "label": "Copygroups",
          "description": "Copygroups parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Nodes Page"
        },
        {
          "name": "domass",
          "label": "Domass",
          "description": "Domass parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Nodes Page"
        },
        {
          "name": "mass",
          "label": "Mass",
          "description": "Mass parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Nodes Page"
        },
        {
          "name": "dodrag",
          "label": "Dodrag",
          "description": "Dodrag parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Nodes Page"
        },
        {
          "name": "drag",
          "label": "Drag",
          "description": "Drag parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Nodes Page"
        },
        {
          "name": "springbehavior",
          "label": "Springbehavior",
          "description": "Springbehavior parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Nodes Page"
        },
        {
          "name": "springk",
          "label": "Springk",
          "description": "Springk parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Nodes Page"
        },
        {
          "name": "tension",
          "label": "Tension",
          "description": "Tension parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Nodes Page"
        },
        {
          "name": "limitpos",
          "label": "Limitpos",
          "description": "Limitpos parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Limits Page"
        },
        {
          "name": "limitneg",
          "label": "Limitneg",
          "description": "Limitneg parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Limits Page"
        },
        {
          "name": "hit",
          "label": "Hit",
          "description": "Hit parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Limits Page"
        },
        {
          "name": "gaintan",
          "label": "Gaintan",
          "description": "Gaintan parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Limits Page"
        },
        {
          "name": "gainnorm",
          "label": "Gainnorm",
          "description": "Gainnorm parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Limits Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        },
        {
          "type": "SOP",
          "description": "Input 2:  -",
          "index": 2
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note: Never set this parameter greater than 1/$FPS."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "timepreroll",
          "language": "python"
        },
        {
          "code": "attractmode",
          "language": "python"
        },
        {
          "code": "revertfixed",
          "language": "python"
        },
        {
          "code": "springbehavior",
          "language": "python"
        },
        {
          "code": "project.cookRate",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Import/Export",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Spring_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.044Z",
      "parameterCount": 26
    },
    {
      "name": "Sprinkle",
      "fullName": "Sprinkle SOP",
      "category": "SOP",
      "description": "The Sprinkle SOP is used to add points to either the surface or the volume of a SOP. You can create points on a surface, or within a closed volume based on the Method menu. The Surface method keeps the distribution of points constant per unit area of surface, whereas Per-Primitive gives each primitive, usually triangles, a constant number per primitive no matter their size.\n\nThe second input is used when you are scattering on a deforming surface. You generally don't want the distribution of points to jump while deforming, so you give the deformed surface as second input and the un-deformed surface as the first input. The Sprinkle SOP will then distribute points on the un-deformed surface, and then put them on their equivalent place on the deformed surface.\n\nsprinkleSOP_Class\n\nExtra Information for the Sprinkle SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditor2021.10000before 2021.10000",
      "parameters": [
        {
          "name": "seed",
          "label": "Seed",
          "description": "Seed parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Sprinkle Page"
        },
        {
          "name": "method",
          "label": "Method",
          "description": "Method parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Bounding Box",
              "value": "boundingbox",
              "description": "Points are distributed within the bounding box volume of the geometry. This can be faster, though less accurate than the volume method."
            }
          ],
          "section": "Sprinkle Page"
        },
        {
          "name": "numpoints",
          "label": "Numpoints",
          "description": "Numpoints parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Sprinkle Page"
        },
        {
          "name": "consolidate",
          "label": "Consolidate",
          "description": "Consolidate parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Sprinkle Page"
        },
        {
          "name": "neardist",
          "label": "Neardist",
          "description": "Neardist parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Sprinkle Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "boundingbox",
          "language": "python"
        },
        {
          "code": "consolidate",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Import/Export",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Sprinkle_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.053Z",
      "parameterCount": 5
    },
    {
      "name": "Sprite",
      "fullName": "Sprite SOP",
      "category": "SOP",
      "description": "The Sprite SOP creates geometry (quad sprites) at point positions defined by the CHOP referenced in the XYZ CHOP parameter.\n\nspriteSOP_Class\n\nExtra Information for the Sprite SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "xyzchop",
          "label": "Xyzchop",
          "description": "Xyzchop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "camera",
          "label": "Camera",
          "description": "Camera parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "widthchop",
          "label": "Widthchop",
          "description": "Widthchop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "colorchop",
          "label": "Colorchop",
          "description": "Colorchop parameter",
          "type": "RGB",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "alphachop",
          "label": "Alphachop",
          "description": "Alphachop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "perspectivewidth",
          "label": "Perspectivewidth",
          "description": "Perspectivewidth parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "constantwidth",
          "label": "Constantwidth",
          "description": "Constantwidth parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "constantwidthnear",
          "label": "Constantwidthnear",
          "description": "Constantwidthnear parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "constantwitdhfar",
          "label": "Constantwitdhfar",
          "description": "Constantwitdhfar parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "falloffstart",
          "label": "Falloffstart",
          "description": "Falloffstart parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "falloffend",
          "label": "Falloffend",
          "description": "Falloffend parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "NOTE: Inbetween Falloff Start and Falloff End the width is determined using a half-cosine falloff between the two values."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "perspectivewidth",
          "language": "python"
        },
        {
          "code": "constantwidth",
          "language": "python"
        },
        {
          "code": "constantwidthnear",
          "language": "python"
        },
        {
          "code": "constantwitdhfar",
          "language": "python"
        },
        {
          "code": "falloffstart",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Sprite_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.087Z",
      "parameterCount": 11
    },
    {
      "name": "Stitch",
      "fullName": "Stitch SOP",
      "category": "SOP",
      "description": "The Stitch SOP is used to stretch two curves or surfaces to cover a smooth area. It can also be used to create certain types of upholstered fabrics such as cushions and parachutes.\n\nIf a second input is given, it must contain one surface that the primitives in the first input can stitch to. The left input can contain either faces or surfaces; in either case, each primitive in the first input is stitched to a parametric area of the surface in the second input in such a way that the parametric area allocated to each primitive is the same and the size of all areas added together equals the parametric range specified in the R Width (see below).\n\nPlease refer to the Align SOP for a discussion of \"left\" and \"right\" primitives as well as the option of an auxiliary input.\n\nstitchSOP_Class\n\nExtra Information for the Stitch SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "stitchop",
          "label": "Stitchop",
          "description": "Stitchop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "inc",
          "label": "Inc",
          "description": "Inc parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "loop",
          "label": "Loop",
          "description": "Loop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "dir",
          "label": "Dir",
          "description": "Dir parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "tolerance",
          "label": "Tolerance",
          "description": "Tolerance parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "bias",
          "label": "Bias",
          "description": "Bias parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "leftuv",
          "label": "Leftuv",
          "description": "Leftuv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "rightuv",
          "label": "Rightuv",
          "description": "Rightuv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "lrwidth",
          "label": "Lrwidth",
          "description": "Lrwidth parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "dostitch",
          "label": "Dostitch",
          "description": "Dostitch parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "dotangent",
          "label": "Dotangent",
          "description": "Dotangent parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "sharp",
          "label": "Sharp",
          "description": "Sharp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "fixed",
          "label": "Fixed",
          "description": "Fixed parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "lrscale",
          "label": "Lrscale",
          "description": "Lrscale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Stitch_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.106Z",
      "parameterCount": 15
    },
    {
      "name": "Subdivide",
      "fullName": "Subdivide SOP",
      "category": "SOP",
      "description": "The Subdivide SOP takes an input polygon surface (which can be piped into one or both inputs), and divides each face to create a smoothed polygon surface using a Catmull-Clark subdivision algorithm. Especially useful for avoiding the angular appearance often associated with polygonal models - without adding lots of extra geometry to the entire object. For best results, polygons should be convex and relatively uniform in distribution.\n\nSubdivision surfaces also allows you to create the smoothed surface based on a polygon control shape. As the control shape changes, so does the smooth shape within.\n\nsubdivideSOP_Class\n\nCreases control the strength of pull of the polygon faces on the subdivision surfaces, much like a magnet drawing the surface towards the reference polygon. They can be applied selectively using the Creases field to specify an input group to use.\n\nCreases work by controlling the strength of the pull of the polygon faces on the subdivision surfaces, like a magnet drawing the surface towards the reference polygon. The figure below shows the result of setting the Crease Weight to 0, 1, 2 reading from left to right. As the weight increases so the pull effect strengthens and the shape approaches the reference polygon.\n\nIf there is a second input:\n\nIf there is no second input:\n\nWhen defining crease weights on shared edges, the maximum of the weights of the shared edges is used. For example, if two polygons share an edge and the primitive attribute is used, the maximum of the crease weight will be used for the shared edge.\n\nCracks can be closed by either Pull Cracks Closed or Stitch Cracks Together, so only one of these two options can be chosen at a time from the Surrounding Faces parameter. Bias applies only to Pulling, and is disabled when Stitching is chosen.\n\nA crack is formed by a single edge on the non-subdivided area and multiple edges on the subdivided area. The Surrounding Faces menu determines what will will happen to the single edge on the non-subdivided area, and in more generally, to the polygon containing this edge.\n\nIf No Edge Division is chosen and cracks are pulled closed, all the points on the subdivided edges are pulled (i.e. moved) to the closest points on the non-subdivided edges. Bias is disabled, when No Edge Division is specified.\n\nIf cracks are pulled with the Divide Edges option, the non-subdivided edge is split into many sections, so that each each point on the non-subdivided edge now corresponds to a new point on the subdivided edge. Then, points on the newly divided edge are joined with the points on the subdivided boundary. A Bias of 1 will place these joined points along the subdivided boundary. A Bias of 0 will place them along the non- subdivided boundary (and values between 0 and 1 will place them somewhere inbetween).\n\nPulling cracks with the Triangulate option will do exactly the same thing as Divide Edges, except it will also triangulate the non-subdivided polygon. This is desirable because pulling the non-subdivided boundary towards the curved subdivided boundary will likely generate a non-planar polygon, so Triangulate will divide this polygon into smaller (planar) ones. Pulling cracks with a Bias of 1 and triangulating usually produces the nicest results.\n\nThe Triangulate option is necessary because the Divide SOP is not designed to handle (very) non-planar polygons.\n\nThe Stitch Cracks Together option, on the other hand, inserts new polygons (triangles) to close up the cracks. When No Edge Division is chosen, many triangles are created, each having one vertex on one point of the non-subdivided edge.\n\nWhen Divide Boundary Edges is chosen, the non-subdivided edge is divided, so there are more points available to be used for triangles. The resulting triangles are more regularly shaped (not as long and skinny). The Triangulate option will again triangulate the non-subdivided polygon, although this option is less likely to be used becuase this polygon should remain planar during stitching.\n\nBelow, a Subdivide SOP is used to create a subdivision surface from a Box SOP. The Depth of the subdivision is set to 2. The Facet SOP consolidates the points so that the box faces are treated as a unit.\n\nExtra Information for the Subdivide SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "subdivide",
          "label": "Subdivide",
          "description": "Subdivide parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Pull Cracks Closed",
              "value": "pull",
              "description": "Move points on boundary of subdivided area in order to close cracks formed during the subdivision."
            },
            {
              "label": "No Edge Division",
              "value": "nodiv",
              "description": "When No Edge Division is chosen, many triangles are created, each having one vertex on one point of the non-subdivided edge."
            },
            {
              "label": "Divide Edges",
              "value": "edges",
              "description": "Divides edges surrounding the subdivided area when pulling or stitching cracks by inserting new polygons (triangles) to close up the cracks."
            },
            {
              "label": "Triangulate",
              "value": "triangulate",
              "description": "Does exactly the same thing as Divide Edges, except it also triangulates the non-subdivided polygon. This is desirable because pulling the non-subdivided boundary towards the curved subdivided boundary will likely generate a non-planar polygon, so Triangulate will divide this polygon into smaller (planar) ones. Pulling cracks with a Bias of 1 and triangulating usually produces the nicest results."
            }
          ],
          "section": "Page"
        },
        {
          "name": "creases",
          "label": "Creases",
          "description": "Creases parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "iterations",
          "label": "Iterations",
          "description": "Iterations parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "overridecrease",
          "label": "Overridecrease",
          "description": "Overridecrease parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "creaseweight",
          "label": "Creaseweight",
          "description": "Creaseweight parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "outputcrease",
          "label": "Outputcrease",
          "description": "Outputcrease parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "outcreasegroup",
          "label": "Outcreasegroup",
          "description": "Outcreasegroup parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "closeholes",
          "label": "Closeholes",
          "description": "Closeholes parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "surroundpoly",
          "label": "Surroundpoly",
          "description": "Surroundpoly parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "bias",
          "label": "Bias",
          "description": "Bias parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Triangulate",
              "value": "triangulate",
              "description": "Does exactly the same thing as Divide Edges, except it also triangulates the non-subdivided polygon. This is desirable because pulling the non-subdivided boundary towards the curved subdivided boundary will likely generate a non-planar polygon, so Triangulate will divide this polygon into smaller (planar) ones. Pulling cracks with a Bias of 1 and triangulating usually produces the nicest results."
            }
          ],
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [
        {
          "title": "Example",
          "content": "Below, a Subdivide SOP is used to create a subdivision surface from a Box SOP. The Depth of the subdivision is set to 2. The Facet SOP consolidates the points so that the box faces are treated as a unit."
        }
      ],
      "tips": [
        "Tip: The default is to have the Override Crease Weight Attribute enabled. So you can simply set a value which applies to all the creases. You can, however, set a crease attribute using the Vertex or Primitive SOPs which allows for more control."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "creaseweight",
          "language": "python"
        },
        {
          "code": "creaseweight",
          "language": "python"
        },
        {
          "code": "creaseweight",
          "language": "python"
        },
        {
          "code": "creaseweight",
          "language": "python"
        },
        {
          "code": "creasesharpness",
          "language": "python"
        },
        {
          "code": "overridecrease",
          "language": "python"
        },
        {
          "code": "creaseweight",
          "language": "python"
        },
        {
          "code": "creaseweight",
          "language": "python"
        },
        {
          "code": "outputcrease",
          "language": "python"
        },
        {
          "code": "outcreasegroup",
          "language": "python"
        },
        {
          "code": "surroundpoly",
          "language": "python"
        },
        {
          "code": "triangulate",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Modify",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Subdivide_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.140Z",
      "parameterCount": 10
    },
    {
      "name": "Superquad",
      "fullName": "Superquad SOP",
      "category": "SOP",
      "description": "The Superquad SOP generates an isoquadric surface. This produces a spherical shape that is similar to a metaball, with the difference that it doesn't change it's shape in response to what surrounds it. You can change the XY Exponent of an isoquadric surface to define it to be more \"squarish\" or \"starish\" in shape. Also, an isoquadric surface is always defined as a polygonal or mesh type geometry.\n\nsuperquadSOP_Class\n\nExtra Information for the Superquad SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "type",
          "label": "Type",
          "description": "Type parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Rows and Columns",
              "value": "rowcol",
              "description": "Both Rows and Columns. Looks like Quads in wire frame display, but all polygons are open (if the primitive type is polygon)."
            }
          ],
          "section": "Page"
        },
        {
          "name": "surftype",
          "label": "Surftype",
          "description": "Surftype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "modifybounds",
          "label": "Modifybounds",
          "description": "Modifybounds parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "rad",
          "label": "Rad",
          "description": "Rad parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            },
            {
              "label": "Rows",
              "value": "rows",
              "description": "Creates horizontal lines."
            },
            {
              "label": "Columns",
              "value": "cols",
              "description": "Creates vertical lines."
            },
            {
              "label": "Rows and Columns",
              "value": "rowcol",
              "description": "Both Rows and Columns. Looks like Quads in wire frame display, but all polygons are open (if the primitive type is polygon)."
            },
            {
              "label": "Triangles",
              "value": "triangles",
              "description": "Build the grid with Triangles."
            },
            {
              "label": "Quadrilaterals",
              "value": "quads",
              "description": "Generates sides composed of quadrilaterals (default)."
            },
            {
              "label": "Alternating Triangles",
              "value": "alttriangles",
              "description": "Generates triangles that are opposed; similar to the Triangles option."
            },
            {
              "label": "Off",
              "value": "off",
              "description": "No UV coordinates added to surface."
            }
          ],
          "section": "Page"
        },
        {
          "name": "reverseanchors",
          "label": "Reverseanchors",
          "description": "Reverseanchors parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "anchoru",
          "label": "Anchoru",
          "description": "Anchoru parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "anchorv",
          "label": "Anchorv",
          "description": "Anchorv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "anchorw",
          "label": "Anchorw",
          "description": "Anchorw parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "orient",
          "label": "Orient",
          "description": "Orient parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "rows",
          "label": "Rows",
          "description": "Creates horizontal lines.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Rows",
              "value": "rows",
              "description": "Creates horizontal lines."
            },
            {
              "label": "Rows and Columns",
              "value": "rowcol",
              "description": "Both Rows and Columns. Looks like Quads in wire frame display, but all polygons are open (if the primitive type is polygon)."
            }
          ],
          "section": "Page"
        },
        {
          "name": "cols",
          "label": "Cols",
          "description": "Creates vertical lines.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Columns",
              "value": "cols",
              "description": "Creates vertical lines."
            }
          ],
          "section": "Page"
        },
        {
          "name": "expxy",
          "label": "Expxy",
          "description": "Expxy parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "expz",
          "label": "Expz",
          "description": "Expz parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "upole",
          "label": "Upole",
          "description": "Upole parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "cusp",
          "label": "Cusp",
          "description": "Cusp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "angle",
          "label": "Angle",
          "description": "Angle parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Triangles",
              "value": "triangles",
              "description": "Build the grid with Triangles."
            },
            {
              "label": "Alternating Triangles",
              "value": "alttriangles",
              "description": "Generates triangles that are opposed; similar to the Triangles option."
            }
          ],
          "section": "Page"
        },
        {
          "name": "texture",
          "label": "Texture",
          "description": "Texture parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "normals",
          "label": "Normals",
          "description": "Normals parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "alttriangles",
          "language": "python"
        },
        {
          "code": "modifybounds",
          "language": "python"
        },
        {
          "code": "reverseanchors",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Superquad_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.165Z",
      "parameterCount": 19
    },
    {
      "name": "Surfsect",
      "fullName": "Surfsect SOP",
      "category": "SOP",
      "description": "The Surfsect SOP performs boolean operations with NURBS and Bezier surfaces, or only generates profiles where the surfaces intersect. The individual surfaces do not need to be solids (i.e. wrap in U and V), nor do they need to form a solid as a group (for example, you can cut a grid with a sphere).\n\nThe surfaces in the first input are denoted by \"A\" in the parameter list. The surfaces in the second input are denoted by \"B\". The entire A set is intersected with the B set, which allows for true csg operations with spline surfaces. Thus, if A forms a solid and B forms a solid, any boolean operation between A and B will produce a solid. If either set has an open topology, the result will also be open.\n\nWhat is deemed to be the inside and outside of a trim region depends on the direction of the surface normals. If necessary, use the Primitive SOP to reverse the surface normals by reversing the surface's U or V direction.\n\nsurfsectSOP_Class\n\nEnables boolean operations between the surfaces in A and B:\n\nJust create profiles where the surfaces intersect.\n\nExtra Information for the Surfsect SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "groupa",
          "label": "Groupa",
          "description": "Groupa parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "groupb",
          "label": "Groupb",
          "description": "Groupb parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "tol3d",
          "label": "Tol3d",
          "description": "Tol3d parameter",
          "type": "XYZ",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "tol2d",
          "label": "Tol2d",
          "description": "Tol2d parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "step",
          "label": "Step",
          "description": "Step parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "boolop",
          "label": "Boolop",
          "description": "Boolop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Boolean Page"
        },
        {
          "name": "insidea",
          "label": "Insidea",
          "description": "Insidea parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Boolean Page"
        },
        {
          "name": "insideb",
          "label": "Insideb",
          "description": "Insideb parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Boolean Page"
        },
        {
          "name": "outsidea",
          "label": "Outsidea",
          "description": "Outsidea parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Boolean Page"
        },
        {
          "name": "outsideb",
          "label": "Outsideb",
          "description": "Outsideb parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Boolean Page"
        },
        {
          "name": "target",
          "label": "Target",
          "description": "Target parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Generate Profiles Page"
        },
        {
          "name": "creategroupa",
          "label": "Creategroupa",
          "description": "Creategroupa parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Generate Profiles Page"
        },
        {
          "name": "profilesa",
          "label": "Profilesa",
          "description": "Profilesa parameter",
          "type": "File",
          "default": "",
          "range": null,
          "options": null,
          "section": "Generate Profiles Page"
        },
        {
          "name": "creategroupb",
          "label": "Creategroupb",
          "description": "Creategroupb parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Generate Profiles Page"
        },
        {
          "name": "profilesb",
          "label": "Profilesb",
          "description": "Profilesb parameter",
          "type": "File",
          "default": "",
          "range": null,
          "options": null,
          "section": "Generate Profiles Page"
        },
        {
          "name": "mindholes",
          "label": "Mindholes",
          "description": "Mindholes parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Generate Profiles Page"
        },
        {
          "name": "join",
          "label": "Join",
          "description": "Join parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Generate Profiles Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "creategroupa",
          "language": "python"
        },
        {
          "code": "creategroupb",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Surfsect_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.156Z",
      "parameterCount": 17
    },
    {
      "name": "Sweep",
      "fullName": "Sweep SOP",
      "category": "SOP",
      "description": "The Sweep SOP sweeps primitives in the Cross-section input along Backbone Source primitive(s), creating ribbon and tube-like shapes. The cross-section primitives are placed at each point of the backbone perpendicular to it. The Backbone Source can have one or several primitives. If there is more than one, Sweep will sweep the cross section along each one.\n\nA backbone is a primitive curve that can be open or closed, but must have at least two points. The cross section input can also have multiple primitives, and can be assigned to the backbone in various ways. The origin of the cross section primitive is placed at a point on the backbone by default, but you can also choose a point number of the cross section to place. In most cases, it is best to build 1the cross section primitives in the XY plane; Sweep will automatically orient them properly along the backbone. The orientation of the cross section is based on the direction of the backbone line segment and the positive Z axis. So vertical movement in the backbone will result in the cross section rotating around backbone axis. For example, if you create the cross section in the XY plane, you can maintain its orientation (+Y Up) by building the backbone in the XZ plane.\n\nIf the backbone primitive(s) have point colors or texture coordinates, they will be maintained and applied to the cross section primitives.\n\nsweepSOP_Class\n\nExtra Information for the Sweep SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditor2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "xgrp",
          "label": "Xgrp",
          "description": "Xgrp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Sweep Page"
        },
        {
          "name": "pathgrp",
          "label": "Pathgrp",
          "description": "Pathgrp parameter",
          "type": "File",
          "default": "",
          "range": null,
          "options": null,
          "section": "Sweep Page"
        },
        {
          "name": "refgrp",
          "label": "Refgrp",
          "description": "Refgrp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Sweep Page"
        },
        {
          "name": "cycle",
          "label": "Cycle",
          "description": "This cycles through incoming primitives when placing them on a backbone. i.e. Start with 0 at vertex 0, primitive 1 > vertex 1, etc.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Cycle Primitives",
              "value": "cycle",
              "description": "This cycles through incoming primitives when placing them on a backbone. i.e. Start with 0 at vertex 0, primitive 1 > vertex 1, etc."
            }
          ],
          "section": "Sweep Page"
        },
        {
          "name": "angle",
          "label": "Angle",
          "description": "Angle parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Sweep Page"
        },
        {
          "name": "noflip",
          "label": "Noflip",
          "description": "Noflip parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Sweep Page"
        },
        {
          "name": "skipcoin",
          "label": "Skipcoin",
          "description": "Skipcoin parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Sweep Page"
        },
        {
          "name": "aimatref",
          "label": "Aimatref",
          "description": "Aimatref parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Sweep Page"
        },
        {
          "name": "usevtx",
          "label": "Usevtx",
          "description": "Usevtx parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Sweep Page"
        },
        {
          "name": "vertex",
          "label": "Vertex",
          "description": "Vertex parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Cycle Primitives",
              "value": "cycle",
              "description": "This cycles through incoming primitives when placing them on a backbone. i.e. Start with 0 at vertex 0, primitive 1 > vertex 1, etc."
            }
          ],
          "section": "Sweep Page"
        },
        {
          "name": "scale",
          "label": "Scale",
          "description": "Scale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Sweep Page"
        },
        {
          "name": "twist",
          "label": "Twist",
          "description": "Twist parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Sweep Page"
        },
        {
          "name": "roll",
          "label": "Roll",
          "description": "Roll parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Sweep Page"
        },
        {
          "name": "newg",
          "label": "Newg",
          "description": "Newg parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Output Page"
        },
        {
          "name": "sweepgrp",
          "label": "Sweepgrp",
          "description": "Sweepgrp parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Output Page"
        },
        {
          "name": "skin",
          "label": "Skin",
          "description": "Skin parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Off",
              "value": "off",
              "description": "Doesn't skin the output."
            },
            {
              "label": "On",
              "value": "on",
              "description": "Skins the output."
            },
            {
              "label": "On with Auto Close",
              "value": "auto",
              "description": "Closes the skinned mesh if the path curve which it follows is also closed. This allows you to close primitives properly."
            }
          ],
          "section": "Output Page"
        },
        {
          "name": "fast",
          "label": "Fast",
          "description": "Fast parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Output Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        },
        {
          "type": "SOP",
          "description": "Input 2:  -",
          "index": 2
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note: In order for this to work, you must supply Reference Points via the third input, and there must be exactly the same number of Reference Points as there are points in the Backbone.",
        "Note: The Scale, Twist and Roll parameters can now be controlled directly by points' attributes of the same names. Thus, combined with the Channel SOP, those parameters can now be controlled dynamically. You can use scale and other attributes coming in to taper.",
        "Tip: There is a way of speeding the skinning of many points using the second input of the Point SOP. Suppose you have Thousands of proceedurally animated curves you wish to skin with the Sweep SOP - rather than performing a skining operation after the animation, make a second set of unanimated geometry that is preskinned. Then assuming your have a matching number of points you can just swap in the animated points into the skinned geometry."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "/geo1/circle1",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Sweep_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.196Z",
      "parameterCount": 17
    },
    {
      "name": "Switch",
      "fullName": "Switch SOP",
      "category": "SOP",
      "description": "The Switch SOP switches between up to 9999 possible inputs. The output of this SOP is specified by the Select Input field. This is useful for switching the output between several inputs depending on the evaluation of an expression placed in the Select Input field.\n\nswitchSOP_Class\n\nBelow are two expressions that could be entered in the Select Input field:\n\nExtra Information for the Switch SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "input",
          "label": "Input",
          "description": "Input parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [
        {
          "title": "Example",
          "content": "Below are two expressions that could be entered in the Select Input field:\nme.time.frame - 1 - The first input is selected at frame 1, the second at frame 2, etc.\nme.time.frame > 5 - The first input is selected for the first five frames, then the second for the remaining frames."
        }
      ],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "me.time.frame - 1",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        },
        {
          "code": "me.time.frame > 5",
          "language": "mw-highlight mw-highlight-lang-python mw-content-ltr"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Switch_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.214Z",
      "parameterCount": 1
    },
    {
      "name": "Text",
      "fullName": "Text SOP",
      "category": "SOP",
      "description": "The Text SOP creates text geometry from any TrueType or OpenType font that is installed on the system, or any TrueType/OpenType font file on disk. Unicode is supported.\n\ntextSOP_Class\n\nExtra Information for the Text SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditorwikieditor2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "font",
          "label": "Font",
          "description": "Font parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Text Page"
        },
        {
          "name": "fontfile",
          "label": "Fontfile",
          "description": "Fontfile parameter",
          "type": "File",
          "default": "",
          "range": null,
          "options": null,
          "section": "Text Page"
        },
        {
          "name": "bold",
          "label": "Bold",
          "description": "Bold parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Text Page"
        },
        {
          "name": "italic",
          "label": "Italic",
          "description": "Italic parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Text Page"
        },
        {
          "name": "fontsizex",
          "label": "Fontsizex",
          "description": "Fontsizex parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Text Page"
        },
        {
          "name": "fontsizey",
          "label": "Fontsizey",
          "description": "Fontsizey parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Text Page"
        },
        {
          "name": "keepfontratio",
          "label": "Keepfontratio",
          "description": "Keepfontratio parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Text Page"
        },
        {
          "name": "scalefontobboxheight",
          "label": "Scalefontobboxheight",
          "description": "Scalefontobboxheight parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Text Page"
        },
        {
          "name": "output",
          "label": "Output",
          "description": "Output parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Triangles",
              "value": "triangles",
              "description": "The output is a triangulated mesh suitable for shaded renders."
            },
            {
              "label": "Closed Polygons (Filled Holes)",
              "value": "closedpolys",
              "description": "The output is a set of separated closed outlines, suitable for Laser CHOP, Extrude SOP, etc.  Append a Hole SOP to preserve holes properly."
            },
            {
              "label": "Open Polygons",
              "value": "openpolys",
              "description": "The output is a set of separated open outlines, suitable for the Laser CHOP, etc. Renders as a wireframe always."
            }
          ],
          "section": "Text Page"
        },
        {
          "name": "levelofdetail",
          "label": "Levelofdetail",
          "description": "Levelofdetail parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Text Page"
        },
        {
          "name": "language",
          "label": "Language",
          "description": "Language parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Text Page"
        },
        {
          "name": "readingdirection",
          "label": "Readingdirection",
          "description": "Readingdirection parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Text Page"
        },
        {
          "name": "kerning",
          "label": "Kerning",
          "description": "Kerning parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Text Page"
        },
        {
          "name": "linespacing",
          "label": "Linespacing",
          "description": "Linespacing parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Text Page"
        },
        {
          "name": "alignx",
          "label": "Alignx",
          "description": "Alignx parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Text Page"
        },
        {
          "name": "wordwrap",
          "label": "Wordwrap",
          "description": "Wordwrap parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Text Page"
        },
        {
          "name": "wordwrapsize",
          "label": "Wordwrapsize",
          "description": "Wordwrapsize parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Text Page"
        },
        {
          "name": "text",
          "label": "Text",
          "description": "Text parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Text Page"
            },
            {
              "label": "Left",
              "value": "left",
              "description": "Left justifies the text."
            },
            {
              "label": "Center",
              "value": "center",
              "description": "Centers the text."
            },
            {
              "label": "Right",
              "value": "right",
              "description": "Right justifies the text."
            }
          ],
          "section": "Text Page"
        },
        {
          "name": "legacyparsing",
          "label": "Legacyparsing",
          "description": "Legacyparsing parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Text Page"
        },
        {
          "name": "xord",
          "label": "Xord",
          "description": "Xord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "rord",
          "label": "Rord",
          "description": "Rord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Text Page"
            },
            {
              "label": "Triangles",
              "value": "triangles",
              "description": "The output is a triangulated mesh suitable for shaded renders."
            },
            {
              "label": "Closed Polygons (Filled Holes)",
              "value": "closedpolys",
              "description": "The output is a set of separated closed outlines, suitable for Laser CHOP, Extrude SOP, etc.  Append a Hole SOP to preserve holes properly."
            },
            {
              "label": "Open Polygons",
              "value": "openpolys",
              "description": "The output is a set of separated open outlines, suitable for the Laser CHOP, etc. Renders as a wireframe always."
            },
            {
              "label": "Left",
              "value": "left",
              "description": "Left justifies the text."
            },
            {
              "label": "Center",
              "value": "center",
              "description": "Centers the text."
            },
            {
              "label": "Right",
              "value": "right",
              "description": "Right justifies the text."
            }
          ],
          "section": "Transform Page"
        },
        {
          "name": "r",
          "label": "R",
          "description": "R parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Text Page"
            },
            {
              "label": "Triangles",
              "value": "triangles",
              "description": "The output is a triangulated mesh suitable for shaded renders."
            },
            {
              "label": "Closed Polygons (Filled Holes)",
              "value": "closedpolys",
              "description": "The output is a set of separated closed outlines, suitable for Laser CHOP, Extrude SOP, etc.  Append a Hole SOP to preserve holes properly."
            },
            {
              "label": "Open Polygons",
              "value": "openpolys",
              "description": "The output is a set of separated open outlines, suitable for the Laser CHOP, etc. Renders as a wireframe always."
            },
            {
              "label": "Center",
              "value": "center",
              "description": "Centers the text."
            },
            {
              "label": "Right",
              "value": "right",
              "description": "Right justifies the text."
            }
          ],
          "section": "Transform Page"
        },
        {
          "name": "s",
          "label": "S",
          "description": "S parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Text Page"
            },
            {
              "label": "Triangles",
              "value": "triangles",
              "description": "The output is a triangulated mesh suitable for shaded renders."
            },
            {
              "label": "Closed Polygons (Filled Holes)",
              "value": "closedpolys",
              "description": "The output is a set of separated closed outlines, suitable for Laser CHOP, Extrude SOP, etc.  Append a Hole SOP to preserve holes properly."
            },
            {
              "label": "Open Polygons",
              "value": "openpolys",
              "description": "The output is a set of separated open outlines, suitable for the Laser CHOP, etc. Renders as a wireframe always."
            },
            {
              "label": "Left",
              "value": "left",
              "description": "Left justifies the text."
            },
            {
              "label": "Center",
              "value": "center",
              "description": "Centers the text."
            },
            {
              "label": "Right",
              "value": "right",
              "description": "Right justifies the text."
            }
          ],
          "section": "Transform Page"
        },
        {
          "name": "p",
          "label": "P",
          "description": "P parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Text Page"
            },
            {
              "label": "Triangles",
              "value": "triangles",
              "description": "The output is a triangulated mesh suitable for shaded renders."
            },
            {
              "label": "Closed Polygons (Filled Holes)",
              "value": "closedpolys",
              "description": "The output is a set of separated closed outlines, suitable for Laser CHOP, Extrude SOP, etc.  Append a Hole SOP to preserve holes properly."
            },
            {
              "label": "Open Polygons",
              "value": "openpolys",
              "description": "The output is a set of separated open outlines, suitable for the Laser CHOP, etc. Renders as a wireframe always."
            }
          ],
          "section": "Transform Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": ".ttf, .otf file",
          "language": "python"
        },
        {
          "code": "keepfontratio",
          "language": "python"
        },
        {
          "code": "scalefontobboxheight",
          "language": "python"
        },
        {
          "code": "closedpolys",
          "language": "python"
        },
        {
          "code": "levelofdetail",
          "language": "python"
        },
        {
          "code": "readingdirection",
          "language": "python"
        },
        {
          "code": "lefttoright",
          "language": "python"
        },
        {
          "code": "righttoleft",
          "language": "python"
        },
        {
          "code": "linespacing",
          "language": "python"
        },
        {
          "code": "wordwrapsize",
          "language": "python"
        },
        {
          "code": "'First Line\\nSecond Line'",
          "language": "python"
        },
        {
          "code": "legacyparsing",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Text_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.250Z",
      "parameterCount": 25
    },
    {
      "name": "Texture",
      "fullName": "Texture SOP",
      "category": "SOP",
      "description": "The Texture SOP assigns texture UV and W coordinates to the Source geometry for use in texture and bump mapping. It generates multi-layers of texture coordinates.\n\ntextureSOP_Class\n\nNOTE: the following discussing pertains only to face and hull primitives.\n\nIf a texture type requires fixing of seams and the texture is applied to vertices, the wrapped primitives are unrolled before computing the texture coordinates. Unrolling a wrapped primitive turns it into an open primitive whose new vertices use the same points as the vertices they have been uniqued from. Thus, unrolling does not change the point count, nor does it allow cracks to appear further down the road. Explicit unrolling, using the Primitive SOP, is not required.\n\nThe seam fixing is done after computing the texture coordinates. It is required whether textures are applied to vertices or points, and it's done in u, v, or both.\n\nThe following texture types require fixing of seams:\n\nNote: When the projection type is Cylindrical or Polar, closed meshes, Bzier & NURBS surfaces will be opened. At least one row/column of vertices will be added (possibly more for NURBS<). This is to prevent poor interpolation of texture coordinates at the seam of the join.\n\nAdd further transformations to the texture coordinate space.\n\nExtra Information for the Texture SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "texlayer",
          "label": "Texlayer",
          "description": "Texlayer parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Texture Page"
        },
        {
          "name": "type",
          "label": "Type",
          "description": "Type parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Uniform Spline",
              "value": "suniform",
              "description": "This projection type operates only on NURBS and Bzier surfaces. It samples the domain space (i.e. the basis) of each surface uniformly in U and V and assigns those (u,v) values as texture coordinates to the surface points or vertices. To ensure continuity between the texture space of adjacent surfaces insert a Basis SOP before the Texture SOP and toggle Concatenate on to merge the spline bases in U and/or V."
            }
          ],
          "section": "Texture Page"
        },
        {
          "name": "axis",
          "label": "Axis",
          "description": "Axis parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Orthographic",
              "value": "texture",
              "description": "Direct projection from Projection Axis."
            },
            {
              "label": "Cylindrical",
              "value": "cylin",
              "description": "Wrap cylindrically in Projection Axis direction."
            },
            {
              "label": "Row & Columns",
              "value": "rowcol",
              "description": "For geometry constructed as a mesh (Grid, Sphere, Tube, Skin, and Sweep). The U coordinates are placed along rows, and the V coordinates along columns. This is good for texturing curved meshes such as car fenders where you cannot project from any one axis."
            }
          ],
          "section": "Texture Page"
        },
        {
          "name": "camera",
          "label": "Camera",
          "description": "Camera parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Perspective From Camera",
              "value": "persp",
              "description": "The texture coordinates are assigned so that the world space of the object can be textured to fit the projection of the camera exactly. If any points are behind the near clipping plane or beyond the far clipping plane, the texture coordinates (0, 0, 0) are assigned. Note: Unless a Custom Projection matrix is used in the Camera COMP, the aspect ratio of the projection is assumed to be 1:1. You may need to scale the UVs to match the aspect ratio of your render."
            }
          ],
          "section": "Texture Page"
        },
        {
          "name": "coord",
          "label": "Coord",
          "description": "Coord parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Row & Columns",
              "value": "rowcol",
              "description": "For geometry constructed as a mesh (Grid, Sphere, Tube, Skin, and Sweep). The U coordinates are placed along rows, and the V coordinates along columns. This is good for texturing curved meshes such as car fenders where you cannot project from any one axis."
            },
            {
              "label": "Modify Source",
              "value": "modify",
              "description": "If the Source already has texture UV coordinates, they are maintained. You can offset and scale them, however, using Scale and Offset."
            },
            {
              "label": "Uniform Spline",
              "value": "suniform",
              "description": "This projection type operates only on NURBS and Bzier surfaces. It samples the domain space (i.e. the basis) of each surface uniformly in U and V and assigns those (u,v) values as texture coordinates to the surface points or vertices. To ensure continuity between the texture space of adjacent surfaces insert a Basis SOP before the Texture SOP and toggle Concatenate on to merge the spline bases in U and/or V."
            },
            {
              "label": "Arc Length Spline",
              "value": "sarclen",
              "description": "This method is similar to the Uniform Spline method since it relies on the underlying spline basis when computing the texture coordinates. Both methods generate texture coordinates in the same range, bounded by the minimum and maximum knot values. The difference between the two spline methods lies in the spacing between successive texture coordinates. The uniform method samples the parameter space uniformly. The Arc-Length Spline method chooses the texture coordinates based on surface arc-lengths."
            },
            {
              "label": "Perspective From Camera",
              "value": "persp",
              "description": "The texture coordinates are assigned so that the world space of the object can be textured to fit the projection of the camera exactly. If any points are behind the near clipping plane or beyond the far clipping plane, the texture coordinates (0, 0, 0) are assigned. Note: Unless a Custom Projection matrix is used in the Camera COMP, the aspect ratio of the projection is assumed to be 1:1. You may need to scale the UVs to match the aspect ratio of your render."
            },
            {
              "label": "Equidistant Azimuth (Fish Eye 180)",
              "value": "equiazimuth",
              "description": "Applies coordinates for using 180 degree Fish Eye maps."
            },
            {
              "label": "Equidistant Azimuth (Fish Eye 360)",
              "value": "equiazimuth360",
              "description": "Applies coordinates for using 360 degree Fish Eye maps."
            }
          ],
          "section": "Texture Page"
        },
        {
          "name": "s",
          "label": "S",
          "description": "S parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "3",
              "value": "Parameters",
              "description": "Page"
            },
            {
              "label": "Spline types: Uniform, Chord Length, and",
              "value": "Average",
              "description": "seams fixed in u and v."
            },
            {
              "label": "Orthographic",
              "value": "texture",
              "description": "Direct projection from Projection Axis."
            },
            {
              "label": "XYZ Position",
              "value": "xyzposition",
              "description": "The XYZ position of the vertices will be copied into the UVW values."
            },
            {
              "label": "Equirectangular Inside (Spherical Polar)",
              "value": "equirectangularin",
              "description": "Applies corrdinates to properly apply an equirectangular texture map to the inside of an object. Useful for skyboxes for example."
            },
            {
              "label": "Equirectangular Outside (Spherical Polar)",
              "value": "equirectangularout",
              "description": "Applies corrdinates to properly apply an equirectangular texture map to the outside of an object."
            },
            {
              "label": "Cylindrical",
              "value": "cylin",
              "description": "Wrap cylindrically in Projection Axis direction."
            },
            {
              "label": "Row & Columns",
              "value": "rowcol",
              "description": "For geometry constructed as a mesh (Grid, Sphere, Tube, Skin, and Sweep). The U coordinates are placed along rows, and the V coordinates along columns. This is good for texturing curved meshes such as car fenders where you cannot project from any one axis."
            },
            {
              "label": "Face",
              "value": "face",
              "description": "Maps a copy of the texture onto every face. You should make points unique using a Facet SOP, before using this function in the Texture SOP. The map is graphically projected to each face along its normal, so the texture is oriented properly for each face. However, the map is not scaled to fit each polygon, nor is it distorted by the shape of each polygon. If the geometry changes in size in object space, the texture does not \"stick\" to the geometry. It is best suited to texturing objects that represent chunks of rock and brick, as the textures will likely not match at the edges between polygons."
            },
            {
              "label": "Modify Source",
              "value": "modify",
              "description": "If the Source already has texture UV coordinates, they are maintained. You can offset and scale them, however, using Scale and Offset."
            },
            {
              "label": "Uniform Spline",
              "value": "suniform",
              "description": "This projection type operates only on NURBS and Bzier surfaces. It samples the domain space (i.e. the basis) of each surface uniformly in U and V and assigns those (u,v) values as texture coordinates to the surface points or vertices. To ensure continuity between the texture space of adjacent surfaces insert a Basis SOP before the Texture SOP and toggle Concatenate on to merge the spline bases in U and/or V."
            },
            {
              "label": "Average Spline",
              "value": "saverage",
              "description": "Stores the average of degree successive knots into the texture attribute. These averages are known as Greville points. This method and Uniform Spline are recommended for pasted surfaces."
            },
            {
              "label": "Arc Length Spline",
              "value": "sarclen",
              "description": "This method is similar to the Uniform Spline method since it relies on the underlying spline basis when computing the texture coordinates. Both methods generate texture coordinates in the same range, bounded by the minimum and maximum knot values. The difference between the two spline methods lies in the spacing between successive texture coordinates. The uniform method samples the parameter space uniformly. The Arc-Length Spline method chooses the texture coordinates based on surface arc-lengths."
            },
            {
              "label": "Edge Length",
              "value": "edgelength",
              "description": "Applies to hulls + faces (NURBs/Bezier/Polygon)."
            },
            {
              "label": "Perspective From Camera",
              "value": "persp",
              "description": "The texture coordinates are assigned so that the world space of the object can be textured to fit the projection of the camera exactly. If any points are behind the near clipping plane or beyond the far clipping plane, the texture coordinates (0, 0, 0) are assigned. Note: Unless a Custom Projection matrix is used in the Camera COMP, the aspect ratio of the projection is assumed to be 1:1. You may need to scale the UVs to match the aspect ratio of your render."
            },
            {
              "label": "Equidistant Azimuth (Fish Eye 180)",
              "value": "equiazimuth",
              "description": "Applies coordinates for using 180 degree Fish Eye maps."
            },
            {
              "label": "Equidistant Azimuth (Fish Eye 360)",
              "value": "equiazimuth360",
              "description": "Applies coordinates for using 360 degree Fish Eye maps."
            }
          ],
          "section": "Texture Page"
        },
        {
          "name": "offset",
          "label": "Offset",
          "description": "Offset parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Modify Source",
              "value": "modify",
              "description": "If the Source already has texture UV coordinates, they are maintained. You can offset and scale them, however, using Scale and Offset."
            }
          ],
          "section": "Texture Page"
        },
        {
          "name": "angle",
          "label": "Angle",
          "description": "Angle parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Texture Page"
        },
        {
          "name": "fixseams",
          "label": "Fixseams",
          "description": "Fixseams parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Texture Page"
        },
        {
          "name": "xord",
          "label": "Xord",
          "description": "Xord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "rord",
          "label": "Rord",
          "description": "Rord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "3",
              "value": "Parameters",
              "description": "Page"
            },
            {
              "label": "Orthographic",
              "value": "texture",
              "description": "Direct projection from Projection Axis."
            },
            {
              "label": "XYZ Position",
              "value": "xyzposition",
              "description": "The XYZ position of the vertices will be copied into the UVW values."
            },
            {
              "label": "Equirectangular Inside (Spherical Polar)",
              "value": "equirectangularin",
              "description": "Applies corrdinates to properly apply an equirectangular texture map to the inside of an object. Useful for skyboxes for example."
            },
            {
              "label": "Equirectangular Outside (Spherical Polar)",
              "value": "equirectangularout",
              "description": "Applies corrdinates to properly apply an equirectangular texture map to the outside of an object."
            },
            {
              "label": "Cylindrical",
              "value": "cylin",
              "description": "Wrap cylindrically in Projection Axis direction."
            },
            {
              "label": "Row & Columns",
              "value": "rowcol",
              "description": "For geometry constructed as a mesh (Grid, Sphere, Tube, Skin, and Sweep). The U coordinates are placed along rows, and the V coordinates along columns. This is good for texturing curved meshes such as car fenders where you cannot project from any one axis."
            },
            {
              "label": "Face",
              "value": "face",
              "description": "Maps a copy of the texture onto every face. You should make points unique using a Facet SOP, before using this function in the Texture SOP. The map is graphically projected to each face along its normal, so the texture is oriented properly for each face. However, the map is not scaled to fit each polygon, nor is it distorted by the shape of each polygon. If the geometry changes in size in object space, the texture does not \"stick\" to the geometry. It is best suited to texturing objects that represent chunks of rock and brick, as the textures will likely not match at the edges between polygons."
            },
            {
              "label": "Modify Source",
              "value": "modify",
              "description": "If the Source already has texture UV coordinates, they are maintained. You can offset and scale them, however, using Scale and Offset."
            },
            {
              "label": "Uniform Spline",
              "value": "suniform",
              "description": "This projection type operates only on NURBS and Bzier surfaces. It samples the domain space (i.e. the basis) of each surface uniformly in U and V and assigns those (u,v) values as texture coordinates to the surface points or vertices. To ensure continuity between the texture space of adjacent surfaces insert a Basis SOP before the Texture SOP and toggle Concatenate on to merge the spline bases in U and/or V."
            },
            {
              "label": "Average Spline",
              "value": "saverage",
              "description": "Stores the average of degree successive knots into the texture attribute. These averages are known as Greville points. This method and Uniform Spline are recommended for pasted surfaces."
            },
            {
              "label": "Arc Length Spline",
              "value": "sarclen",
              "description": "This method is similar to the Uniform Spline method since it relies on the underlying spline basis when computing the texture coordinates. Both methods generate texture coordinates in the same range, bounded by the minimum and maximum knot values. The difference between the two spline methods lies in the spacing between successive texture coordinates. The uniform method samples the parameter space uniformly. The Arc-Length Spline method chooses the texture coordinates based on surface arc-lengths."
            },
            {
              "label": "Edge Length",
              "value": "edgelength",
              "description": "Applies to hulls + faces (NURBs/Bezier/Polygon)."
            },
            {
              "label": "Perspective From Camera",
              "value": "persp",
              "description": "The texture coordinates are assigned so that the world space of the object can be textured to fit the projection of the camera exactly. If any points are behind the near clipping plane or beyond the far clipping plane, the texture coordinates (0, 0, 0) are assigned. Note: Unless a Custom Projection matrix is used in the Camera COMP, the aspect ratio of the projection is assumed to be 1:1. You may need to scale the UVs to match the aspect ratio of your render."
            },
            {
              "label": "Equidistant Azimuth (Fish Eye 180)",
              "value": "equiazimuth",
              "description": "Applies coordinates for using 180 degree Fish Eye maps."
            },
            {
              "label": "Equidistant Azimuth (Fish Eye 360)",
              "value": "equiazimuth360",
              "description": "Applies coordinates for using 360 degree Fish Eye maps."
            }
          ],
          "section": "Transform Page"
        },
        {
          "name": "r",
          "label": "R",
          "description": "R parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "3",
              "value": "Parameters",
              "description": "Page"
            },
            {
              "label": "Spline types: Uniform, Chord Length, and",
              "value": "Average",
              "description": "seams fixed in u and v."
            },
            {
              "label": "Orthographic",
              "value": "texture",
              "description": "Direct projection from Projection Axis."
            },
            {
              "label": "XYZ Position",
              "value": "xyzposition",
              "description": "The XYZ position of the vertices will be copied into the UVW values."
            },
            {
              "label": "Equirectangular Inside (Spherical Polar)",
              "value": "equirectangularin",
              "description": "Applies corrdinates to properly apply an equirectangular texture map to the inside of an object. Useful for skyboxes for example."
            },
            {
              "label": "Equirectangular Outside (Spherical Polar)",
              "value": "equirectangularout",
              "description": "Applies corrdinates to properly apply an equirectangular texture map to the outside of an object."
            },
            {
              "label": "Cylindrical",
              "value": "cylin",
              "description": "Wrap cylindrically in Projection Axis direction."
            },
            {
              "label": "Row & Columns",
              "value": "rowcol",
              "description": "For geometry constructed as a mesh (Grid, Sphere, Tube, Skin, and Sweep). The U coordinates are placed along rows, and the V coordinates along columns. This is good for texturing curved meshes such as car fenders where you cannot project from any one axis."
            },
            {
              "label": "Face",
              "value": "face",
              "description": "Maps a copy of the texture onto every face. You should make points unique using a Facet SOP, before using this function in the Texture SOP. The map is graphically projected to each face along its normal, so the texture is oriented properly for each face. However, the map is not scaled to fit each polygon, nor is it distorted by the shape of each polygon. If the geometry changes in size in object space, the texture does not \"stick\" to the geometry. It is best suited to texturing objects that represent chunks of rock and brick, as the textures will likely not match at the edges between polygons."
            },
            {
              "label": "Modify Source",
              "value": "modify",
              "description": "If the Source already has texture UV coordinates, they are maintained. You can offset and scale them, however, using Scale and Offset."
            },
            {
              "label": "Uniform Spline",
              "value": "suniform",
              "description": "This projection type operates only on NURBS and Bzier surfaces. It samples the domain space (i.e. the basis) of each surface uniformly in U and V and assigns those (u,v) values as texture coordinates to the surface points or vertices. To ensure continuity between the texture space of adjacent surfaces insert a Basis SOP before the Texture SOP and toggle Concatenate on to merge the spline bases in U and/or V."
            },
            {
              "label": "Average Spline",
              "value": "saverage",
              "description": "Stores the average of degree successive knots into the texture attribute. These averages are known as Greville points. This method and Uniform Spline are recommended for pasted surfaces."
            },
            {
              "label": "Arc Length Spline",
              "value": "sarclen",
              "description": "This method is similar to the Uniform Spline method since it relies on the underlying spline basis when computing the texture coordinates. Both methods generate texture coordinates in the same range, bounded by the minimum and maximum knot values. The difference between the two spline methods lies in the spacing between successive texture coordinates. The uniform method samples the parameter space uniformly. The Arc-Length Spline method chooses the texture coordinates based on surface arc-lengths."
            },
            {
              "label": "Edge Length",
              "value": "edgelength",
              "description": "Applies to hulls + faces (NURBs/Bezier/Polygon)."
            },
            {
              "label": "Perspective From Camera",
              "value": "persp",
              "description": "The texture coordinates are assigned so that the world space of the object can be textured to fit the projection of the camera exactly. If any points are behind the near clipping plane or beyond the far clipping plane, the texture coordinates (0, 0, 0) are assigned. Note: Unless a Custom Projection matrix is used in the Camera COMP, the aspect ratio of the projection is assumed to be 1:1. You may need to scale the UVs to match the aspect ratio of your render."
            },
            {
              "label": "Equidistant Azimuth (Fish Eye 180)",
              "value": "equiazimuth",
              "description": "Applies coordinates for using 180 degree Fish Eye maps."
            },
            {
              "label": "Equidistant Azimuth (Fish Eye 360)",
              "value": "equiazimuth360",
              "description": "Applies coordinates for using 360 degree Fish Eye maps."
            }
          ],
          "section": "Transform Page"
        },
        {
          "name": "scaletwo",
          "label": "Scaletwo",
          "description": "Scaletwo parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "p",
          "label": "P",
          "description": "P parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "3",
              "value": "Parameters",
              "description": "Page"
            },
            {
              "label": "Orthographic",
              "value": "texture",
              "description": "Direct projection from Projection Axis."
            },
            {
              "label": "XYZ Position",
              "value": "xyzposition",
              "description": "The XYZ position of the vertices will be copied into the UVW values."
            },
            {
              "label": "Equirectangular Inside (Spherical Polar)",
              "value": "equirectangularin",
              "description": "Applies corrdinates to properly apply an equirectangular texture map to the inside of an object. Useful for skyboxes for example."
            },
            {
              "label": "Equirectangular Outside (Spherical Polar)",
              "value": "equirectangularout",
              "description": "Applies corrdinates to properly apply an equirectangular texture map to the outside of an object."
            },
            {
              "label": "Cylindrical",
              "value": "cylin",
              "description": "Wrap cylindrically in Projection Axis direction."
            },
            {
              "label": "Row & Columns",
              "value": "rowcol",
              "description": "For geometry constructed as a mesh (Grid, Sphere, Tube, Skin, and Sweep). The U coordinates are placed along rows, and the V coordinates along columns. This is good for texturing curved meshes such as car fenders where you cannot project from any one axis."
            },
            {
              "label": "Face",
              "value": "face",
              "description": "Maps a copy of the texture onto every face. You should make points unique using a Facet SOP, before using this function in the Texture SOP. The map is graphically projected to each face along its normal, so the texture is oriented properly for each face. However, the map is not scaled to fit each polygon, nor is it distorted by the shape of each polygon. If the geometry changes in size in object space, the texture does not \"stick\" to the geometry. It is best suited to texturing objects that represent chunks of rock and brick, as the textures will likely not match at the edges between polygons."
            },
            {
              "label": "Uniform Spline",
              "value": "suniform",
              "description": "This projection type operates only on NURBS and Bzier surfaces. It samples the domain space (i.e. the basis) of each surface uniformly in U and V and assigns those (u,v) values as texture coordinates to the surface points or vertices. To ensure continuity between the texture space of adjacent surfaces insert a Basis SOP before the Texture SOP and toggle Concatenate on to merge the spline bases in U and/or V."
            },
            {
              "label": "Average Spline",
              "value": "saverage",
              "description": "Stores the average of degree successive knots into the texture attribute. These averages are known as Greville points. This method and Uniform Spline are recommended for pasted surfaces."
            },
            {
              "label": "Arc Length Spline",
              "value": "sarclen",
              "description": "This method is similar to the Uniform Spline method since it relies on the underlying spline basis when computing the texture coordinates. Both methods generate texture coordinates in the same range, bounded by the minimum and maximum knot values. The difference between the two spline methods lies in the spacing between successive texture coordinates. The uniform method samples the parameter space uniformly. The Arc-Length Spline method chooses the texture coordinates based on surface arc-lengths."
            },
            {
              "label": "Edge Length",
              "value": "edgelength",
              "description": "Applies to hulls + faces (NURBs/Bezier/Polygon)."
            },
            {
              "label": "Perspective From Camera",
              "value": "persp",
              "description": "The texture coordinates are assigned so that the world space of the object can be textured to fit the projection of the camera exactly. If any points are behind the near clipping plane or beyond the far clipping plane, the texture coordinates (0, 0, 0) are assigned. Note: Unless a Custom Projection matrix is used in the Camera COMP, the aspect ratio of the projection is assumed to be 1:1. You may need to scale the UVs to match the aspect ratio of your render."
            },
            {
              "label": "Equidistant Azimuth (Fish Eye 180)",
              "value": "equiazimuth",
              "description": "Applies coordinates for using 180 degree Fish Eye maps."
            },
            {
              "label": "Equidistant Azimuth (Fish Eye 360)",
              "value": "equiazimuth360",
              "description": "Applies coordinates for using 360 degree Fish Eye maps."
            }
          ],
          "section": "Transform Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "NOTE: the following discussing pertains only to face and hull primitives.",
        "Note: When the projection type is Cylindrical or Polar, closed meshes, Bzier & NURBS surfaces will be opened. At least one row/column of vertices will be added (possibly more for NURBS<). This is to prevent poor interpolation of texture coordinates at the seam of the join.",
        "Perspective From Camera persp - The texture coordinates are assigned so that the world space of the object can be textured to fit the projection of the camera exactly. If any points are behind the near clipping plane or beyond the far clipping plane, the texture coordinates (0, 0, 0) are assigned. Note: Unless a Custom Projection matrix is used in the Camera COMP, the aspect ratio of the projection is assumed to be 1:1. You may need to scale the UVs to match the aspect ratio of your render.",
        "Tip: Before applying a spline-based texture projection with the Texture SOP, remap the U and/or V bases of the spline surface (using a Basis SOP) between 0 and 1 to ensure a complete mapping of the texture. If a single texture map must be shared by several surfaces, the surface bases should be concatenated prior to being remapped."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "xyzposition",
          "language": "python"
        },
        {
          "code": "equirectangularin",
          "language": "python"
        },
        {
          "code": "equirectangularout",
          "language": "python"
        },
        {
          "code": "equiazimuth",
          "language": "python"
        },
        {
          "code": "equiazimuth360",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "Image positioning and scaling",
        "Rotation and skew operations",
        "Coordinate space conversions",
        "Animation and motion graphics"
      ],
      "url": "https://docs.derivative.ca/Texture_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.265Z",
      "parameterCount": 16
    },
    {
      "name": "Torus",
      "fullName": "Torus SOP",
      "category": "SOP",
      "description": "The Torus SOP generates complete or specific sections of torus shapes (like a doughnut).\n\ntorusSOP_Class\n\nExtra Information for the Torus SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "type",
          "label": "Type",
          "description": "Type parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Rows and Columns",
              "value": "rowcol",
              "description": "Both Rows and Columns. Looks like Quads in wire frame display, but all polygons are open (if the primitive type is polygon)."
            }
          ],
          "section": "Torus Page"
        },
        {
          "name": "surftype",
          "label": "Surftype",
          "description": "Surftype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Torus Page"
        },
        {
          "name": "orient",
          "label": "Orient",
          "description": "Orient parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Torus Page"
        },
        {
          "name": "modifybounds",
          "label": "Modifybounds",
          "description": "Modifybounds parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Torus Page"
        },
        {
          "name": "rad",
          "label": "Rad",
          "description": "Rad parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Torus Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Torus Page"
            },
            {
              "label": "Rows",
              "value": "rows",
              "description": "Creates horizontal lines."
            },
            {
              "label": "Columns",
              "value": "cols",
              "description": "Creates vertical lines."
            },
            {
              "label": "Rows and Columns",
              "value": "rowcol",
              "description": "Both Rows and Columns. Looks like Quads in wire frame display, but all polygons are open (if the primitive type is polygon)."
            },
            {
              "label": "Triangles",
              "value": "triangles",
              "description": "Build the grid with Triangles."
            },
            {
              "label": "Quadrilaterals",
              "value": "quads",
              "description": "Generates sides composed of quadrilaterals (default)."
            },
            {
              "label": "Alternating Triangles",
              "value": "alttriangles",
              "description": "Generates triangles that are opposed; similar to the Triangles option."
            },
            {
              "label": "Off",
              "value": "off",
              "description": "No uv coordinates added."
            }
          ],
          "section": "Torus Page"
        },
        {
          "name": "reverseanchors",
          "label": "Reverseanchors",
          "description": "Reverseanchors parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Torus Page"
        },
        {
          "name": "anchoru",
          "label": "Anchoru",
          "description": "Anchoru parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Torus Page"
        },
        {
          "name": "anchorv",
          "label": "Anchorv",
          "description": "Anchorv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Torus Page"
        },
        {
          "name": "anchorw",
          "label": "Anchorw",
          "description": "Anchorw parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Torus Page"
        },
        {
          "name": "rows",
          "label": "Rows",
          "description": "Creates horizontal lines.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Rows",
              "value": "rows",
              "description": "Creates horizontal lines."
            },
            {
              "label": "Rows and Columns",
              "value": "rowcol",
              "description": "Both Rows and Columns. Looks like Quads in wire frame display, but all polygons are open (if the primitive type is polygon)."
            }
          ],
          "section": "Torus Page"
        },
        {
          "name": "cols",
          "label": "Cols",
          "description": "Creates vertical lines.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Columns",
              "value": "cols",
              "description": "Creates vertical lines."
            }
          ],
          "section": "Torus Page"
        },
        {
          "name": "angleoffset",
          "label": "Angleoffset",
          "description": "Angleoffset parameter",
          "type": "XY",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        },
        {
          "name": "imperfect",
          "label": "Imperfect",
          "description": "Imperfect parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        },
        {
          "name": "orderu",
          "label": "Orderu",
          "description": "Orderu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        },
        {
          "name": "orderv",
          "label": "Orderv",
          "description": "Orderv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        },
        {
          "name": "angleu",
          "label": "Angleu",
          "description": "Angleu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        },
        {
          "name": "anglev",
          "label": "Anglev",
          "description": "Anglev parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        },
        {
          "name": "closeu",
          "label": "Closeu",
          "description": "Closeu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        },
        {
          "name": "closev",
          "label": "Closev",
          "description": "Closev parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        },
        {
          "name": "capu",
          "label": "Capu",
          "description": "Capu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        },
        {
          "name": "capv",
          "label": "Capv",
          "description": "Capv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        },
        {
          "name": "texture",
          "label": "Texture",
          "description": "Texture parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        },
        {
          "name": "normals",
          "label": "Normals",
          "description": "Normals parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "alttriangles",
          "language": "python"
        },
        {
          "code": "modifybounds",
          "language": "python"
        },
        {
          "code": "reverseanchors",
          "language": "python"
        },
        {
          "code": "angleoffset",
          "language": "python"
        },
        {
          "code": "beginangleu",
          "language": "python"
        },
        {
          "code": "beginanglev",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Primitives",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Torus_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.275Z",
      "parameterCount": 24
    },
    {
      "name": "Trace",
      "fullName": "Trace SOP",
      "category": "SOP",
      "description": "The Trace SOP reads an image file and automatically traces it, generating a set of faces around areas exceeding a certain brightness threshold. You can control this threshold and the resolution of the resulting faces.\n\ntraceSOP_Class\n\nExtra Information for the Trace SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "top",
          "label": "Top",
          "description": "Top parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Trace Page"
        },
        {
          "name": "thresh",
          "label": "Thresh",
          "description": "Thresh parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Trace Page"
        },
        {
          "name": "addtexture",
          "label": "Addtexture",
          "description": "Addtexture parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Trace Page"
        },
        {
          "name": "delborder",
          "label": "Delborder",
          "description": "Delborder parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Trace Page"
        },
        {
          "name": "normals",
          "label": "Normals",
          "description": "Normals parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Trace Page"
        },
        {
          "name": "bordwidth",
          "label": "Bordwidth",
          "description": "Bordwidth parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Filters Page"
        },
        {
          "name": "doresample",
          "label": "Doresample",
          "description": "Doresample parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Filters Page"
        },
        {
          "name": "step",
          "label": "Step",
          "description": "Step parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Filters Page"
        },
        {
          "name": "dosmooth",
          "label": "Dosmooth",
          "description": "Dosmooth parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Filters Page"
        },
        {
          "name": "corner",
          "label": "Corner",
          "description": "Corner parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Filters Page"
        },
        {
          "name": "fitcurve",
          "label": "Fitcurve",
          "description": "Fitcurve parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Filters Page"
        },
        {
          "name": "error",
          "label": "Error",
          "description": "Error parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Filters Page"
        },
        {
          "name": "convpoly",
          "label": "Convpoly",
          "description": "Convpoly parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Filters Page"
        },
        {
          "name": "lod",
          "label": "Lod",
          "description": "Lod parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Filters Page"
        },
        {
          "name": "hole",
          "label": "Hole",
          "description": "Hole parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Filters Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "Smooth Shapes",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "An Operator Family that creates, composites and modifies images, and reads/writes images and movies to/from files and the network. TOPs run on the graphics card's GPU.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Trace_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.335Z",
      "parameterCount": 15
    },
    {
      "name": "Trail",
      "fullName": "Trail SOP",
      "category": "SOP",
      "description": "The Trail SOP takes an input SOP and makes a trail of each point of the input SOP over the past several frames, and connects the trails in different ways. It will generate trails of any input geometry, whether it is a cube translating, a deforming surface, or particles. This is useful for multi-frame ghosting effects and temporal modelling.\n\nWhen using a Particle SOP or Spring SOP as input, it is important to keep the trail increment to integer values. Otherwise, the trail will not work well.\n\ntrailSOP_Class\n\nThe particles thrown off the end-most points recieve a higher velocity than those close to the root of the L-system:\n\nTemporal modelling with the Trail SOP:\n\nThe corners of a translated and rotated cube are used as a source for the Trail SOP with a Trail Length of 50 frames connected by Columns:\n\nExtra Information for the Trail SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "result",
          "label": "Result",
          "description": "Result parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Connect as Mesh",
              "value": "mesh",
              "description": "Connects the resulting points as a mesh."
            },
            {
              "label": "Connect as Polygons",
              "value": "poly",
              "description": "Connects the resulting points as polygons."
            }
          ],
          "section": "Page"
        },
        {
          "name": "length",
          "label": "Length",
          "description": "Length parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "inc",
          "label": "Inc",
          "description": "Inc parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "cache",
          "label": "Cache",
          "description": "Cache parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "evalframe",
          "label": "Evalframe",
          "description": "Evalframe parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "surftype",
          "label": "Surftype",
          "description": "Surftype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "close",
          "label": "Close",
          "description": "Close parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "velscale",
          "label": "Velscale",
          "description": "Velscale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "reset",
          "label": "Reset",
          "description": "Reset parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "resetpulse",
          "label": "Resetpulse",
          "description": "Resetpulse parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "alttriangles",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Trail_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.346Z",
      "parameterCount": 10
    },
    {
      "name": "Transform",
      "fullName": "Transform SOP",
      "category": "SOP",
      "description": "The Transform SOP translates, rotates and scales the input geometry in \"object space\" or local to the SOP. The Model Editor and the Transform SOP both work in \"object space\", and change the X Y Z positions of the points. In contrast, animating the transformation channels of an object in the Geometry Viewer Pane moves/scales the entire object in \"world space\" and does not affect the XYZ point positions of the geometry.\n\ntransformSOP_Class\n\nThe transforms on this page are apllied after the settings made on the Transform page (see above).\n\nExtra Information for the Transform SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditorwikieditor2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "xord",
          "label": "Xord",
          "description": "Xord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "rord",
          "label": "Rord",
          "description": "Rord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Transform Page"
            },
            {
              "label": "Origin",
              "value": "origin",
              "description": "Moves the geometry to the origin 0,0,0."
            },
            {
              "label": "Reference Input",
              "value": "reference",
              "description": "Moves the geometry to a location based on the Reference Input supplied to this SOP's second input (ie. Input 1)."
            },
            {
              "label": "Min",
              "value": "min",
              "description": "Align to the geometry's minimum bounds in this axis."
            },
            {
              "label": "Center",
              "value": "center",
              "description": "Align to the geometry's center point in this axis."
            },
            {
              "label": "Max",
              "value": "max",
              "description": "Align to the geometry's maximum bounds in this axis."
            },
            {
              "label": "Per Axis",
              "value": "peraxis",
              "description": "Allows individual settings for each axis using the parameters below."
            },
            {
              "label": "Unity",
              "value": "unity",
              "description": "Scales the geometry to fit in a 1,1,1 bounding box."
            },
            {
              "label": "Unity Proportional",
              "value": "unityprop",
              "description": "Scale the geometry to 1.0 (ie. -0.5 to 0.5) in this axis while keeping the input geometry's original proportions."
            },
            {
              "label": "Reference Proportional",
              "value": "referenceprop",
              "description": "Scale the geometry to fit the Reference Input in this axis while keeping the input geometry's original proportions."
            }
          ],
          "section": "Transform Page"
        },
        {
          "name": "r",
          "label": "R",
          "description": "R parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Transform Page"
            },
            {
              "label": "Origin",
              "value": "origin",
              "description": "Moves the geometry to the origin 0,0,0."
            },
            {
              "label": "Reference Input",
              "value": "reference",
              "description": "Moves the geometry to a location based on the Reference Input supplied to this SOP's second input (ie. Input 1)."
            },
            {
              "label": "Min",
              "value": "min",
              "description": "Align to the geometry's minimum bounds in this axis."
            },
            {
              "label": "Center",
              "value": "center",
              "description": "Align to the geometry's center point in this axis."
            },
            {
              "label": "Max",
              "value": "max",
              "description": "Align to the geometry's maximum bounds in this axis."
            },
            {
              "label": "Per Axis",
              "value": "peraxis",
              "description": "Allows individual settings for each axis using the parameters below."
            },
            {
              "label": "Unity",
              "value": "unity",
              "description": "Scales the geometry to fit in a 1,1,1 bounding box."
            },
            {
              "label": "Unity Proportional",
              "value": "unityprop",
              "description": "Scale the geometry to 1.0 (ie. -0.5 to 0.5) in this axis while keeping the input geometry's original proportions."
            },
            {
              "label": "Reference Proportional",
              "value": "referenceprop",
              "description": "Scale the geometry to fit the Reference Input in this axis while keeping the input geometry's original proportions."
            }
          ],
          "section": "Transform Page"
        },
        {
          "name": "s",
          "label": "S",
          "description": "S parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Transform Page"
            },
            {
              "label": "Origin",
              "value": "origin",
              "description": "Moves the geometry to the origin 0,0,0."
            },
            {
              "label": "Reference Input",
              "value": "reference",
              "description": "Moves the geometry to a location based on the Reference Input supplied to this SOP's second input (ie. Input 1)."
            },
            {
              "label": "Min",
              "value": "min",
              "description": "Align to the geometry's minimum bounds in this axis."
            },
            {
              "label": "Center",
              "value": "center",
              "description": "Align to the geometry's center point in this axis."
            },
            {
              "label": "Max",
              "value": "max",
              "description": "Align to the geometry's maximum bounds in this axis."
            },
            {
              "label": "Per Axis",
              "value": "peraxis",
              "description": "Allows individual settings for each axis using the parameters below."
            },
            {
              "label": "Unity",
              "value": "unity",
              "description": "Scales the geometry to fit in a 1,1,1 bounding box."
            },
            {
              "label": "Unity Proportional",
              "value": "unityprop",
              "description": "Scale the geometry to 1.0 (ie. -0.5 to 0.5) in this axis while keeping the input geometry's original proportions."
            },
            {
              "label": "Reference Proportional",
              "value": "referenceprop",
              "description": "Scale the geometry to fit the Reference Input in this axis while keeping the input geometry's original proportions."
            }
          ],
          "section": "Transform Page"
        },
        {
          "name": "p",
          "label": "P",
          "description": "P parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Transform Page"
            },
            {
              "label": "Reference Input",
              "value": "reference",
              "description": "Moves the geometry to a location based on the Reference Input supplied to this SOP's second input (ie. Input 1)."
            },
            {
              "label": "Center",
              "value": "center",
              "description": "Align to the geometry's center point in this axis."
            },
            {
              "label": "Per Axis",
              "value": "peraxis",
              "description": "Allows individual settings for each axis using the parameters below."
            },
            {
              "label": "Unity Proportional",
              "value": "unityprop",
              "description": "Scale the geometry to 1.0 (ie. -0.5 to 0.5) in this axis while keeping the input geometry's original proportions."
            },
            {
              "label": "Reference Proportional",
              "value": "referenceprop",
              "description": "Scale the geometry to fit the Reference Input in this axis while keeping the input geometry's original proportions."
            }
          ],
          "section": "Transform Page"
        },
        {
          "name": "scale",
          "label": "Scale",
          "description": "Scale parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Unity",
              "value": "unity",
              "description": "Scales the geometry to fit in a 1,1,1 bounding box."
            },
            {
              "label": "Unity Proportional",
              "value": "unityprop",
              "description": "Scale the geometry to 1.0 (ie. -0.5 to 0.5) in this axis while keeping the input geometry's original proportions."
            },
            {
              "label": "Reference Proportional",
              "value": "referenceprop",
              "description": "Scale the geometry to fit the Reference Input in this axis while keeping the input geometry's original proportions."
            }
          ],
          "section": "Transform Page"
        },
        {
          "name": "vlength",
          "label": "Vlength",
          "description": "Vlength parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "lookat",
          "label": "Lookat",
          "description": "Lookat parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "upvector",
          "label": "Upvector",
          "description": "Upvector parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "forwarddir",
          "label": "Forwarddir",
          "description": "Forwarddir parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Transform Page"
        },
        {
          "name": "postxord",
          "label": "Postxord",
          "description": "Postxord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Post Page"
        },
        {
          "name": "posttx",
          "label": "Posttx",
          "description": "Posttx parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Post Page"
        },
        {
          "name": "fromx",
          "label": "Fromx",
          "description": "Fromx parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Post Page"
        },
        {
          "name": "tox",
          "label": "Tox",
          "description": "Tox parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Post Page"
        },
        {
          "name": "postty",
          "label": "Postty",
          "description": "Postty parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Post Page"
        },
        {
          "name": "fromy",
          "label": "Fromy",
          "description": "Fromy parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Post Page"
        },
        {
          "name": "toy",
          "label": "Toy",
          "description": "Toy parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Post Page"
        },
        {
          "name": "posttz",
          "label": "Posttz",
          "description": "Posttz parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Post Page"
        },
        {
          "name": "fromz",
          "label": "Fromz",
          "description": "Fromz parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Post Page"
        },
        {
          "name": "toz",
          "label": "Toz",
          "description": "Toz parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Post Page"
        },
        {
          "name": "postscale",
          "label": "Postscale",
          "description": "Postscale parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Post Page"
        },
        {
          "name": "postscalex",
          "label": "Postscalex",
          "description": "Postscalex parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Post Page"
        },
        {
          "name": "postscaley",
          "label": "Postscaley",
          "description": "Postscaley parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Post Page"
        },
        {
          "name": "postscalez",
          "label": "Postscalez",
          "description": "Postscalez parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Post Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Tip: To designate a centre of interest for the camera that doesn't appear in your scene, create a Null object and disable its display flag. Then Parent the Camera to the newly created Null object, and tell the camera to look at this object using the Look At parameter. You can direct the attention of the camera by moving the Null object with the Select state. If you want to see both the camera and the Null object, enable the Null object's display flag, and use the Select state in an additional Viewport by clicking one of the icons in the top-right corner of the TouchDesigner window."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "referenceprop",
          "language": "python"
        },
        {
          "code": "referenceprop",
          "language": "python"
        },
        {
          "code": "referenceprop",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Modify",
      "useCases": [
        "Image positioning and scaling",
        "Rotation and skew operations",
        "Coordinate space conversions",
        "Animation and motion graphics"
      ],
      "url": "https://docs.derivative.ca/Transform_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.362Z",
      "parameterCount": 26
    },
    {
      "name": "Trim",
      "fullName": "Trim SOP",
      "category": "SOP",
      "description": "The Trim SOP cuts out parts of a spline surface, or uncuts previously cut pieces. When a portion of the surface is trimmed, it is not actually removed from the surface; instead, that part is made invisible. This means that you can still modify the surface (modify the position of its points, for instance) that is not displayed in order to affect the part that is displayed.\n\nThe surface can be trimmed by specifying open or closed profiles as inside or outside regions. The profiles need not be contained within the domain (UV space) of the surface; they can also be nested.\n\nOpen profiles are treated as follows: if both ends of the profile are inside the surface, the ends are connected to one another; if the profile's ends are outside the domain of the surface they are projected onto, that part of the surface appears to be cut away.\n\nYou will usually need a Trim SOP, Bridge SOP, or Profile SOP after a Project SOP.\n\nThe selection method employed for clarifying overlapping trim loops is the winding rule, which executes overlapping commands instead of having them cancel each other out.\n\nTip: Since only surfaces containing profile curves can be trimmed, you will always need a Project or Carve SOP in the chain above the Trim SOP.\n\ntrimSOP_Class\n\nThe following results were obtained by using a Project SOP to project two NURBS circles onto a NURBS grid. Then two Trim SOPs were added, one after the other, to the Project SOP . The first Trim SOP was set to Keep Inside, while the second Trim SOP had it's operation changed as indicated.\n\nThe illustrations show a Gouraud shaded view of the resulting geometry.\n\nExtra Information for the Trim SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "optype",
          "label": "Optype",
          "description": "Optype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "individual",
          "label": "Individual",
          "description": "Individual parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "bigloop",
          "label": "Bigloop",
          "description": "Bigloop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "trimtol",
          "label": "Trimtol",
          "description": "Trimtol parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "altitude",
          "label": "Altitude",
          "description": "Altitude parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [
        {
          "title": "Example",
          "content": "The following results were obtained by using a Project SOP to project two NURBS circles onto a NURBS grid. Then two Trim SOPs were added, one after the other, to the Project SOP . The first Trim SOP was set to Keep Inside, while the second Trim SOP had it's operation changed as indicated.\n\nThe illustrations show a Gouraud shaded view of the resulting geometry."
        }
      ],
      "tips": [
        "Tip: Since only surfaces containing profile curves can be trimmed, you will always need a Project or Carve SOP in the chain above the Trim SOP.",
        "Tip: An outer trim loop must be generated the first time you punch a hole in the surface, but not if you just keep the contents of that hole and throw away the rest. By default, the outer loop (which goes all around the domain boundary) is built for you automatically. Sometimes, however, you first do a Keep Inside, then a Keep Outside with an area that's not inside the preserved regions, so you may want the outer curve at that point. That is when this parameter is useful."
      ],
      "related": [],
      "codeSnippets": [
        {
          "code": "keepnatural",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Trim_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.381Z",
      "parameterCount": 6
    },
    {
      "name": "Tristrip",
      "fullName": "Tristrip SOP",
      "category": "SOP",
      "description": "The Tristrip SOP convert geometry into triangle strips. Triangle strips are faster to render than regular triangles or quads.\n\ntristripSOP_Class\n\nExtra Information for the Tristrip SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "constrainstriplength",
          "label": "Constrainstriplength",
          "description": "Constrainstriplength parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "maxstriplength",
          "label": "Maxstriplength",
          "description": "Maxstriplength parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "constrainstriplength",
          "language": "python"
        },
        {
          "code": "maxstriplength",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "3D scene visualization",
        "Real-time graphics rendering",
        "Multi-pass rendering workflows",
        "Shadow and reflection generation"
      ],
      "url": "https://docs.derivative.ca/Tristrip_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.392Z",
      "parameterCount": 3
    },
    {
      "name": "Tube",
      "fullName": "Tube SOP",
      "category": "SOP",
      "description": "The Tube SOP generates open or closed tubes, cones, or pyramids along the X, Y or Z axes. It outputs as meshes, polygons or simply a tube Primitive.\n\ntubeSOP_Class\n\nExtra Information for the Tube SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditorwikieditorwikieditor2022.241402021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "type",
          "label": "Type",
          "description": "Type parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Rows and Columns",
              "value": "rowcol",
              "description": "Both Rows and Columns. Looks like Quads in wire frame display, but all polygons are open (if the primitive type is polygon)."
            }
          ],
          "section": "Tube Page"
        },
        {
          "name": "surftype",
          "label": "Surftype",
          "description": "Surftype parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": null,
          "section": "Tube Page"
        },
        {
          "name": "orient",
          "label": "Orient",
          "description": "Orient parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Tube Page"
        },
        {
          "name": "orientbounds",
          "label": "Orientbounds",
          "description": "Orientbounds parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Tube Page"
        },
        {
          "name": "modifybounds",
          "label": "Modifybounds",
          "description": "Modifybounds parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Tube Page"
        },
        {
          "name": "rord",
          "label": "Rord",
          "description": "Rord parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Tube Page"
        },
        {
          "name": "t",
          "label": "T",
          "description": "T parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Tube Page"
            },
            {
              "label": "Rows",
              "value": "rows",
              "description": "Creates horizontal lines."
            },
            {
              "label": "Columns",
              "value": "cols",
              "description": "Creates vertical lines."
            },
            {
              "label": "Rows and Columns",
              "value": "rowcol",
              "description": "Both Rows and Columns. Looks like Quads in wire frame display, but all polygons are open (if the primitive type is polygon)."
            },
            {
              "label": "Triangles",
              "value": "triangles",
              "description": "Build the grid with Triangles."
            },
            {
              "label": "Quadrilaterals",
              "value": "quads",
              "description": "Generates sides composed of quadrilaterals (default)."
            },
            {
              "label": "Alternating Triangles",
              "value": "alttriangles",
              "description": "Generates triangles that are opposed; similar to the Triangles option."
            },
            {
              "label": "Off",
              "value": "off",
              "description": "No UV coordinates added to surface."
            }
          ],
          "section": "Tube Page"
        },
        {
          "name": "r",
          "label": "R",
          "description": "R parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Tube Page"
            },
            {
              "label": "Rows",
              "value": "rows",
              "description": "Creates horizontal lines."
            },
            {
              "label": "Columns",
              "value": "cols",
              "description": "Creates vertical lines."
            },
            {
              "label": "Rows and Columns",
              "value": "rowcol",
              "description": "Both Rows and Columns. Looks like Quads in wire frame display, but all polygons are open (if the primitive type is polygon)."
            },
            {
              "label": "Triangles",
              "value": "triangles",
              "description": "Build the grid with Triangles."
            },
            {
              "label": "Quadrilaterals",
              "value": "quads",
              "description": "Generates sides composed of quadrilaterals (default)."
            },
            {
              "label": "Alternating Triangles",
              "value": "alttriangles",
              "description": "Generates triangles that are opposed; similar to the Triangles option."
            },
            {
              "label": "Off",
              "value": "off",
              "description": "No UV coordinates added to surface."
            }
          ],
          "section": "Tube Page"
        },
        {
          "name": "rad",
          "label": "Rad",
          "description": "Rad parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Tube Page"
        },
        {
          "name": "height",
          "label": "Height",
          "description": "Height parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Tube Page"
        },
        {
          "name": "reverseanchors",
          "label": "Reverseanchors",
          "description": "Reverseanchors parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Tube Page"
        },
        {
          "name": "anchoru",
          "label": "Anchoru",
          "description": "Anchoru parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Tube Page"
        },
        {
          "name": "anchorv",
          "label": "Anchorv",
          "description": "Anchorv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Tube Page"
        },
        {
          "name": "anchorw",
          "label": "Anchorw",
          "description": "Anchorw parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Tube Page"
        },
        {
          "name": "imperfect",
          "label": "Imperfect",
          "description": "Imperfect parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Tube Page"
        },
        {
          "name": "rows",
          "label": "Rows",
          "description": "Creates horizontal lines.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Rows",
              "value": "rows",
              "description": "Creates horizontal lines."
            },
            {
              "label": "Rows and Columns",
              "value": "rowcol",
              "description": "Both Rows and Columns. Looks like Quads in wire frame display, but all polygons are open (if the primitive type is polygon)."
            }
          ],
          "section": "Detail Page"
        },
        {
          "name": "cols",
          "label": "Cols",
          "description": "Creates vertical lines.",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Columns",
              "value": "cols",
              "description": "Creates vertical lines."
            }
          ],
          "section": "Detail Page"
        },
        {
          "name": "orderu",
          "label": "Orderu",
          "description": "Orderu parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        },
        {
          "name": "orderv",
          "label": "Orderv",
          "description": "Orderv parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        },
        {
          "name": "cap",
          "label": "Cap",
          "description": "Cap parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        },
        {
          "name": "texture",
          "label": "Texture",
          "description": "Texture parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        },
        {
          "name": "normals",
          "label": "Normals",
          "description": "Normals parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Detail Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "alttriangles",
          "language": "python"
        },
        {
          "code": "orientbounds",
          "language": "python"
        },
        {
          "code": "modifybounds",
          "language": "python"
        },
        {
          "code": "reverseanchors",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Tube_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.459Z",
      "parameterCount": 22
    },
    {
      "name": "Twist",
      "fullName": "Twist SOP",
      "category": "SOP",
      "description": "The Twist SOP performs non-linear deformations such as bend, linear taper, shear, squash and stretch, taper and twist. Each deformation will distort the object in one or more axes.\n\ntwistSOP_Class\n\nExtra Information for the Twist SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "op",
          "label": "Op",
          "description": "Op parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Linear Taper",
              "value": "ltaper",
              "description": "Tapers the input geometry as with the Taper option; however, only the edges remain straight through the Taper operation."
            },
            {
              "label": "Linear",
              "value": "Taper",
              "description": "Strength and Roll have no effect for this option."
            }
          ],
          "section": "Page"
        },
        {
          "name": "paxis",
          "label": "Paxis",
          "description": "Paxis parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "saxis",
          "label": "Saxis",
          "description": "Saxis parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "p",
          "label": "P",
          "description": "P parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "2",
              "value": "Parameters",
              "description": "Page"
            },
            {
              "label": "Twist",
              "value": "twist",
              "description": "Rotates the input geometry around the Primary Axis."
            },
            {
              "label": "Bend",
              "value": "bend",
              "description": "Bends the input geometry about the Primary Axis while keeping points on the Secondary Axis stationary."
            },
            {
              "label": "Shear",
              "value": "shear",
              "description": "Shears the input geometry along the Secondary Axis while looking down the Primary Axis."
            },
            {
              "label": "Taper",
              "value": "taper",
              "description": "Tapers the input geometry along the Secondary Axis while looking down the Primary Axis."
            },
            {
              "label": "Linear Taper",
              "value": "ltaper",
              "description": "Tapers the input geometry as with the Taper option; however, only the edges remain straight through the Taper operation."
            },
            {
              "label": "Linear",
              "value": "Taper",
              "description": "Strength and Roll have no effect for this option."
            },
            {
              "label": "Squash and",
              "value": "Stretch",
              "description": "Strength and Roll are used to maintain the apparent volume of the source geometry."
            }
          ],
          "section": "Page"
        },
        {
          "name": "strength",
          "label": "Strength",
          "description": "Strength parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Linear",
              "value": "Taper",
              "description": "Strength and Roll have no effect for this option."
            },
            {
              "label": "Squash and",
              "value": "Stretch",
              "description": "Strength and Roll are used to maintain the apparent volume of the source geometry."
            }
          ],
          "section": "Page"
        },
        {
          "name": "roll",
          "label": "Roll",
          "description": "Roll parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "Linear",
              "value": "Taper",
              "description": "Strength and Roll have no effect for this option."
            },
            {
              "label": "Squash and",
              "value": "Stretch",
              "description": "Strength and Roll are used to maintain the apparent volume of the source geometry."
            }
          ],
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [
        "Note: To be certain to see the effects of the Twist SOP, make sure you have enough divisions along the edges. By using a centre that is different from that of the object you can improve your control of the object. Try moving the pivot point to the bottom of an object that you are squashing and stretching.",
        "Note: To be certain to see the effects of the Twist SOP, make sure you have enough divisions along the edges. By using a centre that is different from that of the object you can improve your control of the object. Try moving the pivot point to the bottom of an object that you are squashing and stretching."
      ],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "Deform",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Twist_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.468Z",
      "parameterCount": 7
    },
    {
      "name": "Vertex",
      "fullName": "Vertex SOP",
      "category": "SOP",
      "description": "The Vertex SOP allows you to edit/create attributes on a per-vertex (rather than per-point) basis. It is similar to the Point SOP in this respect. It supports two inputs, and will inherit the first input source by default.  If the second input have less primitives than the first input, it will cycle through the primitives and match the vertices.  If the primitive in the first input has more vertices than the matching primitive in the second input, the extra vertices are ignored.\n\nThere are currently three vertex attributes supported:\n\nWhen the attribute is defined, it can only occur on either points or vertices, but not both. Thus, if the input geometry has a point attribute for diffuse color, the attribute will automatically be \"elevated\" to be a vertex attribute (if diffuse colors are added in the Vertex SOP).\n\nThe SOP processes every vertex of every primitive. For each vertex processed, there are variables which allow you to know the:\n\nThere are also local variables to find out the values of some point attributes (i.e. position, normal - if they exist), in addition to vertex attributes.  To access the attributes of the second input source, append a 2 to the variable.\n\nvertexSOP_Class\n\nYou can have set of images in a TOP, and apply all of them in one material to different parts of an object. This allows you to have a pre-rendered animation clip with the clip playing at different speeds and time offsets on different surfaces.\n\nYou can adjust the material frame time by the first vertex/point texture W component (texture coordinated are U (horizontal), V (vertical) and W (one of a set of texture images). A texture (W) value of -1 moves back in time 1 frame. This lets you apply different frames to many polygons simultaneously using the Vertex SOP, or Point SOP.\n\nExtra Information for the Vertex SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditor2021.100002020.200002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Vertex Page"
        },
        {
          "name": "doclr",
          "label": "Doclr",
          "description": "Doclr parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Vertex Page"
        },
        {
          "name": "diff",
          "label": "Diff",
          "description": "Diff parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Vertex Page"
        },
        {
          "name": "alpha",
          "label": "Alpha",
          "description": "Alpha parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Vertex Page"
        },
        {
          "name": "douvw",
          "label": "Douvw",
          "description": "Douvw parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Vertex Page"
        },
        {
          "name": "map",
          "label": "Map",
          "description": "Map parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Vertex Page"
        },
        {
          "name": "docrease",
          "label": "Docrease",
          "description": "Docrease parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Vertex Page"
        },
        {
          "name": "crease",
          "label": "Crease",
          "description": "Crease parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Vertex Page"
        },
        {
          "name": "attr",
          "label": "Attr",
          "description": "Attr parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Attributes Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        },
        {
          "type": "SOP",
          "description": "Input 1:  -",
          "index": 1
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "me.inputColor[0]",
          "language": "python"
        },
        {
          "code": "me.inputColor[1]",
          "language": "python"
        },
        {
          "code": "me.inputColor[2]",
          "language": "python"
        },
        {
          "code": "me.inputColor[3]",
          "language": "python"
        },
        {
          "code": "me.inputColor[3]",
          "language": "python"
        },
        {
          "code": "me.inputTexture[0]",
          "language": "python"
        },
        {
          "code": "me.inputTexture[1]",
          "language": "python"
        },
        {
          "code": "me.inputTexture[2]",
          "language": "python"
        },
        {
          "code": "Crease Weight",
          "language": "python"
        },
        {
          "code": "attr0value1",
          "language": "python"
        },
        {
          "code": "attr0value2",
          "language": "python"
        },
        {
          "code": "attr0value3",
          "language": "python"
        },
        {
          "code": "attr0value4",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "An Operator Family that creates, composites and modifies images, and reads/writes images and movies to/from files and the network. TOPs run on the graphics card's GPU.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "3D scene visualization",
        "Real-time graphics rendering",
        "Multi-pass rendering workflows",
        "Shadow and reflection generation"
      ],
      "url": "https://docs.derivative.ca/Vertex_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.478Z",
      "parameterCount": 9
    },
    {
      "name": "Wireframe",
      "fullName": "Wireframe SOP",
      "category": "SOP",
      "description": "The Wireframe SOP converts edges to tubes and points to spheres, creating the look of a wire frame structure in renderings. This is ideal for modelling tube structures and pipes.\n\nwireframeSOP_Class\n\nExtra Information for the Wireframe SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\n2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "group",
          "label": "Group",
          "description": "Group parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "radius",
          "label": "Radius",
          "description": "Radius parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "corners",
          "label": "Corners",
          "description": "Corners parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "caps",
          "label": "Caps",
          "description": "Caps parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "remove",
          "label": "Remove",
          "description": "Remove parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "fast",
          "label": "Fast",
          "description": "Fast parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [
        {
          "type": "SOP",
          "description": "Input 0:  -",
          "index": 0
        }
      ],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "3D scene visualization",
        "Real-time graphics rendering",
        "Multi-pass rendering workflows",
        "Shadow and reflection generation"
      ],
      "url": "https://docs.derivative.ca/Wireframe_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.488Z",
      "parameterCount": 6
    },
    {
      "name": "ZED",
      "fullName": "ZED SOP",
      "category": "SOP",
      "description": "The ZED SOP uses the ZED to scan and create geometry by moving it around the room or an object of interest. To know what ZED SDK we are using, refer to the ZED article.\n\nSee ZED TOP, ZED CHOP and ZED.\n\nzedSOP_Class\n\nExtra Information for the ZED SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditor2021.100002018.28070before 2018.28070",
      "parameters": [
        {
          "name": "camera",
          "label": "Camera",
          "description": "Camera parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "No Preview",
              "value": "nopreview",
              "description": "No preview is shown when camera samples."
            }
          ],
          "section": "Page"
        },
        {
          "name": "sample",
          "label": "Sample",
          "description": "Sample parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "No Preview",
              "value": "nopreview",
              "description": "No preview is shown when camera samples."
            }
          ],
          "section": "Page"
        },
        {
          "name": "reset",
          "label": "Reset",
          "description": "Reset parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "resetpulse",
          "label": "Resetpulse",
          "description": "Resetpulse parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "preview",
          "label": "Preview",
          "description": "Preview parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "No Preview",
              "value": "nopreview",
              "description": "No preview is shown when camera samples."
            },
            {
              "label": "Limited Preview",
              "value": "limited",
              "description": "The level of detail of the preview is limited."
            },
            {
              "label": "Full Preview",
              "value": "full",
              "description": "Preview displays all available points."
            }
          ],
          "section": "Page"
        },
        {
          "name": "maxmemory",
          "label": "Maxmemory",
          "description": "Maxmemory parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "resolution",
          "label": "Resolution",
          "description": "Resolution parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "range",
          "label": "Range",
          "description": "Range parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "normals",
          "label": "Normals",
          "description": "Normals parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "texture",
          "label": "Texture",
          "description": "Texture parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "filter",
          "label": "Filter",
          "description": "Filter parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "consolidatepts",
          "label": "Consolidatepts",
          "description": "Consolidatepts parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "consolidatepts",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "An Operator Family that creates, composites and modifies images, and reads/writes images and movies to/from files and the network. TOPs run on the graphics card's GPU.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/ZED_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.496Z",
      "parameterCount": 12
    },
    {
      "name": "Experimental:ZED",
      "fullName": "Experimental:ZED SOP",
      "category": "SOP",
      "description": "The ZED SOP uses the ZED to scan and create geometry by moving it around the room or an object of interest. To know what ZED SDK we are using, refer to the ZED article.\n\nSee ZED TOP, ZED CHOP and ZED.\n\nzedSOP_Class\n\nExtra Information for the ZED SOP can be accessed via an Info CHOP.\n\nTouchDesigner Build: Latest\\nwikieditorwikieditorwikieditorwikieditorwikieditorwikieditor",
      "parameters": [
        {
          "name": "zedtop",
          "label": "Zedtop",
          "description": "Zedtop parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "sample",
          "label": "Sample",
          "description": "Sample parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "No Preview",
              "value": "nopreview",
              "description": "No preview is shown when camera samples."
            }
          ],
          "section": "Page"
        },
        {
          "name": "reset",
          "label": "Reset",
          "description": "Reset parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "resetpulse",
          "label": "Resetpulse",
          "description": "Resetpulse parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "preview",
          "label": "Preview",
          "description": "Preview parameter",
          "type": "Menu",
          "default": "",
          "range": null,
          "options": [
            {
              "label": "No Preview",
              "value": "nopreview",
              "description": "No preview is shown when camera samples."
            },
            {
              "label": "Limited Preview",
              "value": "limited",
              "description": "The level of detail of the preview is limited."
            },
            {
              "label": "Full Preview",
              "value": "full",
              "description": "Preview displays all available points."
            }
          ],
          "section": "Page"
        },
        {
          "name": "maxmemory",
          "label": "Maxmemory",
          "description": "Maxmemory parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "resolution",
          "label": "Resolution",
          "description": "Resolution parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "range",
          "label": "Range",
          "description": "Range parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "normals",
          "label": "Normals",
          "description": "Normals parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "texture",
          "label": "Texture",
          "description": "Texture parameter",
          "type": "Str",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "filter",
          "label": "Filter",
          "description": "Filter parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        },
        {
          "name": "consolidatepts",
          "label": "Consolidatepts",
          "description": "Consolidatepts parameter",
          "type": "Float",
          "default": "",
          "range": null,
          "options": null,
          "section": "Page"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "SOP",
          "description": "SOP output",
          "index": 0
        }
      ],
      "examples": [],
      "tips": [],
      "related": [],
      "codeSnippets": [
        {
          "code": "consolidatepts",
          "language": "python"
        }
      ],
      "shortcuts": [],
      "performanceNotes": [
        "last_vbo_update_time - Time spent in another thread updating geometry data on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "last_meta_vbo_update_time - Time spent in another thread updating meta surface geometry data (such as metaballs or nurbs) on the GPU from the SOP's CPU data. As it is part of another thread, this time is not part of the usual frame time.",
        "A Operator Family that reads, creates and modifies 3D points, polygons, lines, particles, surfaces, spheres and meatballs. Particles and point clouds are now done primarily on the GPU using TOPs.",
        "An Operator Family that creates, composites and modifies images, and reads/writes images and movies to/from files and the network. TOPs run on the graphics card's GPU.",
        "The Graphics Processing Unit. This is the high-speed, many-core processor of the graphics card/chip that takes geometry, images and data from the CPU and creates images and processed data."
      ],
      "subcategory": "General",
      "useCases": [
        "SOP data processing",
        "Real-time parameter control"
      ],
      "url": "https://docs.derivative.ca/Experimental:ZED_SOP",
      "scraped": true,
      "scrapedAt": "2025-08-01T23:56:18.565Z",
      "parameterCount": 12
    }
  ]
}